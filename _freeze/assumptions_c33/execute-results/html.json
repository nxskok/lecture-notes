{
  "hash": "8c9acae3cfd57b33735778c211a84387",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Assumptions\"\n---\n\n\n\n\n## Assumptions\n\n- The $t$ procedures we have seen so far come with assumption of normally-distributed data\n- but how much does that normality matter?\n- Central Limit Theorem says that sampling distribution of sample mean is \"approximately normal\" if sample size is \"large\".\n- Hence same applies to difference of two sample means.\n- How to use this in practice? Draw a picture and make a call about whether sample size large enough.\n\n## Blue Jays attendances\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(jays, aes(sample = attendance)) + \n  stat_qq() + stat_qq_line()\n```\n\n::: {.cell-output-display}\n![](assumptions_c33_files/figure-revealjs/inference-1-R-66-1.png){width=960}\n:::\n:::\n\n\n\n\n## Comments\n\n- Distribution of attendances somewhat skewed to the right (because of the short lower tail and the sort-of curve)\n- Sample size $n = 25$ is reasonably large in  Central Limit Theorem terms\n- Use of $t$ *may* be OK here despite skewed shape.\n\n## Learning to read\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n- Make normal quantile plots, one for each sample:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(kids, aes(sample = score)) + \n  stat_qq() + stat_qq_line() +\n  facet_wrap(~ group)\n```\n\n::: {.cell-output-display}\n![](assumptions_c33_files/figure-revealjs/inference-1-R-14-1.png){width=960}\n:::\n:::\n\n\n\n\n## Comments\n\n- with sample sizes over 20 in each group, these are easily normal enough to use a $t$-test.\n- the (sampling distribution of the) difference between two sample means tends to have a more normal distribution than either sample mean individually, so that two-sample $t$ tends to be better than you'd guess.\n\n## Pain relief\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n- With matched pairs, assumption is of normality of *differences*, so work those out first:\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npain %>% mutate(diff = druga - drugb) -> pain\npain\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"subject\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"druga\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"drugb\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"diff\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"2.0\",\"3\":\"3.5\",\"4\":\"-1.5\"},{\"1\":\"2\",\"2\":\"3.6\",\"3\":\"5.7\",\"4\":\"-2.1\"},{\"1\":\"3\",\"2\":\"2.6\",\"3\":\"2.9\",\"4\":\"-0.3\"},{\"1\":\"4\",\"2\":\"2.6\",\"3\":\"2.4\",\"4\":\"0.2\"},{\"1\":\"5\",\"2\":\"7.3\",\"3\":\"9.9\",\"4\":\"-2.6\"},{\"1\":\"6\",\"2\":\"3.4\",\"3\":\"3.3\",\"4\":\"0.1\"},{\"1\":\"7\",\"2\":\"14.9\",\"3\":\"16.7\",\"4\":\"-1.8\"},{\"1\":\"8\",\"2\":\"6.6\",\"3\":\"6.0\",\"4\":\"0.6\"},{\"1\":\"9\",\"2\":\"2.3\",\"3\":\"3.8\",\"4\":\"-1.5\"},{\"1\":\"10\",\"2\":\"2.0\",\"3\":\"4.0\",\"4\":\"-2.0\"},{\"1\":\"11\",\"2\":\"6.8\",\"3\":\"9.1\",\"4\":\"-2.3\"},{\"1\":\"12\",\"2\":\"8.5\",\"3\":\"20.9\",\"4\":\"-12.4\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Normality of differences\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(pain,aes(sample=diff)) + stat_qq() + stat_qq_line()\n```\n\n::: {.cell-output-display}\n![](assumptions_c33_files/figure-revealjs/inference-4b-R-67-1.png){width=960}\n:::\n:::\n\n\n\n\n## Comments\n\n- This is very non-normal (the low outlier)\n- The sample size of $n = 12$ is not large\n- We should have concerns about our matched pairs $t$-test.\n\n## Doing things properly\n\n- The right way to use a $t$ procedure:\n  - draw a graph of our data (one of the standard graphs, or normal quantile plot)\n  - use the graph to assess sufficient normality given the sample size\n  - for a two-sample test, assess equality of spreads (boxplot easier for this)\n  - if necessary, express our doubts about the $t$ procedure (for now), or do a better test (later).\n\n## Looking ahead\n\n- Looking at a normal quantile plot and assessing it with the sample size seems rather arbitrary. Can we do better? (Yes: using the bootstrap, later.)\n- What to do if the $t$ procedure is not to be trusted? Use a different test (later):\n  - one sample: sign test\n  - two samples: Mood's median test\n  - matched pairs: sign test on differences.\n   \n- If you have heard about the signed rank or rank sum tests: they come with extra assumptions that are usually not satisfied if normality fails.\n",
    "supporting": [
      "assumptions_c33_files/figure-revealjs"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"assumptions_c33_files/libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"assumptions_c33_files/libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}