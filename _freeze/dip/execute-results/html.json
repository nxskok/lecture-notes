{
  "hash": "b7bbaa8018fd2a19b007b8ca6a796d2b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Durations, intervals, and periods\"\n---\n\n\n\n\n## Packages for this section\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n\nDates and times live in a package called `lubridate`, but this is now part of the `tidyverse`.\n\n## Exact time intervals\n\nWe previously got fractional days (of stays in hospital):\n\n\\small\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_url <- \"http://ritsokiguess.site/datafiles/hospital.csv\"\nstays <- read_csv(my_url)\nstays %>% mutate(stay_days = (discharge - admit) / ddays(1))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"admit\"],\"name\":[1],\"type\":[\"dttm\"],\"align\":[\"right\"]},{\"label\":[\"discharge\"],\"name\":[2],\"type\":[\"dttm\"],\"align\":[\"right\"]},{\"label\":[\"stay_days\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1981-12-10 22:00:00\",\"2\":\"1982-01-03 14:00:00\",\"3\":\"23.666667\"},{\"1\":\"2014-03-07 14:00:00\",\"2\":\"2014-03-08 09:30:00\",\"3\":\"0.812500\"},{\"1\":\"2016-08-31 21:00:00\",\"2\":\"2016-09-02 17:00:00\",\"3\":\"1.833333\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\nbut what if we wanted days, hours and minutes?\n\n## Intervals\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstays %>% mutate(stay = admit %--% discharge)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"admit\"],\"name\":[1],\"type\":[\"dttm\"],\"align\":[\"right\"]},{\"label\":[\"discharge\"],\"name\":[2],\"type\":[\"dttm\"],\"align\":[\"right\"]},{\"label\":[\"stay\"],\"name\":[3],\"type\":[\"Interval\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1981-12-10 22:00:00\",\"2\":\"1982-01-03 14:00:00\",\"3\":\"1981-12-10 22:00:00 UTC--1982-01-03 14:00:00 UTC\"},{\"1\":\"2014-03-07 14:00:00\",\"2\":\"2014-03-08 09:30:00\",\"3\":\"2014-03-07 14:00:00 UTC--2014-03-08 09:30:00 UTC\"},{\"1\":\"2016-08-31 21:00:00\",\"2\":\"2016-09-02 17:00:00\",\"3\":\"2016-08-31 21:00:00 UTC--2016-09-02 17:00:00 UTC\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\n\n- These are called *intervals*: they have a start point and an end point.\n\n## Periods\n\nTo work out the exact length of an interval, in human units, turn it into a `period`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstays %>% mutate(stay = as.period(admit %--% discharge))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"admit\"],\"name\":[1],\"type\":[\"dttm\"],\"align\":[\"right\"]},{\"label\":[\"discharge\"],\"name\":[2],\"type\":[\"dttm\"],\"align\":[\"right\"]},{\"label\":[\"stay\"],\"name\":[3],\"type\":[\"Period\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1981-12-10 22:00:00\",\"2\":\"1982-01-03 14:00:00\",\"3\":\"23d 16H 0M 0S\"},{\"1\":\"2014-03-07 14:00:00\",\"2\":\"2014-03-08 09:30:00\",\"3\":\"19H 30M 0S\"},{\"1\":\"2016-08-31 21:00:00\",\"2\":\"2016-09-02 17:00:00\",\"3\":\"1d 20H 0M 0S\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\nA period is exact as long as it has a start and an end (accounting for daylight savings, leap years etc).\n\n## Completed days\n\nTake `day` of the periods:\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstays %>% mutate(stay = as.period(admit %--% discharge)) %>% \n  mutate(days_of_stay = day(stay))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"admit\"],\"name\":[1],\"type\":[\"dttm\"],\"align\":[\"right\"]},{\"label\":[\"discharge\"],\"name\":[2],\"type\":[\"dttm\"],\"align\":[\"right\"]},{\"label\":[\"stay\"],\"name\":[3],\"type\":[\"Period\"],\"align\":[\"right\"]},{\"label\":[\"days_of_stay\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1981-12-10 22:00:00\",\"2\":\"1982-01-03 14:00:00\",\"3\":\"23d 16H 0M 0S\",\"4\":\"23\"},{\"1\":\"2014-03-07 14:00:00\",\"2\":\"2014-03-08 09:30:00\",\"3\":\"19H 30M 0S\",\"4\":\"0\"},{\"1\":\"2016-08-31 21:00:00\",\"2\":\"2016-09-02 17:00:00\",\"3\":\"1d 20H 0M 0S\",\"4\":\"1\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Completed hours 1/2\n\n- Not quite what you think:\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstays %>% mutate(stay = as.period(admit %--% discharge)) %>% \n  mutate(hours_of_stay = hour(stay))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"admit\"],\"name\":[1],\"type\":[\"dttm\"],\"align\":[\"right\"]},{\"label\":[\"discharge\"],\"name\":[2],\"type\":[\"dttm\"],\"align\":[\"right\"]},{\"label\":[\"stay\"],\"name\":[3],\"type\":[\"Period\"],\"align\":[\"right\"]},{\"label\":[\"hours_of_stay\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1981-12-10 22:00:00\",\"2\":\"1982-01-03 14:00:00\",\"3\":\"23d 16H 0M 0S\",\"4\":\"16\"},{\"1\":\"2014-03-07 14:00:00\",\"2\":\"2014-03-08 09:30:00\",\"3\":\"19H 30M 0S\",\"4\":\"19\"},{\"1\":\"2016-08-31 21:00:00\",\"2\":\"2016-09-02 17:00:00\",\"3\":\"1d 20H 0M 0S\",\"4\":\"20\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n- These are completed hours *within* days. \n\n## Completed hours 2/2\n\n- To get total hours, count each day as 24 hours also:\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstays %>% mutate(stay = as.period(admit %--% discharge)) %>% \n  mutate(hours_of_stay = hour(stay) + 24*day(stay))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"admit\"],\"name\":[1],\"type\":[\"dttm\"],\"align\":[\"right\"]},{\"label\":[\"discharge\"],\"name\":[2],\"type\":[\"dttm\"],\"align\":[\"right\"]},{\"label\":[\"stay\"],\"name\":[3],\"type\":[\"Period\"],\"align\":[\"right\"]},{\"label\":[\"hours_of_stay\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1981-12-10 22:00:00\",\"2\":\"1982-01-03 14:00:00\",\"3\":\"23d 16H 0M 0S\",\"4\":\"568\"},{\"1\":\"2014-03-07 14:00:00\",\"2\":\"2014-03-08 09:30:00\",\"3\":\"19H 30M 0S\",\"4\":\"19\"},{\"1\":\"2016-08-31 21:00:00\",\"2\":\"2016-09-02 17:00:00\",\"3\":\"1d 20H 0M 0S\",\"4\":\"44\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Durations\n\n- What's the difference between `duration` and `period`?\n\n\\small\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstays %>% mutate(stay = as.duration(admit %--% discharge)) \n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"admit\"],\"name\":[1],\"type\":[\"dttm\"],\"align\":[\"right\"]},{\"label\":[\"discharge\"],\"name\":[2],\"type\":[\"dttm\"],\"align\":[\"right\"]},{\"label\":[\"stay\"],\"name\":[3],\"type\":[\"Duration\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1981-12-10 22:00:00\",\"2\":\"1982-01-03 14:00:00\",\"3\":\"2044800s (~3.38 weeks)\"},{\"1\":\"2014-03-07 14:00:00\",\"2\":\"2014-03-08 09:30:00\",\"3\":\"70200s (~19.5 hours)\"},{\"1\":\"2016-08-31 21:00:00\",\"2\":\"2016-09-02 17:00:00\",\"3\":\"158400s (~1.83 days)\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n- A duration is always a number of *seconds*. \n- Also shown is an approx equivalent on a more human scale (calculated from seconds).\n\n## Sometimes it matters\n\n- Days and hours are always the same length (as a number of seconds).\n- Months and years are not always the same length:\n  - months have different numbers of days\n  - years can be leap years or not\n  - the actual length of 2 months depends *which* 2 months:\n  \n\\small\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntribble(\n  ~start, ~end,\n  ymd(\"2020-01-15\"), ymd(\"2020-03-15\"),\n  ymd(\"2020-07-15\"), ymd(\"2020-09-15\")\n) %>% mutate(period = as.period(start %--% end)) %>% \n  mutate(duration = as.duration(start %--% end))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"start\"],\"name\":[1],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"end\"],\"name\":[2],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"period\"],\"name\":[3],\"type\":[\"Period\"],\"align\":[\"right\"]},{\"label\":[\"duration\"],\"name\":[4],\"type\":[\"Duration\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"2020-01-15\",\"2\":\"2020-03-15\",\"3\":\"2m 0d 0H 0M 0S\",\"4\":\"5184000s (~8.57 weeks)\"},{\"1\":\"2020-07-15\",\"2\":\"2020-09-15\",\"3\":\"2m 0d 0H 0M 0S\",\"4\":\"5356800s (~8.86 weeks)\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Comments\n\n- Both periods are exactly two months\n- but they have a different duration in seconds\n- the first two-month period is shorter because it contains the short month February\n- the second two-month period is longer because both July and August have 31 days.\n\n## Manchester United\n\nSometime in December 2019 or January 2020, I downloaded some information about the players that were then in the squad of the famous Manchester United Football (soccer) Club. We are going to use the players' ages (as given) to figure out exactly when the download happened.\n  \n\\small\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_url <- \"http://ritsokiguess.site/datafiles/manu.csv\"\nread_csv(my_url) %>% \n  select(name, date_of_birth, age) -> man_united\n```\n:::\n\n\n\n\n\\normalsize\n\n## The data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nman_united\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"name\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"date_of_birth\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"David de Gea Quintana\",\"2\":\"7 November 1990\",\"3\":\"29\"},{\"1\":\"Lee Grant\",\"2\":\"27 January 1983\",\"3\":\"36\"},{\"1\":\"Sergio Germán Romero\",\"2\":\"22 February 1987\",\"3\":\"32\"},{\"1\":\"Victor Nilsson Lindelöf\",\"2\":\"17 July 1994\",\"3\":\"25\"},{\"1\":\"Eric Bertrand  Bailly\",\"2\":\"12 April 1994\",\"3\":\"25\"},{\"1\":\"Phil Jones\",\"2\":\"21 February 1992\",\"3\":\"27\"},{\"1\":\"Harry Maguire\",\"2\":\"5 March 1993\",\"3\":\"26\"},{\"1\":\"Faustino Marcos Alberto Rojo\",\"2\":\"20 March 1990\",\"3\":\"29\"},{\"1\":\"Ashley Young\",\"2\":\"9 July 1985\",\"3\":\"34\"},{\"1\":\"José Diogo Dalot Teixeira\",\"2\":\"18 March 1999\",\"3\":\"20\"},{\"1\":\"Luke Shaw\",\"2\":\"12 July 1995\",\"3\":\"24\"},{\"1\":\"Timothy Evans Fosu-Mensah\",\"2\":\"2 January 1998\",\"3\":\"21\"},{\"1\":\"Aaron Wan-Bissaka\",\"2\":\"26 November 1997\",\"3\":\"22\"},{\"1\":\"Axel Tuanzebe\",\"2\":\"14 November 1997\",\"3\":\"22\"},{\"1\":\"Brandon Williams\",\"2\":\"3 September 2000\",\"3\":\"19\"},{\"1\":\"Paul Pogba\",\"2\":\"15 March 1993\",\"3\":\"26\"},{\"1\":\"Juan Manuel Mata García\",\"2\":\"28 April 1988\",\"3\":\"31\"},{\"1\":\"Jesse Lingard\",\"2\":\"15 December 1992\",\"3\":\"26\"},{\"1\":\"Andreas Hoelgebaum Pereira\",\"2\":\"1 January 1996\",\"3\":\"23\"},{\"1\":\"Frederico Rodrigues Santos\",\"2\":\"5 March 1993\",\"3\":\"26\"},{\"1\":\"Daniel James\",\"2\":\"10 November 1997\",\"3\":\"22\"},{\"1\":\"Angel Gomes\",\"2\":\"31 August 2000\",\"3\":\"19\"},{\"1\":\"Nemanja Matić\",\"2\":\"1 August 1988\",\"3\":\"31\"},{\"1\":\"James Garner\",\"2\":\"13 March 2001\",\"3\":\"18\"},{\"1\":\"Scott McTominay\",\"2\":\"8 December 1996\",\"3\":\"23\"},{\"1\":\"Anthony Martial\",\"2\":\"5 December 1995\",\"3\":\"24\"},{\"1\":\"Marcus Rashford\",\"2\":\"31 October 1997\",\"3\":\"22\"},{\"1\":\"Mason Greenwood\",\"2\":\"1 October 2001\",\"3\":\"18\"},{\"1\":\"Tahith Chong\",\"2\":\"4 December 1999\",\"3\":\"20\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n## Ages\n\n- A player's age is the number of *completed* years since their birth\n- This suggests:\n  - guessing a download date\n  - working out time since birth as *period*\n  - extracting number of years\n  \n- After that, see if our calculations of age match actual ages\n\n\n## Guess download date and work out ages\n\nGuess January 10, 2020 as download date (just to pick a date):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nguess <- ymd(\"2020-01-10\")\nman_united %>% \n  mutate(dob = dmy(date_of_birth)) %>% \n  mutate(age_period = as.period(dob %--% guess)) %>% \n  mutate(age_years = year(age_period)) -> d\n```\n:::\n\n\n\n\n## Results (just the ages)\n\n\\scriptsize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd %>% select(name, age, age_years)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"name\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"age_years\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"David de Gea Quintana\",\"2\":\"29\",\"3\":\"29\"},{\"1\":\"Lee Grant\",\"2\":\"36\",\"3\":\"36\"},{\"1\":\"Sergio Germán Romero\",\"2\":\"32\",\"3\":\"32\"},{\"1\":\"Victor Nilsson Lindelöf\",\"2\":\"25\",\"3\":\"25\"},{\"1\":\"Eric Bertrand  Bailly\",\"2\":\"25\",\"3\":\"25\"},{\"1\":\"Phil Jones\",\"2\":\"27\",\"3\":\"27\"},{\"1\":\"Harry Maguire\",\"2\":\"26\",\"3\":\"26\"},{\"1\":\"Faustino Marcos Alberto Rojo\",\"2\":\"29\",\"3\":\"29\"},{\"1\":\"Ashley Young\",\"2\":\"34\",\"3\":\"34\"},{\"1\":\"José Diogo Dalot Teixeira\",\"2\":\"20\",\"3\":\"20\"},{\"1\":\"Luke Shaw\",\"2\":\"24\",\"3\":\"24\"},{\"1\":\"Timothy Evans Fosu-Mensah\",\"2\":\"21\",\"3\":\"22\"},{\"1\":\"Aaron Wan-Bissaka\",\"2\":\"22\",\"3\":\"22\"},{\"1\":\"Axel Tuanzebe\",\"2\":\"22\",\"3\":\"22\"},{\"1\":\"Brandon Williams\",\"2\":\"19\",\"3\":\"19\"},{\"1\":\"Paul Pogba\",\"2\":\"26\",\"3\":\"26\"},{\"1\":\"Juan Manuel Mata García\",\"2\":\"31\",\"3\":\"31\"},{\"1\":\"Jesse Lingard\",\"2\":\"26\",\"3\":\"27\"},{\"1\":\"Andreas Hoelgebaum Pereira\",\"2\":\"23\",\"3\":\"24\"},{\"1\":\"Frederico Rodrigues Santos\",\"2\":\"26\",\"3\":\"26\"},{\"1\":\"Daniel James\",\"2\":\"22\",\"3\":\"22\"},{\"1\":\"Angel Gomes\",\"2\":\"19\",\"3\":\"19\"},{\"1\":\"Nemanja Matić\",\"2\":\"31\",\"3\":\"31\"},{\"1\":\"James Garner\",\"2\":\"18\",\"3\":\"18\"},{\"1\":\"Scott McTominay\",\"2\":\"23\",\"3\":\"23\"},{\"1\":\"Anthony Martial\",\"2\":\"24\",\"3\":\"24\"},{\"1\":\"Marcus Rashford\",\"2\":\"22\",\"3\":\"22\"},{\"1\":\"Mason Greenwood\",\"2\":\"18\",\"3\":\"18\"},{\"1\":\"Tahith Chong\",\"2\":\"20\",\"3\":\"20\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Which ones are different?\n\n\\small\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd %>% filter(age != age_years) %>% \n  select(name, date_of_birth, age, age_years)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"name\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"date_of_birth\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"age_years\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Timothy Evans Fosu-Mensah\",\"2\":\"2 January 1998\",\"3\":\"21\",\"4\":\"22\"},{\"1\":\"Jesse Lingard\",\"2\":\"15 December 1992\",\"3\":\"26\",\"4\":\"27\"},{\"1\":\"Andreas Hoelgebaum Pereira\",\"2\":\"1 January 1996\",\"3\":\"23\",\"4\":\"24\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n- these three players were calculated wrong: we got one year too many.\n- Our guessed date, January 10, was too *late*.\n- These three players had a birthday since the actual download date\n- actual download date must have been before Dec 15.\n\n## Try an earlier date\n\n- say Dec 5:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nguess <- ymd(\"2019-12-05\")\nman_united %>% \n  mutate(dob = dmy(date_of_birth)) %>% \n  mutate(age_period = as.period(dob %--% guess)) %>% \n  mutate(age_years = year(age_period)) %>% \n  filter(age != age_years) %>% \n  select(name, date_of_birth, age, age_years) -> d2\n```\n:::\n\n\n\n\n## Results\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd2\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"name\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"date_of_birth\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"age_years\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Scott McTominay\",\"2\":\"8 December 1996\",\"3\":\"23\",\"4\":\"22\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n- Dec 5 was too early for the download date\n- must have been later than Dec 8 (to get McTominay's age right)\n- so must have been between Dec 8 and Dec 15 (Lingard's birthday)\n- Actually I downloaded the data on Dec 10.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"dip_files/libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"dip_files/libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}