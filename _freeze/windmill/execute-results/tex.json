{
  "hash": "511974ba1b529cd6b652af671ac11e76",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Case study: windmill\"\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n\n## The windmill data\n\n-   Engineer: does amount of electricity generated by windmill depend on\n    how strongly wind blowing?\n-   Measurements of wind speed and DC current generated at various\n    times.\n-   Assume the \"various times\" to be randomly selected --- aim to\n    generalize to \"this windmill at all times\".\n-   Research questions:\n    -   Relationship between wind speed and current generated?\n    -   If so, what kind of relationship?\n    -   Can we model relationship to do predictions?\n\n## Packages for this section\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(broom)\n```\n:::\n\n\n\n\n## Reading in the data\n\n\\small\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_url <- \n  \"http://ritsokiguess.site/datafiles/windmill.csv\"\nwindmill <- read_csv(my_url)\nwindmill\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 25 x 2\n   wind_velocity DC_output\n           <dbl>     <dbl>\n 1          5        1.58 \n 2          6        1.82 \n 3          3.4      1.06 \n 4          2.7      0.5  \n 5         10        2.24 \n 6          9.7      2.39 \n 7          9.55     2.29 \n 8          3.05     0.558\n 9          8.15     2.17 \n10          6.2      1.87 \n# i 15 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Strategy\n\n-   Two quantitative variables, looking for relationship: regression\n    methods.\n-   Start with picture (scatterplot).\n-   Fit models and do model checking, fixing up things as necessary.\n-   Scatterplot:\n    -   2 variables, `DC_output` and `wind_velocity`.\n    -   First is output/response, other is input/explanatory.\n    -   Put `DC_output` on vertical scale.\n-   Add trend, but don't want to assume linear:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(windmill, aes(y = DC_output, x = wind_velocity)) +\n  geom_point() + geom_smooth() \n```\n:::\n\n\n\n\n## Scatterplot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](windmill_files/figure-beamer/windmill-5-1.pdf)\n:::\n:::\n\n\n\n\n## Comments\n\n-   Definitely a relationship: as wind velocity increases, so does DC\n    output. (As you'd expect.)\n-   Is relationship linear? To help judge, `geom_smooth` smooths\n    scatterplot trend. (Trend called \"loess\", \"Locally weighted least\n    squares\" which downweights outliers. Not constrained to be\n    straight.)\n-   Trend more or less linear for while, then curves downwards\n    (levelling off?). Straight line not so good here.\n\n## Fit a straight line (and see what happens)\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDC.1 <- lm(DC_output ~ wind_velocity, data = windmill)\nsummary(DC.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = DC_output ~ wind_velocity, data = windmill)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.59869 -0.14099  0.06059  0.17262  0.32184 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)    0.13088    0.12599   1.039     0.31    \nwind_velocity  0.24115    0.01905  12.659 7.55e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.2361 on 23 degrees of freedom\nMultiple R-squared:  0.8745,\tAdjusted R-squared:  0.869 \nF-statistic: 160.3 on 1 and 23 DF,  p-value: 7.546e-12\n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Another way of looking at the output\n\n-   The standard output tends to go off the bottom of the page rather\n    easily. Package `broom` has these:\n\n\\scriptsize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglance(DC.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 x 12\n  r.squared adj.r.squared sigma statistic  p.value    df logLik   AIC   BIC\n      <dbl>         <dbl> <dbl>     <dbl>    <dbl> <dbl>  <dbl> <dbl> <dbl>\n1     0.874         0.869 0.236      160. 7.55e-12     1   1.66  2.68  6.33\n# i 3 more variables: deviance <dbl>, df.residual <int>, nobs <int>\n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\nshowing that the R-squared is 87%, and\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(DC.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 x 5\n  term          estimate std.error statistic  p.value\n  <chr>            <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)      0.131    0.126       1.04 3.10e- 1\n2 wind_velocity    0.241    0.0190     12.7  7.55e-12\n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\nshowing the intercept and slope and their significance.\n\n## Comments\n\n-   Strategy: `lm` actually fits the regression. Store results in a\n    variable. Then look at the results, eg. via `summary` or\n    `glance`/`tidy`.\n-   My strategy for model names: base on response variable (or data\n    frame name) and a number. Allows me to fit several models to same\n    data and keep track of which is which.\n-   Results actually pretty good: `wind.velocity` strongly significant,\n    R-squared (87%) high.\n-   How to check whether regression is appropriate? Look at the\n    residuals, observed minus predicted, plotted against fitted\n    (predicted).\n-   Plot using the regression object as \"data frame\" (in a couple of\n    slides).\n\n## Scatterplot, but with line\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(windmill, aes(y = DC_output, x = wind_velocity)) +\n  geom_point() + geom_smooth(method=\"lm\", se = FALSE)\n```\n\n::: {.cell-output-display}\n![](windmill_files/figure-beamer/windmill-11-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## Plot of residuals against fitted values\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(DC.1, aes(y = .resid, x = .fitted)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](windmill_files/figure-beamer/windmill-13-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## Comments on residual plot\n\n-   Residual plot should be a random scatter of points.\n-   Should be no pattern \"left over\" after fitting the regression.\n-   Smooth trend should be more or less straight across at 0.\n-   Here, have a curved trend on residual plot.\n-   This means original relationship must have been a curve (as we saw\n    on original scatterplot).\n-   Possible ways to fit a curve:\n    -   Add a squared term in explanatory variable.\n    -   Transform response variable (doesn't work well here).\n    -   See what science tells you about mathematical form of\n        relationship, and try to apply.\n\n## normal quantile plot of residuals\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(DC.1, aes(sample = .resid)) + \n  stat_qq() + stat_qq_line()\n```\n\n::: {.cell-output-display}\n![](windmill_files/figure-beamer/unnamed-chunk-1-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## Parabolas and fitting parabola model\n\n-   A parabola has equation $$y = ax^2 + bx + c$$ with coefficients\n    $a, b, c$. About the simplest function that is not a straight line.\n-   Fit one using `lm` by adding $x^2$ to right side of model formula\n    with +:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDC.2 <- lm(DC_output ~ wind_velocity + I(wind_velocity^2),\n  data = windmill\n)\n```\n:::\n\n\n\n\n-   The `I()` necessary because `^` in model formula otherwise means\n    something different (to do with interactions in ANOVA).\n-   Call it *parabola model*.\n\n## Parabola model output\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(DC.2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = DC_output ~ wind_velocity + I(wind_velocity^2), \n    data = windmill)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.26347 -0.02537  0.01264  0.03908  0.19903 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(>|t|)    \n(Intercept)        -1.155898   0.174650  -6.618 1.18e-06 ***\nwind_velocity       0.722936   0.061425  11.769 5.77e-11 ***\nI(wind_velocity^2) -0.038121   0.004797  -7.947 6.59e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1227 on 22 degrees of freedom\nMultiple R-squared:  0.9676,\tAdjusted R-squared:  0.9646 \nF-statistic: 328.3 on 2 and 22 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Comments on output\n\n-   R-squared has gone up a lot, from 87% (line) to 97% (parabola).\n-   Coefficient of squared term strongly significant (P-value\n    $6.59 \\times 10^{âˆ’8}$).\n-   Adding squared term has definitely improved fit of model.\n-   Parabola model better than linear one.\n-   But...need to check residuals again.\n\n## Residual plot from parabola model\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(DC.2, aes(y = .resid, x =  .fitted)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](windmill_files/figure-beamer/windmill-18-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## normal quantile plot of residuals\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(DC.2, aes(sample = .resid)) + stat_qq() + stat_qq_line()\n```\n\n::: {.cell-output-display}\n![](windmill_files/figure-beamer/unnamed-chunk-2-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\nThis distribution has long tails, which should worry us at least some.\n\n## Make scatterplot with fitted line and curve\n\n-   Residual plot basically random. Good.\n-   Scatterplot with fitted line and curve like this:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(windmill, aes(y = DC_output, x = wind_velocity)) +\n  geom_point() + geom_smooth(method = \"lm\", se = F) +\n  geom_line(data = DC.2, aes(y = .fitted))\n```\n:::\n\n\n\n\n## Comments\n\n-   This plots:\n    -   scatterplot (`geom_point`);\n    -   straight line (via tweak to `geom_smooth`, which draws\n        best-fitting line);\n    -   fitted curve, using the predicted `DC_output` values, joined by\n        lines (with points not shown).\n-   Trick in the `geom_line` is use the predictions as the `y`-points to\n    join by lines (from `DC.2`), instead of the original data points.\n    Without the `data` and `aes` in the `geom_line`, original data\n    points would be joined by lines.\n\n## Scatterplot with fitted line and curve\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](windmill_files/figure-beamer/windmill-19-1.pdf)\n:::\n:::\n\n\n\n\nCurve clearly fits better than line.\n\n## Another approach to a curve\n\n-   There is a problem with parabolas, which we'll see later.\n\n-   Ask engineer, \"what should happen as wind velocity increases?\":\n\n    -   Upper limit on electricity generated, but otherwise, the larger\n        the wind velocity, the more electricity generated.\n\n-   Mathematically, *asymptote*. Straight lines and parabolas don't have\n    them, but eg. $y = 1/x$ does: as $x$ gets bigger, $y$ approaches\n    zero without reaching it.\n\n-   What happens to $y = a + b(1/x)$ as $x$ gets large?\n\n    -   $y$ gets closer and closer to $a$: that is, $a$ is asymptote.\n\n-   Fit this, call it asymptote model.\n\n-   Fitting the model here because we have math to justify it.\n\n    -   Alternative, $y = a + be^{âˆ’x}$ , approaches asymptote faster.\n\n## How to fit asymptote model?\n\n-   Define new explanatory variable to be $1/x$, and predict $y$ from\n    it.\n-   $x$ is velocity, distance over time.\n-   So $1/x$ is time over distance. In walking world, if you walk 5\n    km/h, take 12 minutes to walk 1 km, called your pace. So 1 over\n    `wind_velocity` we call `wind_pace`.\n-   Make a scatterplot first to check for straightness (next page).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwindmill %>% mutate(wind_pace = 1 / wind_velocity) -> windmill\nggplot(windmill, aes(y = DC_output, x = wind_pace)) +\n  geom_point() + geom_smooth(se = F)\n```\n:::\n\n\n\n\n##   and run regression like this:\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDC.3 <- lm(DC_output ~ wind_pace, data = windmill)\nsummary(DC.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = DC_output ~ wind_pace, data = windmill)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.20547 -0.04940  0.01100  0.08352  0.12204 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   2.9789     0.0449   66.34   <2e-16 ***\nwind_pace    -6.9345     0.2064  -33.59   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.09417 on 23 degrees of freedom\nMultiple R-squared:   0.98,\tAdjusted R-squared:  0.9792 \nF-statistic:  1128 on 1 and 23 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Scatterplot for wind_pace\n\nPretty straight. Blue actually smooth curve not line:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](windmill_files/figure-beamer/windmill-20-1.pdf)\n:::\n:::\n\n\n\n\n## Regression output\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(DC.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = DC_output ~ wind_pace, data = windmill)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.20547 -0.04940  0.01100  0.08352  0.12204 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   2.9789     0.0449   66.34   <2e-16 ***\nwind_pace    -6.9345     0.2064  -33.59   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.09417 on 23 degrees of freedom\nMultiple R-squared:   0.98,\tAdjusted R-squared:  0.9792 \nF-statistic:  1128 on 1 and 23 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(DC.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 x 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)     2.98    0.0449      66.3 8.92e-28\n2 wind_pace      -6.93    0.206      -33.6 4.74e-21\n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Comments\n\n-   R-squared, 98%, even higher than for parabola model (97%).\n-   Simpler model, only one explanatory variable (`wind.pace`) vs. 2 for\n    parabola model (`wind.velocity` and its square).\n-   `wind.pace` (unsurprisingly) strongly significant.\n-   Looks good, but check residual plot (over).\n\n## Residual plot for asymptote model\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(DC.3, aes(y = .resid, x = .fitted)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](windmill_files/figure-beamer/resida-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## normal quantile plot of residuals\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(DC.3, aes(sample = .resid)) + \n  stat_qq() + stat_qq_line()\n```\n\n::: {.cell-output-display}\n![](windmill_files/figure-beamer/unnamed-chunk-3-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\nThis is skewed (left), but is not bad (and definitely better than the\none for the parabola model).\n\n## Plotting trends on scatterplot\n\n-   Residual plot not bad. But residuals go up to 0.10 and down to\n    âˆ’0.20, suggesting possible skewness (not normal). I think it's not\n    perfect, but OK overall.\n-   Next: plot scatterplot with all three fitted lines/curves on it (for\n    comparison), with legend saying which is which.\n-   First make data frame containing what we need, taken from the right\n    places:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nw2 <- tibble(\n  wind_velocity = windmill$wind_velocity,\n  DC_output = windmill$DC_output,\n  linear = fitted(DC.1),\n  parabola = fitted(DC.2),\n  asymptote = fitted(DC.3)\n)\n```\n:::\n\n\n\n\n## What's in `w2`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nw2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 25 x 5\n   wind_velocity DC_output linear parabola asymptote\n           <dbl>     <dbl>  <dbl>    <dbl>     <dbl>\n 1          5        1.58   1.34     1.51      1.59 \n 2          6        1.82   1.58     1.81      1.82 \n 3          3.4      1.06   0.951    0.861     0.939\n 4          2.7      0.5    0.782    0.518     0.411\n 5         10        2.24   2.54     2.26      2.29 \n 6          9.7      2.39   2.47     2.27      2.26 \n 7          9.55     2.29   2.43     2.27      2.25 \n 8          3.05     0.558  0.866    0.694     0.705\n 9          8.15     2.17   2.10     2.20      2.13 \n10          6.2      1.87   1.63     1.86      1.86 \n# i 15 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## Making the plot\n\n-   `ggplot` likes to have one column of $x$'s to plot, and one column\n    of $y$'s, with another column for distinguishing things.\n-   But we have three columns of fitted values, that need to be combined\n    into one.\n-   `pivot_longer`, then plot:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nw2 %>%\n  pivot_longer(linear:asymptote, names_to=\"model\", \n               values_to=\"fit\") %>%\n  ggplot(aes(x = wind_velocity, y = DC_output)) +\n  geom_point() +\n  geom_line(aes(y = fit, colour = model)) \n```\n:::\n\n\n\n\n## Scatterplot with fitted curves\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](windmill_files/figure-beamer/windmill-25-1.pdf)\n:::\n:::\n\n\n\n\n## Comments\n\n-   Predictions from curves are very similar.\n-   Predictions from asymptote model as good, and from simpler model\n    (one $x$ not two), so prefer those.\n-   Go back to asymptote model summary.\n\n## Asymptote model summary\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(DC.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 x 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)     2.98    0.0449      66.3 8.92e-28\n2 wind_pace      -6.93    0.206      -33.6 4.74e-21\n```\n\n\n:::\n:::\n\n\n\n\n## Comments\n\n-   Intercept in this model about 3.\n-   Intercept of asymptote model is the asymptote (upper limit of\n    `DC.output`).\n-   Not close to asymptote yet.\n-   Therefore, from this model, wind could get stronger and would\n    generate appreciably more electricity.\n-   This is extrapolation! Would like more data from times when\n    `wind.velocity` higher.\n-   Slope âˆ’7. Why negative?\n    -   As wind.velocity increases, wind.pace goes down, and DC.output\n        goes up. Check.\n-   Actual slope number hard to interpret.\n\n## Checking back in with research questions\n\n-   Is there a relationship between wind speed and current generated?\n    -   Yes.\n-   If so, what kind of relationship is it?\n    -   One with an asymptote.\n-   Can we model the relationship, in such a way that we can do\n    predictions?\n    -   Yes, see model DC.3 and plot of fitted curve.\n-   Good. Job done.\n\n## Job done, kinda\n\n-   Just because the parabola model and asymptote model agree over the\n    range of the data, doesn't necessarily mean they agree everywhere.\n-   Extend range of wind.velocity to 1 to 16 (steps of 0.5), and predict\n    DC.output according to the two models:\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwv <- seq(1, 16, 0.5)\nwv\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  1.0  1.5  2.0  2.5  3.0  3.5  4.0  4.5  5.0  5.5  6.0  6.5  7.0\n[14]  7.5  8.0  8.5  9.0  9.5 10.0 10.5 11.0 11.5 12.0 12.5 13.0 13.5\n[27] 14.0 14.5 15.0 15.5 16.0\n```\n\n\n:::\n:::\n\n\n\n\n-   R has `predict`, which requires what to predict for, as data frame.\n    The data frame has to contain values, with matching names, for all\n    explanatory variables in regression(s).\n\n## Setting up data frame to predict from\n\n-   Linear model had just `wind_velocity`.\n-   Parabola model had that as well (squared one will be calculated)\n-   Asymptote model had just `wind_pace` (reciprocal of velocity).\n-   So create data frame called `wv_new` with those in:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwv_new <- tibble(wind_velocity = wv, wind_pace = 1 / wv)\n```\n:::\n\n\n\n\n## `wv_new`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwv_new\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 31 x 2\n   wind_velocity wind_pace\n           <dbl>     <dbl>\n 1           1       1    \n 2           1.5     0.667\n 3           2       0.5  \n 4           2.5     0.4  \n 5           3       0.333\n 6           3.5     0.286\n 7           4       0.25 \n 8           4.5     0.222\n 9           5       0.2  \n10           5.5     0.182\n# i 21 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## Doing predictions, one for each model\n\n-   Use same names as before:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlinear <- predict(DC.1, wv_new)\nparabola <- predict(DC.2, wv_new)\nasymptote <- predict(DC.3, wv_new)\n```\n:::\n\n\n\n\n-   Put it all into a data frame for plotting, along with original data:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_fits <- tibble(\n  wind_velocity = wv_new$wind_velocity,\n  linear, parabola, asymptote\n)\n```\n:::\n\n\n\n\n## `my_fits`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_fits\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 31 x 4\n   wind_velocity linear parabola asymptote\n           <dbl>  <dbl>    <dbl>     <dbl>\n 1           1    0.372   -0.471    -3.96 \n 2           1.5  0.493   -0.157    -1.64 \n 3           2    0.613    0.137    -0.488\n 4           2.5  0.734    0.413     0.205\n 5           3    0.854    0.670     0.667\n 6           3.5  0.975    0.907     0.998\n 7           4    1.10     1.13      1.25 \n 8           4.5  1.22     1.33      1.44 \n 9           5    1.34     1.51      1.59 \n10           5.5  1.46     1.67      1.72 \n# i 21 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## Making a plot 1/2\n\n-   To make a plot, we use the same trick as last time to get all three\n    predictions on a plot with a legend (saving result to add to later):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_fits %>%\n    pivot_longer(\n    linear:asymptote,\n    names_to=\"model\", \n    values_to=\"fit\"\n  ) %>%\n  ggplot(aes(\n    y = fit, x = wind_velocity,\n    colour = model\n  )) + geom_line() -> g\n```\n:::\n\n\n\n\n## Making a plot 2/2\n\n-   The observed wind velocities were in this range:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(vels <- range(windmill$wind_velocity))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  2.45 10.20\n```\n\n\n:::\n:::\n\n\n\n\n-   `DC.output` between 0 and 3 from asymptote model. Add rectangle to\n    graph around where the data were:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng + geom_rect(\n  xmin = vels[1], xmax = vels[2], ymin = 0, ymax = 3,\n  alpha = 0, colour = \"black\"\n)\n```\n:::\n\n\n\n\n## The plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](windmill_files/figure-beamer/windmill-35-1.pdf)\n:::\n:::\n\n\n\n\n## Comments (1)\n\n-   Over range of data, two models agree with each other well.\n-   Outside range of data, they disagree violently!\n-   For larger `wind.velocity`, asymptote model behaves reasonably,\n    parabola model does not.\n-   What happens as `wind.velocity` goes to zero? Should find\n    `DC.output` goes to zero as well. Does it?\n\n## Comments (2)\n\n-   For parabola model:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(DC.2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 x 5\n  term               estimate std.error statistic  p.value\n  <chr>                 <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)         -1.16     0.175       -6.62 1.18e- 6\n2 wind_velocity        0.723    0.0614      11.8  5.77e-11\n3 I(wind_velocity^2)  -0.0381   0.00480     -7.95 6.59e- 8\n```\n\n\n:::\n:::\n\n\n\n\n-   Nope, goes to âˆ’1.16 (intercept), actually significantly different\n    from zero.\n\n## Comments (3): asymptote model\n\n\\small\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(DC.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 x 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)     2.98    0.0449      66.3 8.92e-28\n2 wind_pace      -6.93    0.206      -33.6 4.74e-21\n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\n-   As `wind.velocity` heads to 0, wind.pace heads to $+\\infty$, so\n    DC.output heads to $âˆ’\\infty$!\n-   Also need more data for small `wind.velocity` to understand\n    relationship. (Is there a lower asymptote?)\n-   Best we can do now is to predict `DC.output` to be zero for small\n    `wind.velocity`.\n-   Assumes a \"threshold\" wind velocity below which no electricity\n    generated at all.\n\n## Summary\n\n-   Often, in data analysis, there is no completely satisfactory\n    conclusion, as here.\n-   Have to settle for model that works OK, with restrictions.\n-   Always something else you can try.\n-   At some point you have to say \"I stop.\"\n",
    "supporting": [
      "windmill_files/figure-beamer"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}