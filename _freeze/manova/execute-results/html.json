{
  "hash": "5d25153b374813bf2b1b987502e211c7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Multivariate Analysis of Variance\"\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n\n## Multivariate analysis of variance\n\n-   Standard ANOVA has just one response variable.\n\n-   What if you have more than one response?\n\n-   Try an ANOVA on each response separately.\n\n-   But might miss some kinds of interesting dependence between the\n    responses that distinguish the groups.\n\n## Packages\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(car) # may need to install first\nlibrary(tidyverse)\nlibrary(MVTests) # also may need to install\n```\n:::\n\n\n\n\n## Small example\n\n-   Measure yield and seed weight of plants grown under 2 conditions:\n    low and high amounts of fertilizer.\n\n-   Data (fertilizer, yield, seed weight):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"http://ritsokiguess.site/datafiles/manova1.txt\"\nhilo <- read_delim(url, \" \")\n```\n:::\n\n\n\n\n-   2 responses, yield and seed weight.\n\n## The data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhilo\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"fertilizer\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"yield\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"weight\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"low\",\"2\":\"34\",\"3\":\"10\"},{\"1\":\"low\",\"2\":\"29\",\"3\":\"14\"},{\"1\":\"low\",\"2\":\"35\",\"3\":\"11\"},{\"1\":\"low\",\"2\":\"32\",\"3\":\"13\"},{\"1\":\"high\",\"2\":\"33\",\"3\":\"14\"},{\"1\":\"high\",\"2\":\"38\",\"3\":\"12\"},{\"1\":\"high\",\"2\":\"34\",\"3\":\"13\"},{\"1\":\"high\",\"2\":\"35\",\"3\":\"14\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n## Boxplot for yield for each fertilizer group\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(hilo, aes(x = fertilizer, y = yield)) + geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](manova_files/figure-revealjs/ferto-1.png){width=960}\n:::\n:::\n\n\n\n\nYields overlap for fertilizer groups.\n\n## Boxplot for weight for each fertilizer group\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(hilo, aes(x = fertilizer, y = weight)) + geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](manova_files/figure-revealjs/casteldisangro-1.png){width=960}\n:::\n:::\n\n\n\n\nWeights overlap for fertilizer groups.\n\n## ANOVAs for yield and weight\n\n\\small\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhilo.y <- aov(yield ~ fertilizer, data = hilo)\nsummary(hilo.y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Df Sum Sq Mean Sq F value Pr(>F)\nfertilizer   1   12.5  12.500   2.143  0.194\nResiduals    6   35.0   5.833               \n```\n\n\n:::\n\n```{.r .cell-code}\nhilo.w <- aov(weight ~ fertilizer, data = hilo)\nsummary(hilo.w)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Df Sum Sq Mean Sq F value Pr(>F)\nfertilizer   1  3.125   3.125   1.471  0.271\nResiduals    6 12.750   2.125               \n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\nNeither response depends significantly on fertilizer. But...\n\n## Plotting both responses at once\n\n-   Have two response variables (not more), so can plot the response\n    variables against *each other*, labelling points by which fertilizer\n    group they're from.\n\n\\footnotesize\n\n-   First, create data frame with points $(31,14)$ and $(38,10)$ (why?\n    Later):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tribble(\n  ~line_x, ~line_y,\n  31, 14,\n  38, 10\n)\nd\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"line_x\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"line_y\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"31\",\"2\":\"14\"},{\"1\":\"38\",\"2\":\"10\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n-   Then plot data as points, and add line through points in `d`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(hilo, aes(x = yield, y = weight,\n                      colour = fertilizer)) + geom_point() +\n  geom_line(data = d,\n            aes(x = line_x, y = line_y, colour = NULL)) -> g\n```\n:::\n\n\n\n\n\\normalsize\n\n## The plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](manova_files/figure-revealjs/charlecombe-1.png){width=960}\n:::\n:::\n\n\n\n\n## Comments\n\n-   Graph construction:\n    -   Joining points in `d` by line.\n    -   `geom_line` inherits `colour` from `aes` in `ggplot`.\n    -   Data frame `d` has no `fertilizer` (previous `colour`), so have\n        to unset.\n-   Results:\n    -   High-fertilizer plants have both yield and weight high.\n\n    -   True even though no sig difference in yield or weight\n        individually.\n\n    -   Drew line separating highs from lows on plot.\n\n## MANOVA finds multivariate differences\n\n-   Is difference found by diagonal line significant? MANOVA finds out.\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresponse <- with(hilo, cbind(yield, weight))\nresponse\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     yield weight\n[1,]    34     10\n[2,]    29     14\n[3,]    35     11\n[4,]    32     13\n[5,]    33     14\n[6,]    38     12\n[7,]    34     13\n[8,]    35     14\n```\n\n\n:::\n\n```{.r .cell-code}\nhilo.1 <- manova(response ~ fertilizer, data = hilo)\nsummary(hilo.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           Df  Pillai approx F num Df den Df  Pr(>F)  \nfertilizer  1 0.80154   10.097      2      5 0.01755 *\nResiduals   6                                         \n---\nSignif. codes:  \n0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\n-   Yes! Difference between groups is *diagonally*, not just up/down\n    (weight) or left-right (yield). The *yield-weight combination*\n    matters.\n\n## Strategy\n\n-   Create new response variable by gluing together columns of\n    responses, using `cbind`.\n\n-   Use `manova` with new response, looks like `lm` otherwise.\n\n-   With more than 2 responses, cannot draw graph. What then?\n\n-   If MANOVA test significant, cannot use Tukey. What then?\n\n-   Use *discriminant analysis* (of which more later).\n\n## Another way to do MANOVA\n\nusing `Manova` from package `car`:\n\n\n\n\n\n\n\n\n\n\\tiny\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhilo.2.lm <- lm(response ~ fertilizer, data = hilo)\nhilo.2 <- Manova(hilo.2.lm)\nsummary(hilo.2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nType II MANOVA Tests:\n\nSum of squares and products for error:\n       yield weight\nyield     35 -18.00\nweight   -18  12.75\n\n------------------------------------------\n \nTerm: fertilizer \n\nSum of squares and products for the hypothesis:\n       yield weight\nyield  12.50  6.250\nweight  6.25  3.125\n\nMultivariate Tests: fertilizer\n                 Df test stat approx F num Df den Df   Pr(>F)  \nPillai            1  0.801542 10.09714      2      5 0.017546 *\nWilks             1  0.198458 10.09714      2      5 0.017546 *\nHotelling-Lawley  1  4.038855 10.09714      2      5 0.017546 *\nRoy               1  4.038855 10.09714      2      5 0.017546 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\n\n\n\n\n\n\n\n\n## Comments\n\n-   Same result as small-m `manova`.\n\n-   `Manova` will also do *repeated measures*, coming up later.\n\n## Assumptions\n\n-   normality of each response variable within each treatment group\n    -   this is actually *multivariate* normality, with correlations\n-   equal spreads: each response variable has same variances and\n    correlations (with other response variables) within each treatment\n    group. Here:\n    -   yield has same spread for low and high fertilizer\n    -   weight has same spread for low and high fertilizer\n    -   correlation between yield and weight is same for low and high\n        fertilizer\n-   test equal spread using Box's $M$ test\n    -   a certain amount of unequalness is OK, so only a concern if\n        P-value from $M$-test is very small (eg. less than 0.001).\n\n## Assumptions for yield-weight data\n\nFor normal quantile plots, need \"extra-long\" with all the data values in\none column:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhilo %>% \n  pivot_longer(-fertilizer, names_to = \"xname\", \n               values_to = \"xvalue\") %>% \n  ggplot(aes(sample = xvalue)) + stat_qq() + \n    stat_qq_line() +\n    facet_grid(xname ~ fertilizer, scales = \"free\") -> g\n```\n:::\n\n\n\n\nThere are only four observations per response variable - treatment group\ncombination, so graphs are not very informative (over):\n\n## The plots\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng\n```\n\n::: {.cell-output-display}\n![](manova_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n\n\n## Box M test\n\n-   Make sure package `MVTests` loaded first.\n-   inputs:\n    -   the response matrix (or, equivalently, the response-variable\n        columns from your dataframe)\n    -   the column with the grouping variable in it (most easily gotten\n        with `$`).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(MVTests)\n# hilo %>% select(yield, weight) -> numeric_values\nsummary(BoxM(response, hilo$fertilizer))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       Box's M Test \n\nChi-Squared Value = 1.002964 , df = 3  and p-value: 0.801 \n```\n\n\n:::\n:::\n\n\n\n\n-   No problem at all with unequal spreads.\n\n## Another example: peanuts\n\n-   Three different varieties of peanuts (mysteriously, 5, 6 and 8)\n    planted in two different locations.\n\n-   Three response variables: `y`, `smk` and `w`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nu <- \"http://ritsokiguess.site/datafiles/peanuts.txt\"\npeanuts.orig <- read_delim(u, \" \")\n```\n:::\n\n\n\n\n## The data\n\n\\small\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npeanuts.orig\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"obs\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"location\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"variety\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"y\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"smk\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"w\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"1\",\"3\":\"5\",\"4\":\"195.3\",\"5\":\"153.1\",\"6\":\"51.4\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"5\",\"4\":\"194.3\",\"5\":\"167.7\",\"6\":\"53.7\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"5\",\"4\":\"189.7\",\"5\":\"139.5\",\"6\":\"55.5\"},{\"1\":\"4\",\"2\":\"2\",\"3\":\"5\",\"4\":\"180.4\",\"5\":\"121.1\",\"6\":\"44.4\"},{\"1\":\"5\",\"2\":\"1\",\"3\":\"6\",\"4\":\"203.0\",\"5\":\"156.8\",\"6\":\"49.8\"},{\"1\":\"6\",\"2\":\"1\",\"3\":\"6\",\"4\":\"195.9\",\"5\":\"166.0\",\"6\":\"45.8\"},{\"1\":\"7\",\"2\":\"2\",\"3\":\"6\",\"4\":\"202.7\",\"5\":\"166.1\",\"6\":\"60.4\"},{\"1\":\"8\",\"2\":\"2\",\"3\":\"6\",\"4\":\"197.6\",\"5\":\"161.8\",\"6\":\"54.1\"},{\"1\":\"9\",\"2\":\"1\",\"3\":\"8\",\"4\":\"193.5\",\"5\":\"164.5\",\"6\":\"57.8\"},{\"1\":\"10\",\"2\":\"1\",\"3\":\"8\",\"4\":\"187.0\",\"5\":\"165.1\",\"6\":\"58.6\"},{\"1\":\"11\",\"2\":\"2\",\"3\":\"8\",\"4\":\"201.5\",\"5\":\"166.8\",\"6\":\"65.0\"},{\"1\":\"12\",\"2\":\"2\",\"3\":\"8\",\"4\":\"200.0\",\"5\":\"173.8\",\"6\":\"67.2\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Setup for analysis\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npeanuts.orig %>%\n  mutate(\n    location = factor(location),\n    variety = factor(variety)\n  ) -> peanuts\nresponse <- with(peanuts, cbind(y, smk, w))\nhead(response)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         y   smk    w\n[1,] 195.3 153.1 51.4\n[2,] 194.3 167.7 53.7\n[3,] 189.7 139.5 55.5\n[4,] 180.4 121.1 44.4\n[5,] 203.0 156.8 49.8\n[6,] 195.9 166.0 45.8\n```\n\n\n:::\n:::\n\n\n\n\n## Analysis (using `Manova`)\n\n\n\n\n\n\n\n\n\n\\tiny\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npeanuts.1 <- lm(response ~ location * variety, data = peanuts)\npeanuts.2 <- Manova(peanuts.1)\nsummary(peanuts.2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nType II MANOVA Tests:\n\nSum of squares and products for error:\n          y     smk       w\ny   104.205  49.365  76.480\nsmk  49.365 352.105 121.995\nw    76.480 121.995  94.835\n\n------------------------------------------\n \nTerm: location \n\nSum of squares and products for the hypothesis:\n              y       smk           w\ny     0.7008333  -10.6575    7.129167\nsmk -10.6575000  162.0675 -108.412500\nw     7.1291667 -108.4125   72.520833\n\nMultivariate Tests: location\n                 Df test stat approx F num Df den Df   Pr(>F)  \nPillai            1  0.893484 11.18432      3      4 0.020502 *\nWilks             1  0.106516 11.18432      3      4 0.020502 *\nHotelling-Lawley  1  8.388243 11.18432      3      4 0.020502 *\nRoy               1  8.388243 11.18432      3      4 0.020502 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n------------------------------------------\n \nTerm: variety \n\nSum of squares and products for the hypothesis:\n           y       smk        w\ny   196.1150  365.1825  42.6275\nsmk 365.1825 1089.0150 414.6550\nw    42.6275  414.6550 284.1017\n\nMultivariate Tests: variety\n                 Df test stat  approx F num Df den Df    Pr(>F)   \nPillai            2  1.709109  9.792388      6     10 0.0010562 **\nWilks             2  0.012444 10.619086      6      8 0.0019275 **\nHotelling-Lawley  2 21.375675 10.687838      6      6 0.0054869 **\nRoy               2 18.187611 30.312685      3      5 0.0012395 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n------------------------------------------\n \nTerm: location:variety \n\nSum of squares and products for the hypothesis:\n           y      smk         w\ny   205.1017 363.6675 107.78583\nsmk 363.6675 780.6950 254.22000\nw   107.7858 254.2200  85.95167\n\nMultivariate Tests: location:variety\n                 Df test stat  approx F num Df den Df   Pr(>F)  \nPillai            2  1.290861  3.033867      6     10 0.058708 .\nWilks             2  0.074300  3.558197      6      8 0.050794 .\nHotelling-Lawley  2  7.544290  3.772145      6      6 0.065517 .\nRoy               2  6.824094 11.373490      3      5 0.011340 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\n\n\n\n\n\n\n\n\n## Comments\n\n-   Interaction not quite significant, but main effects are.\n\n-   Combined response variable `(y,smk,w)` definitely depends on\n    location and on variety\n\n-   Weak dependence of `(y,smk,w)` on the location-variety\n    *combination.*\n\n-   Understanding that dependence beyond our scope right now.\n\n## Comments\n\n-   this time there are only six observations per location and four per\n    variety, so normality is still difficult to be confident about\n\n-   `y` at location 1 seems to be the worst for normality (long tails /\n    outliers), and maybe `y` at location 2 is skewed left, but the\n    others are not bad\n\n-   there is some evidence of unequal spread (slopes of lines), but is\n    it bad enough to worry about? (Box M-test, over).\n\n## Assessing normality\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npeanuts %>% pivot_longer(y:w, names_to = \"yname\", values_to = \"y\") %>% \n  ggplot(aes(sample = y)) + stat_qq() + stat_qq_line() +\n  facet_grid(yname ~ location, scales = \"free_y\")\n```\n\n::: {.cell-output-display}\n![](manova_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n\n\n\n## Box's M tests\n\n-   One for location, one for variety:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(BoxM(response, peanuts$location))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       Box's M Test \n\nChi-Squared Value = 12.47797 , df = 6  and p-value: 0.0521 \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(BoxM(response, peanuts$variety))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       Box's M Test \n\nChi-Squared Value = 10.56304 , df = 12  and p-value: 0.567 \n```\n\n\n:::\n:::\n\n\n\n\n-   Neither of these P-values is low enough to worry about. (Remember,\n    the P-value here has to be *really* small to indicate a problem.)\n",
    "supporting": [
      "manova_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"manova_files/libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"manova_files/libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}