{
  "hash": "eb23e64f35638000b628226ffd2fbbdd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Case study: asphalt\"\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n\n## The asphalt data\n\n-   31 asphalt pavements prepared under different conditions. How does\n    quality of pavement depend on these?\n-   Variables:\n    -   `pct.a.surf` Percentage of asphalt in surface layer\n    -   `pct.a.base` Percentage of asphalt in base layer\n    -   `fines` Percentage of fines in surface layer\n    -   `voids` Percentage of voids in surface layer\n    -   `rut.depth` Change in rut depth per million vehicle passes\n    -   `viscosity` Viscosity of asphalt\n    -   `run` 2 data collection periods: 1 for run 1, 0 for run 2.\n-   `rut.depth` response. Depends on other variables, how?\n\n## Packages for this section\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(MASS, exclude = \"select\")\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(leaps)\n```\n:::\n\n\n\n\nMake sure to load `MASS` before `tidyverse` (for annoying technical\nreasons), or to load `MASS` excluding its `select` (as above).\n\n## Getting set up\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_url <- \"http://ritsokiguess.site/datafiles/asphalt.txt\"\nasphalt <- read_delim(my_url, \" \")\n```\n:::\n\n\n\n\n-   Quantitative variables with one response: multiple regression.\n-   Some issues here that don't come up in \"simple\" regression; handle\n    as we go. (STAB27/STAC67 ideas.)\n\n## The data (some)\n\n\\small\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nasphalt\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"pct.a.surf\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"pct.a.base\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"fines\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"voids\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"rut.depth\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"viscosity\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"run\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"4.68\",\"2\":\"4.87\",\"3\":\"8.4\",\"4\":\"4.916\",\"5\":\"6.75\",\"6\":\"2.80\",\"7\":\"1\"},{\"1\":\"5.19\",\"2\":\"4.50\",\"3\":\"6.5\",\"4\":\"4.563\",\"5\":\"13.00\",\"6\":\"1.40\",\"7\":\"1\"},{\"1\":\"4.82\",\"2\":\"4.73\",\"3\":\"7.9\",\"4\":\"5.321\",\"5\":\"14.75\",\"6\":\"1.40\",\"7\":\"1\"},{\"1\":\"4.85\",\"2\":\"4.76\",\"3\":\"8.3\",\"4\":\"4.865\",\"5\":\"12.60\",\"6\":\"3.30\",\"7\":\"1\"},{\"1\":\"4.86\",\"2\":\"4.95\",\"3\":\"8.4\",\"4\":\"3.776\",\"5\":\"8.25\",\"6\":\"1.70\",\"7\":\"1\"},{\"1\":\"5.16\",\"2\":\"4.45\",\"3\":\"7.4\",\"4\":\"4.397\",\"5\":\"10.67\",\"6\":\"2.90\",\"7\":\"1\"},{\"1\":\"4.82\",\"2\":\"5.05\",\"3\":\"6.8\",\"4\":\"4.867\",\"5\":\"7.28\",\"6\":\"3.70\",\"7\":\"1\"},{\"1\":\"4.86\",\"2\":\"4.70\",\"3\":\"8.6\",\"4\":\"4.828\",\"5\":\"12.67\",\"6\":\"1.70\",\"7\":\"1\"},{\"1\":\"4.78\",\"2\":\"4.84\",\"3\":\"6.7\",\"4\":\"4.865\",\"5\":\"12.58\",\"6\":\"0.92\",\"7\":\"1\"},{\"1\":\"5.16\",\"2\":\"4.76\",\"3\":\"7.7\",\"4\":\"4.034\",\"5\":\"20.60\",\"6\":\"0.68\",\"7\":\"1\"},{\"1\":\"4.57\",\"2\":\"4.82\",\"3\":\"7.4\",\"4\":\"5.450\",\"5\":\"3.58\",\"6\":\"6.00\",\"7\":\"1\"},{\"1\":\"4.61\",\"2\":\"4.65\",\"3\":\"6.7\",\"4\":\"4.853\",\"5\":\"7.00\",\"6\":\"4.30\",\"7\":\"1\"},{\"1\":\"5.07\",\"2\":\"5.10\",\"3\":\"7.5\",\"4\":\"4.257\",\"5\":\"26.20\",\"6\":\"0.60\",\"7\":\"1\"},{\"1\":\"4.66\",\"2\":\"5.09\",\"3\":\"8.2\",\"4\":\"5.144\",\"5\":\"11.67\",\"6\":\"1.80\",\"7\":\"1\"},{\"1\":\"5.42\",\"2\":\"4.41\",\"3\":\"5.8\",\"4\":\"3.718\",\"5\":\"7.67\",\"6\":\"6.00\",\"7\":\"1\"},{\"1\":\"5.01\",\"2\":\"4.74\",\"3\":\"7.1\",\"4\":\"4.715\",\"5\":\"12.25\",\"6\":\"4.40\",\"7\":\"1\"},{\"1\":\"4.97\",\"2\":\"4.66\",\"3\":\"6.5\",\"4\":\"4.625\",\"5\":\"0.76\",\"6\":\"88.00\",\"7\":\"0\"},{\"1\":\"4.01\",\"2\":\"4.72\",\"3\":\"8.0\",\"4\":\"4.977\",\"5\":\"1.35\",\"6\":\"62.00\",\"7\":\"0\"},{\"1\":\"4.96\",\"2\":\"4.90\",\"3\":\"6.8\",\"4\":\"4.322\",\"5\":\"1.44\",\"6\":\"50.00\",\"7\":\"0\"},{\"1\":\"5.20\",\"2\":\"4.70\",\"3\":\"8.2\",\"4\":\"5.087\",\"5\":\"1.60\",\"6\":\"58.00\",\"7\":\"0\"},{\"1\":\"4.80\",\"2\":\"4.60\",\"3\":\"6.6\",\"4\":\"5.971\",\"5\":\"1.10\",\"6\":\"90.00\",\"7\":\"0\"},{\"1\":\"4.98\",\"2\":\"4.69\",\"3\":\"6.4\",\"4\":\"4.647\",\"5\":\"0.85\",\"6\":\"66.00\",\"7\":\"0\"},{\"1\":\"5.35\",\"2\":\"4.76\",\"3\":\"7.3\",\"4\":\"5.115\",\"5\":\"1.20\",\"6\":\"140.00\",\"7\":\"0\"},{\"1\":\"5.04\",\"2\":\"4.80\",\"3\":\"7.8\",\"4\":\"5.939\",\"5\":\"0.56\",\"6\":\"240.00\",\"7\":\"0\"},{\"1\":\"4.80\",\"2\":\"4.80\",\"3\":\"7.4\",\"4\":\"5.916\",\"5\":\"0.72\",\"6\":\"420.00\",\"7\":\"0\"},{\"1\":\"4.83\",\"2\":\"4.60\",\"3\":\"6.7\",\"4\":\"5.471\",\"5\":\"0.47\",\"6\":\"500.00\",\"7\":\"0\"},{\"1\":\"4.66\",\"2\":\"4.72\",\"3\":\"7.2\",\"4\":\"4.602\",\"5\":\"0.33\",\"6\":\"180.00\",\"7\":\"0\"},{\"1\":\"4.67\",\"2\":\"4.50\",\"3\":\"6.3\",\"4\":\"5.043\",\"5\":\"0.26\",\"6\":\"270.00\",\"7\":\"0\"},{\"1\":\"4.72\",\"2\":\"4.70\",\"3\":\"6.8\",\"4\":\"5.075\",\"5\":\"0.76\",\"6\":\"170.00\",\"7\":\"0\"},{\"1\":\"5.00\",\"2\":\"5.07\",\"3\":\"7.2\",\"4\":\"4.334\",\"5\":\"0.80\",\"6\":\"98.00\",\"7\":\"0\"},{\"1\":\"4.70\",\"2\":\"4.80\",\"3\":\"7.7\",\"4\":\"5.705\",\"5\":\"2.00\",\"6\":\"35.00\",\"7\":\"0\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Plotting response \"rut depth\" against everything else\n\nSame idea as for plotting separate predictions on one plot:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nasphalt %>%\n  pivot_longer(\n    -rut.depth,\n    names_to=\"xname\", values_to=\"x\"\n  ) %>%\n  ggplot(aes(x = x, y = rut.depth)) + geom_point() +\n  facet_wrap(~xname, scales = \"free\") -> g\n```\n:::\n\n\n\n\n\"collect all the x-variables together into one column called x, with\nanother column xname saying which x they were, then plot these x's\nagainst rut.depth, a separate facet for each x-variable.\"\n\nI saved this graph to plot later (on the next page).\n\n## The plot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng\n```\n\n::: {.cell-output-display}\n![](asphalt_files/figure-revealjs/asphalt-5-1.png){width=960}\n:::\n:::\n\n\n\n\n## Interpreting the plots\n\n-   One plot of rut depth against each of the six other variables.\n-   Get rough idea of what's going on.\n-   Trends mostly weak.\n-   `viscosity` has strong but non-linear trend.\n-   `run` has effect but variability bigger when run is 1.\n-   Weak but downward trend for `voids`.\n-   Non-linearity of `rut.depth`-`viscosity` relationship should concern\n    us.\n\n## Log of `viscosity`: more nearly linear?\n\n-   Take this back to asphalt engineer: suggests log of `viscosity`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(asphalt, aes(y = rut.depth, x = log(viscosity))) +\n  geom_point() + geom_smooth(se = FALSE) -> g\n```\n:::\n\n\n\n\n(plot overleaf)\n\n## Rut depth against log-viscosity\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng\n```\n\n::: {.cell-output-display}\n![](asphalt_files/figure-revealjs/asphalt-6-1.png){width=960}\n:::\n:::\n\n\n\n\n## Comments and next steps\n\n-   Not very linear, but better than before.\n-   In multiple regression, hard to guess which x's affect response. So\n    typically start by predicting from everything else.\n-   Model formula has response on left, squiggle, explanatories on right\n    joined by plusses:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrut.1 <- lm(rut.depth ~ pct.a.surf + pct.a.base + fines +\n  voids + log(viscosity) + run, data = asphalt)\n```\n:::\n\n\n\n\n## Regression output:\n\n\\scriptsize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(rut.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = rut.depth ~ pct.a.surf + pct.a.base + fines + voids + \n    log(viscosity) + run, data = asphalt)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4.1211 -1.9075 -0.7175  1.6382  9.5947 \n\nCoefficients:\n               Estimate Std. Error t value Pr(>|t|)   \n(Intercept)    -12.9937    26.2188  -0.496   0.6247   \npct.a.surf       3.9706     2.4966   1.590   0.1248   \npct.a.base       1.2631     3.9703   0.318   0.7531   \nfines            0.1164     1.0124   0.115   0.9094   \nvoids            0.5893     1.3244   0.445   0.6604   \nlog(viscosity)  -3.1515     0.9194  -3.428   0.0022 **\nrun             -1.9655     3.6472  -0.539   0.5949   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.324 on 24 degrees of freedom\nMultiple R-squared:  0.806,\tAdjusted R-squared:  0.7575 \nF-statistic: 16.62 on 6 and 24 DF,  p-value: 1.743e-07\n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Comments\n\n-   R-squared 81%, not so bad.\n\n-   P-value in `glance` asserts that something helping to predict\n    rut.depth.\n\n-   Table of coefficients says `log(viscosity)`.\n\n-   But confused by clearly non-significant variables: remove those to\n    get clearer picture of what is helpful.\n\n\n## Before we do anything, look at residual plots:\n\n- (a) of residuals against fitted values (as usual)\n\n-  (b) of residuals against each explanatory.\n\n-   Problem fixes:\n\n    -   with (a): fix response variable;\n    -   with some plots in (b): fix those explanatory variables.\n\n## Plot fitted values against residuals\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(rut.1, aes(x = .fitted, y = .resid)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](asphalt_files/figure-revealjs/asphalt-9-1.png){width=960}\n:::\n:::\n\n\n\n\n## Normal quantile plot of residuals\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(rut.1, aes(sample = .resid)) + stat_qq() + \n  stat_qq_line()\n```\n\n::: {.cell-output-display}\n![](asphalt_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n\n\n## Plotting residuals against $x$ variables\n\n-   Problem here is that residuals are in the fitted model, and the\n    observed $x$-values are in the original data frame `asphalt`.\n-   Package broom contains a function `augment` that combines these two\n    together so that they can later be plotted: start with a model\n    first, and then augment with a data frame:\n\n\\scriptsize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrut.1 %>% augment(asphalt) -> rut.1a\nrut.1a\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"pct.a.surf\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"pct.a.base\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"fines\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"voids\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"rut.depth\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"viscosity\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"run\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".fitted\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".resid\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".hat\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".sigma\"],\"name\":[11],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".cooksd\"],\"name\":[12],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".std.resid\"],\"name\":[13],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"4.68\",\"2\":\"4.87\",\"3\":\"8.4\",\"4\":\"4.916\",\"5\":\"6.75\",\"6\":\"2.80\",\"7\":\"1\",\"8\":\"10.4046631\",\"9\":\"-3.6546631\",\"10\":\"0.14428881\",\"11\":\"3.293545\",\"12\":\"0.0340389900\",\"13\":\"-1.18873388\"},{\"1\":\"5.19\",\"2\":\"4.50\",\"3\":\"6.5\",\"4\":\"4.563\",\"5\":\"13.00\",\"6\":\"1.40\",\"7\":\"1\",\"8\":\"13.7175010\",\"9\":\"-0.7175010\",\"10\":\"0.23695840\",\"11\":\"3.390685\",\"12\":\"0.0027097205\",\"13\":\"-0.24714358\"},{\"1\":\"4.82\",\"2\":\"4.73\",\"3\":\"7.9\",\"4\":\"5.321\",\"5\":\"14.75\",\"6\":\"1.40\",\"7\":\"1\",\"8\":\"13.1485937\",\"9\":\"1.6014063\",\"10\":\"0.16306240\",\"11\":\"3.375330\",\"12\":\"0.0077210169\",\"13\":\"0.52669101\"},{\"1\":\"4.85\",\"2\":\"4.76\",\"3\":\"8.3\",\"4\":\"4.865\",\"5\":\"12.60\",\"6\":\"3.30\",\"7\":\"1\",\"8\":\"10.3812142\",\"9\":\"2.2187858\",\"10\":\"0.14373937\",\"11\":\"3.357991\",\"12\":\"0.0124824051\",\"13\":\"0.72146170\"},{\"1\":\"4.86\",\"2\":\"4.95\",\"3\":\"8.4\",\"4\":\"3.776\",\"5\":\"8.25\",\"6\":\"1.70\",\"7\":\"1\",\"8\":\"12.1212369\",\"9\":\"-3.8712369\",\"10\":\"0.29401154\",\"11\":\"3.256246\",\"12\":\"0.1143332145\",\"13\":\"-1.38628283\"},{\"1\":\"5.16\",\"2\":\"4.45\",\"3\":\"7.4\",\"4\":\"4.397\",\"5\":\"10.67\",\"6\":\"2.90\",\"7\":\"1\",\"8\":\"11.2471559\",\"9\":\"-0.5771559\",\"10\":\"0.22462286\",\"11\":\"3.392256\",\"12\":\"0.0016096002\",\"13\":\"-0.19721392\"},{\"1\":\"4.82\",\"2\":\"5.05\",\"3\":\"6.8\",\"4\":\"4.867\",\"5\":\"7.28\",\"6\":\"3.70\",\"7\":\"1\",\"8\":\"10.0943557\",\"9\":\"-2.8143557\",\"10\":\"0.29024008\",\"11\":\"3.322782\",\"12\":\"0.0590195893\",\"13\":\"-1.00513444\"},{\"1\":\"4.86\",\"2\":\"4.70\",\"3\":\"8.6\",\"4\":\"4.828\",\"5\":\"12.67\",\"6\":\"1.70\",\"7\":\"1\",\"8\":\"12.4486421\",\"9\":\"0.2213579\",\"10\":\"0.20105063\",\"11\":\"3.394615\",\"12\":\"0.0001996001\",\"13\":\"0.07451374\"},{\"1\":\"4.78\",\"2\":\"4.84\",\"3\":\"6.7\",\"4\":\"4.865\",\"5\":\"12.58\",\"6\":\"0.92\",\"7\":\"1\",\"8\":\"14.0434565\",\"9\":\"-1.4634565\",\"10\":\"0.24901755\",\"11\":\"3.376697\",\"12\":\"0.0122302059\",\"13\":\"-0.50811945\"},{\"1\":\"5.16\",\"2\":\"4.76\",\"3\":\"7.7\",\"4\":\"4.034\",\"5\":\"20.60\",\"6\":\"0.68\",\"7\":\"1\",\"8\":\"16.0306310\",\"9\":\"4.5693690\",\"10\":\"0.19023245\",\"11\":\"3.225683\",\"12\":\"0.0783393747\",\"13\":\"1.52783674\"},{\"1\":\"4.57\",\"2\":\"4.82\",\"3\":\"7.4\",\"4\":\"5.450\",\"5\":\"3.58\",\"6\":\"6.00\",\"7\":\"1\",\"8\":\"7.7010710\",\"9\":\"-4.1210710\",\"10\":\"0.20429379\",\"11\":\"3.255472\",\"12\":\"0.0708718265\",\"13\":\"-1.39006345\"},{\"1\":\"4.61\",\"2\":\"4.65\",\"3\":\"6.7\",\"4\":\"4.853\",\"5\":\"7.00\",\"6\":\"4.30\",\"7\":\"1\",\"8\":\"8.2617700\",\"9\":\"-1.2617700\",\"10\":\"0.18260011\",\"11\":\"3.382513\",\"12\":\"0.0056272483\",\"13\":\"-0.41991735\"},{\"1\":\"5.07\",\"2\":\"5.10\",\"3\":\"7.5\",\"4\":\"4.257\",\"5\":\"26.20\",\"6\":\"0.60\",\"7\":\"1\",\"8\":\"16.6053174\",\"9\":\"9.5946826\",\"10\":\"0.27225005\",\"11\":\"2.454837\",\"12\":\"0.6120241820\",\"13\":\"3.38407842\"},{\"1\":\"4.66\",\"2\":\"5.09\",\"3\":\"8.2\",\"4\":\"5.144\",\"5\":\"11.67\",\"6\":\"1.80\",\"7\":\"1\",\"8\":\"12.1066470\",\"9\":\"-0.4366470\",\"10\":\"0.19764059\",\"11\":\"3.393486\",\"12\":\"0.0007570122\",\"13\":\"-0.14667189\"},{\"1\":\"5.42\",\"2\":\"4.41\",\"3\":\"5.8\",\"4\":\"3.718\",\"5\":\"7.67\",\"6\":\"6.00\",\"7\":\"1\",\"8\":\"9.3512572\",\"9\":\"-1.6812572\",\"10\":\"0.42242058\",\"11\":\"3.363525\",\"12\":\"0.0462906935\",\"13\":\"-0.66562433\"},{\"1\":\"5.01\",\"2\":\"4.74\",\"3\":\"7.1\",\"4\":\"4.715\",\"5\":\"12.25\",\"6\":\"4.40\",\"7\":\"1\",\"8\":\"9.8564872\",\"9\":\"2.3935128\",\"10\":\"0.10140279\",\"11\":\"3.353936\",\"12\":\"0.0093045424\",\"13\":\"0.75972096\"},{\"1\":\"4.97\",\"2\":\"4.66\",\"3\":\"6.5\",\"4\":\"4.625\",\"5\":\"0.76\",\"6\":\"88.00\",\"7\":\"0\",\"8\":\"1.9981046\",\"9\":\"-1.2381046\",\"10\":\"0.11939377\",\"11\":\"3.383843\",\"12\":\"0.0030523657\",\"13\":\"-0.39697884\"},{\"1\":\"4.01\",\"2\":\"4.72\",\"3\":\"8.0\",\"4\":\"4.977\",\"5\":\"1.35\",\"6\":\"62.00\",\"7\":\"0\",\"8\":\"-0.2520991\",\"9\":\"1.6020991\",\"10\":\"0.54331426\",\"11\":\"3.358827\",\"12\":\"0.0864766261\",\"13\":\"0.71331534\"},{\"1\":\"4.96\",\"2\":\"4.90\",\"3\":\"6.8\",\"4\":\"4.322\",\"5\":\"1.44\",\"6\":\"50.00\",\"7\":\"0\",\"8\":\"3.8995337\",\"9\":\"-2.4595337\",\"10\":\"0.20071240\",\"11\":\"3.346195\",\"12\":\"0.0245797445\",\"13\":\"-0.82775561\"},{\"1\":\"5.20\",\"2\":\"4.70\",\"3\":\"8.2\",\"4\":\"5.087\",\"5\":\"1.60\",\"6\":\"58.00\",\"7\":\"0\",\"8\":\"4.7458989\",\"9\":\"-3.1458989\",\"10\":\"0.28265675\",\"11\":\"3.305486\",\"12\":\"0.0703070039\",\"13\":\"-1.11758907\"},{\"1\":\"4.80\",\"2\":\"4.60\",\"3\":\"6.6\",\"4\":\"5.971\",\"5\":\"1.10\",\"6\":\"90.00\",\"7\":\"0\",\"8\":\"1.9812848\",\"9\":\"-0.8812848\",\"10\":\"0.27310524\",\"11\":\"3.388159\",\"12\":\"0.0051918637\",\"13\":\"-0.31101505\"},{\"1\":\"4.98\",\"2\":\"4.69\",\"3\":\"6.4\",\"4\":\"4.647\",\"5\":\"0.85\",\"6\":\"66.00\",\"7\":\"0\",\"8\":\"2.9836576\",\"9\":\"-2.1336576\",\"10\":\"0.14544102\",\"11\":\"3.360723\",\"12\":\"0.0117261657\",\"13\":\"-0.69447179\"},{\"1\":\"5.35\",\"2\":\"4.76\",\"3\":\"7.3\",\"4\":\"5.115\",\"5\":\"1.20\",\"6\":\"140.00\",\"7\":\"0\",\"8\":\"2.5518613\",\"9\":\"-1.3518613\",\"10\":\"0.22515768\",\"11\":\"3.379872\",\"12\":\"0.0088639673\",\"13\":\"-0.46208979\"},{\"1\":\"5.04\",\"2\":\"4.80\",\"3\":\"7.8\",\"4\":\"5.939\",\"5\":\"0.56\",\"6\":\"240.00\",\"7\":\"0\",\"8\":\"0.2166289\",\"9\":\"0.3433711\",\"10\":\"0.26115808\",\"11\":\"3.393986\",\"12\":\"0.0007295107\",\"13\":\"0.12019569\"},{\"1\":\"4.80\",\"2\":\"4.80\",\"3\":\"7.4\",\"4\":\"5.916\",\"5\":\"0.72\",\"6\":\"420.00\",\"7\":\"0\",\"8\":\"-2.5600739\",\"9\":\"3.2800739\",\"10\":\"0.22912423\",\"11\":\"3.304431\",\"12\":\"0.0536504339\",\"13\":\"1.12406734\"},{\"1\":\"4.83\",\"2\":\"4.60\",\"3\":\"6.7\",\"4\":\"5.471\",\"5\":\"0.47\",\"6\":\"500.00\",\"7\":\"0\",\"8\":\"-3.5867932\",\"9\":\"4.0567932\",\"10\":\"0.18842093\",\"11\":\"3.262577\",\"12\":\"0.0608887373\",\"13\":\"1.35493464\"},{\"1\":\"4.66\",\"2\":\"4.72\",\"3\":\"7.2\",\"4\":\"4.602\",\"5\":\"0.33\",\"6\":\"180.00\",\"7\":\"0\",\"8\":\"-1.3443110\",\"9\":\"1.6743110\",\"10\":\"0.17471200\",\"11\":\"3.373187\",\"12\":\"0.0093001023\",\"13\":\"0.55454178\"},{\"1\":\"4.67\",\"2\":\"4.50\",\"3\":\"6.3\",\"4\":\"5.043\",\"5\":\"0.26\",\"6\":\"270.00\",\"7\":\"0\",\"8\":\"-2.7052602\",\"9\":\"2.9652602\",\"10\":\"0.19627650\",\"11\":\"3.324218\",\"12\":\"0.0345528885\",\"13\":\"0.99520001\"},{\"1\":\"4.72\",\"2\":\"4.70\",\"3\":\"6.8\",\"4\":\"5.075\",\"5\":\"0.76\",\"6\":\"170.00\",\"7\":\"0\",\"8\":\"-0.7190617\",\"9\":\"1.4790617\",\"10\":\"0.09152254\",\"11\":\"3.379554\",\"12\":\"0.0031374446\",\"13\":\"0.46690669\"},{\"1\":\"5.00\",\"2\":\"5.07\",\"3\":\"7.2\",\"4\":\"4.334\",\"5\":\"0.80\",\"6\":\"98.00\",\"7\":\"0\",\"8\":\"2.2059456\",\"9\":\"-1.4059456\",\"10\":\"0.29835418\",\"11\":\"3.376921\",\"12\":\"0.0154930545\",\"13\":\"-0.50502218\"},{\"1\":\"4.70\",\"2\":\"4.80\",\"3\":\"7.7\",\"4\":\"5.705\",\"5\":\"2.00\",\"6\":\"35.00\",\"7\":\"0\",\"8\":\"4.7846837\",\"9\":\"-2.7846837\",\"10\":\"0.25281842\",\"11\":\"3.327890\",\"12\":\"0.0454163162\",\"13\":\"-0.96931223\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n## What does rut.1a contain?\n\n\\small\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(rut.1a)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"pct.a.surf\" \"pct.a.base\" \"fines\"      \"voids\"      \"rut.depth\" \n [6] \"viscosity\"  \"run\"        \".fitted\"    \".resid\"     \".hat\"      \n[11] \".sigma\"     \".cooksd\"    \".std.resid\"\n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\n-   all the stuff in original data frame, plus:\n-   quantities from regression (starting with a dot)\n\n## Plotting residuals against $x$-variables\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrut.1a %>%\n  mutate(log_vis=log(viscosity)) %>% \n  pivot_longer(\n    c(pct.a.surf:voids, run, log_vis),\n    names_to=\"xname\", values_to=\"x\"\n  ) %>%\n  ggplot(aes(x = x, y = .resid)) +\n  geom_point() + facet_wrap(~xname, scales = \"free\") -> g\n```\n:::\n\n\n\n\n## The plot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng\n```\n\n::: {.cell-output-display}\n![](asphalt_files/figure-revealjs/asphalt-14-1.png){width=960}\n:::\n:::\n\n\n\n\n## Comments\n\n-   There is serious curve in plot of residuals vs. fitted values.\n    Suggests a transformation of $y$.\n-   The residuals-vs-$x$'s plots don't show any serious trends. Worst\n    probably that potential curve against log-viscosity.\n-   Also, large positive residual, 10, that shows up on all plots.\n    Perhaps transformation of $y$ will help with this too.\n-   If residual-fitted plot OK, but some residual-$x$ plots not, try\n    transforming those $x$'s, eg. by adding $x^2$ to help with curve.\n\n## Which transformation?\n\n-   Best way: consult with person who brought you the data.\n-   Can't do that here!\n-   No idea what transformation would be good.\n-   Let data choose: \"Box-Cox transformation\".\n-   Scale is that of \"ladder of powers\": power transformation, but 0 is\n    log.\n\n## Running Box-Cox\n\nFrom package `MASS`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxcox(rut.depth ~ pct.a.surf + pct.a.base + fines + voids +\n  log(viscosity) + run, data = asphalt)\n```\n\n::: {.cell-output-display}\n![](asphalt_files/figure-revealjs/asphalt-15-1.png){width=960}\n:::\n:::\n\n\n\n\n## Comments on Box-Cox plot\n\n-   $\\lambda$ represents power to transform $y$ with.\n-   Best single choice of transformation parameter $\\lambda$ is peak of\n    curve, close to 0.\n-   Vertical dotted lines give CI for $\\lambda$, about (−0.05, 0.2).\n-   $\\lambda = 0$ means \"log\".\n-   Narrowness of confidence interval mean that these not supported by\n    data:\n    -   No transformation ($\\lambda = 1$)\n    -   Square root ($\\lambda = 0.5$)\n    -   Reciprocal ($\\lambda = −1$).\n\n## Relationships with explanatories\n\n-   As before: plot response (now `log(rut.depth)`) against other\n    explanatory variables, all in one shot:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nasphalt %>%\n  mutate(log_vis=log(viscosity)) %>% \n  pivot_longer(\n    c(pct.a.surf:voids, run, log_vis),\n    names_to=\"xname\", values_to=\"x\"\n  ) %>%\n  ggplot(aes(y = log(rut.depth), x = x)) + geom_point() +\n  facet_wrap(~xname, scales = \"free\") -> g3\n```\n:::\n\n\n\n\n## The new plots\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng3\n```\n\n::: {.cell-output-display}\n![](asphalt_files/figure-revealjs/asphalt-17-1.png){width=960}\n:::\n:::\n\n\n\n\n## Modelling with transformed response\n\n-   These trends look pretty straight, especially with `log.viscosity`.\n-   Values of `log.rut.depth` for each `run` have same spread.\n-   Other trends weak, but are straight if they exist.\n-   Start modelling from the beginning again.\n-   Model `log.rut.depth` in terms of everything else, see what can be\n    removed:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrut.2 <- lm(log(rut.depth) ~ pct.a.surf + pct.a.base +\n  fines + voids + log(viscosity) + run, data = asphalt)\n```\n:::\n\n\n\n\n-   use `tidy` from `broom` to display just the coefficients.\n\n## Output\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(rut.2)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"std.error\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"(Intercept)\",\"2\":\"-1.57298922\",\"3\":\"2.43617401\",\"4\":\"-0.6456802\",\"5\":\"5.246124e-01\"},{\"1\":\"pct.a.surf\",\"2\":\"0.58357559\",\"3\":\"0.23198113\",\"4\":\"2.5156167\",\"5\":\"1.898184e-02\"},{\"1\":\"pct.a.base\",\"2\":\"-0.10336733\",\"3\":\"0.36890801\",\"4\":\"-0.2801981\",\"5\":\"7.817265e-01\"},{\"1\":\"fines\",\"2\":\"0.09775203\",\"3\":\"0.09406823\",\"4\":\"1.0391609\",\"5\":\"3.090864e-01\"},{\"1\":\"voids\",\"2\":\"0.19885377\",\"3\":\"0.12305882\",\"4\":\"1.6159245\",\"5\":\"1.191815e-01\"},{\"1\":\"log(viscosity)\",\"2\":\"-0.55768728\",\"3\":\"0.08543236\",\"4\":\"-6.5278223\",\"5\":\"9.445184e-07\"},{\"1\":\"run\",\"2\":\"0.34004833\",\"3\":\"0.33888780\",\"4\":\"1.0034245\",\"5\":\"3.256663e-01\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n## Taking out everything non-significant\n\n-   Try: remove everything but pct.a.surf and log.viscosity:\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrut.3 <- lm(log(rut.depth) ~ pct.a.surf + log(viscosity), data = asphalt)\ntidy(rut.3)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"std.error\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"(Intercept)\",\"2\":\"0.9001389\",\"3\":\"1.08059251\",\"4\":\"0.8330049\",\"5\":\"4.118914e-01\"},{\"1\":\"pct.a.surf\",\"2\":\"0.3911481\",\"3\":\"0.21879462\",\"4\":\"1.7877408\",\"5\":\"8.464692e-02\"},{\"1\":\"log(viscosity)\",\"2\":\"-0.6185628\",\"3\":\"0.02713293\",\"4\":\"-22.7974904\",\"5\":\"1.274771e-19\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n\n## Check that removing all those variables wasn't too much\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(rut.3, rut.2)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Res.Df\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"RSS\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Df\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sum of Sq\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"F\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Pr(>F)\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"28\",\"2\":\"2.880919\",\"3\":\"NA\",\"4\":\"NA\",\"5\":\"NA\",\"6\":\"NA\",\"_rn_\":\"1\"},{\"1\":\"24\",\"2\":\"2.288764\",\"3\":\"4\",\"4\":\"0.5921551\",\"5\":\"1.552336\",\"6\":\"0.2191461\",\"_rn_\":\"2\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n-   $H_0$ : two models equally good; $H_a$ : bigger model better.\n-   Null not rejected here; small model as good as the big one, so\n    prefer simpler smaller model `rut.3`.\n\n## Find the largest P-value by eye:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(rut.2)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"std.error\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"(Intercept)\",\"2\":\"-1.57298922\",\"3\":\"2.43617401\",\"4\":\"-0.6456802\",\"5\":\"5.246124e-01\"},{\"1\":\"pct.a.surf\",\"2\":\"0.58357559\",\"3\":\"0.23198113\",\"4\":\"2.5156167\",\"5\":\"1.898184e-02\"},{\"1\":\"pct.a.base\",\"2\":\"-0.10336733\",\"3\":\"0.36890801\",\"4\":\"-0.2801981\",\"5\":\"7.817265e-01\"},{\"1\":\"fines\",\"2\":\"0.09775203\",\"3\":\"0.09406823\",\"4\":\"1.0391609\",\"5\":\"3.090864e-01\"},{\"1\":\"voids\",\"2\":\"0.19885377\",\"3\":\"0.12305882\",\"4\":\"1.6159245\",\"5\":\"1.191815e-01\"},{\"1\":\"log(viscosity)\",\"2\":\"-0.55768728\",\"3\":\"0.08543236\",\"4\":\"-6.5278223\",\"5\":\"9.445184e-07\"},{\"1\":\"run\",\"2\":\"0.34004833\",\"3\":\"0.33888780\",\"4\":\"1.0034245\",\"5\":\"3.256663e-01\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n-   Largest P-value is 0.78 for `pct.a.base`, not significant.\n-   So remove this first, re-fit and re-assess.\n-   Or, as over.\n\n## Get the computer to find the largest P-value for you\n\n-   Output from `tidy` is itself a data frame, thus:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(rut.2) %>% arrange(p.value)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"std.error\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"log(viscosity)\",\"2\":\"-0.55768728\",\"3\":\"0.08543236\",\"4\":\"-6.5278223\",\"5\":\"9.445184e-07\"},{\"1\":\"pct.a.surf\",\"2\":\"0.58357559\",\"3\":\"0.23198113\",\"4\":\"2.5156167\",\"5\":\"1.898184e-02\"},{\"1\":\"voids\",\"2\":\"0.19885377\",\"3\":\"0.12305882\",\"4\":\"1.6159245\",\"5\":\"1.191815e-01\"},{\"1\":\"fines\",\"2\":\"0.09775203\",\"3\":\"0.09406823\",\"4\":\"1.0391609\",\"5\":\"3.090864e-01\"},{\"1\":\"run\",\"2\":\"0.34004833\",\"3\":\"0.33888780\",\"4\":\"1.0034245\",\"5\":\"3.256663e-01\"},{\"1\":\"(Intercept)\",\"2\":\"-1.57298922\",\"3\":\"2.43617401\",\"4\":\"-0.6456802\",\"5\":\"5.246124e-01\"},{\"1\":\"pct.a.base\",\"2\":\"-0.10336733\",\"3\":\"0.36890801\",\"4\":\"-0.2801981\",\"5\":\"7.817265e-01\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n-   Largest P-value at the bottom.\n\n## Take out `pct.a.base`\n\n-   Copy and paste the `lm` code and remove what you're removing:\n\n\\small\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrut.4 <- lm(log(rut.depth) ~ pct.a.surf + fines + voids + \n              log(viscosity) + run, data = asphalt)\ntidy(rut.4) %>% arrange(p.value) %>% select(term, p.value)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"p.value\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"log(viscosity)\",\"2\":\"4.483621e-07\"},{\"1\":\"pct.a.surf\",\"2\":\"1.432182e-02\"},{\"1\":\"voids\",\"2\":\"1.090561e-01\"},{\"1\":\"(Intercept)\",\"2\":\"2.075999e-01\"},{\"1\":\"run\",\"2\":\"2.793085e-01\"},{\"1\":\"fines\",\"2\":\"3.164725e-01\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n-   `fines` is next to go, P-value 0.32.\n\n## \"Update\"\n\nAnother way to do the same thing:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrut.4 <- update(rut.2, . ~ . - pct.a.base)\ntidy(rut.4) %>% arrange(p.value)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"std.error\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"log(viscosity)\",\"2\":\"-0.55249041\",\"3\":\"0.08184342\",\"4\":\"-6.750578\",\"5\":\"4.483621e-07\"},{\"1\":\"pct.a.surf\",\"2\":\"0.59299473\",\"3\":\"0.22526263\",\"4\":\"2.632459\",\"5\":\"1.432182e-02\"},{\"1\":\"voids\",\"2\":\"0.20046739\",\"3\":\"0.12063727\",\"4\":\"1.661737\",\"5\":\"1.090561e-01\"},{\"1\":\"(Intercept)\",\"2\":\"-2.07849871\",\"3\":\"1.60665073\",\"4\":\"-1.293684\",\"5\":\"2.075999e-01\"},{\"1\":\"run\",\"2\":\"0.35977353\",\"3\":\"0.32532859\",\"4\":\"1.105877\",\"5\":\"2.793085e-01\"},{\"1\":\"fines\",\"2\":\"0.08894579\",\"3\":\"0.08701332\",\"4\":\"1.022209\",\"5\":\"3.164725e-01\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n-   Again, `fines` is the one to go. (Output identical as it should be.)\n\n## Take out fines:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrut.5 <- update(rut.4, . ~ . - fines)\ntidy(rut.5) %>% arrange(p.value) %>% select(term, p.value)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"p.value\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"log(viscosity)\",\"2\":\"5.591602e-08\"},{\"1\":\"pct.a.surf\",\"2\":\"1.997130e-02\"},{\"1\":\"voids\",\"2\":\"5.767397e-02\"},{\"1\":\"run\",\"2\":\"3.645654e-01\"},{\"1\":\"(Intercept)\",\"2\":\"3.752525e-01\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\nCan't take out intercept, so `run`, with P-value 0.36, goes next.\n\n## Take out run:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrut.6 <- update(rut.5, . ~ . - run)\ntidy(rut.6) %>% arrange(p.value) %>% select(term, p.value)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"p.value\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"log(viscosity)\",\"2\":\"5.288267e-19\"},{\"1\":\"pct.a.surf\",\"2\":\"1.796333e-02\"},{\"1\":\"voids\",\"2\":\"4.356036e-02\"},{\"1\":\"(Intercept)\",\"2\":\"4.607966e-01\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\nAgain, can't take out intercept, so largest P-value is for `voids`,\n0.044. But this is significant, so we shouldn't remove `voids`.\n\n## Comments\n\n-   Here we stop: `pct.a.surf`, `voids` and `log.viscosity` would all\n    make fit significantly worse if removed. So they stay.\n-   Different final result from taking things out one at a time (top),\n    than by taking out 4 at once (bottom):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoef(rut.6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   (Intercept)     pct.a.surf          voids log(viscosity) \n    -1.0207945      0.5554686      0.2447934     -0.6464911 \n```\n\n\n:::\n\n```{.r .cell-code}\ncoef(rut.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   (Intercept)     pct.a.surf log(viscosity) \n     0.9001389      0.3911481     -0.6185628 \n```\n\n\n:::\n:::\n\n\n\n\n-   Point: Can make difference which way we go.\n\n## Comments on variable selection\n\n-   Best way to decide which $x$'s belong: expert knowledge: which of\n    them should be important.\n-   Best automatic method: what we did, \"backward selection\".\n-   Do not learn about \"stepwise regression\"! [**eg.\n    here**](https://towardsdatascience.com/stopping-stepwise-why-stepwise-selection-is-bad-and-what-you-should-use-instead-90818b3f52df)\n-   R has function `step` that does backward selection, like this:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstep(rut.2, direction = \"backward\", test = \"F\")\n```\n:::\n\n\n\nGets same answer as we did (by removing least significant x).\n\n-   Removing non-significant $x$'s may remove interesting ones whose\n    P-values happened not to reach 0.05. Consider using less stringent\n    cutoff like 0.20 or even bigger.\n-   Can also fit all possible regressions, as over (may need to do\n    `install.packages(\"leaps\")` first).\n\n## All possible regressions (output over)\n\nUses package `leaps`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleaps <- regsubsets(log(rut.depth) ~ pct.a.surf + \n                      pct.a.base + fines + voids + \n                      log(viscosity) + run, \n                    data = asphalt, nbest = 2)\ns <- summary(leaps)\nwith(s, data.frame(rsq, outmat)) -> d\n```\n:::\n\n\n\n\n## The output\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\\scriptsize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd %>% rownames_to_column(\"model\") %>% arrange(desc(rsq))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"model\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"rsq\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"pct.a.surf\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"pct.a.base\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"fines\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"voids\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"log.viscosity.\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"run\"],\"name\":[8],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"6  ( 1 )\",\"2\":\"0.9609642\",\"3\":\"*\",\"4\":\"*\",\"5\":\"*\",\"6\":\"*\",\"7\":\"*\",\"8\":\"*\"},{\"1\":\"5  ( 1 )\",\"2\":\"0.9608365\",\"3\":\"*\",\"4\":\"\",\"5\":\"*\",\"6\":\"*\",\"7\":\"*\",\"8\":\"*\"},{\"1\":\"5  ( 2 )\",\"2\":\"0.9593265\",\"3\":\"*\",\"4\":\"*\",\"5\":\"*\",\"6\":\"*\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"4  ( 1 )\",\"2\":\"0.9591996\",\"3\":\"*\",\"4\":\"\",\"5\":\"\",\"6\":\"*\",\"7\":\"*\",\"8\":\"*\"},{\"1\":\"4  ( 2 )\",\"2\":\"0.9589206\",\"3\":\"*\",\"4\":\"\",\"5\":\"*\",\"6\":\"*\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"3  ( 1 )\",\"2\":\"0.9578631\",\"3\":\"*\",\"4\":\"\",\"5\":\"\",\"6\":\"*\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"3  ( 2 )\",\"2\":\"0.9534561\",\"3\":\"*\",\"4\":\"\",\"5\":\"*\",\"6\":\"\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"2  ( 1 )\",\"2\":\"0.9508647\",\"3\":\"*\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"2  ( 2 )\",\"2\":\"0.9479541\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"*\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"1  ( 1 )\",\"2\":\"0.9452562\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"1  ( 2 )\",\"2\":\"0.8624107\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"*\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n## Comments\n\n-   Problem: even adding a worthless x increases R-squared. So try for\n    line where R-squared stops increasing \"too much\", eg. top line (just\n    log.viscosity), first 3-variable line (backwards-elimination model).\n    Hard to judge.\n-   One solution (STAC67): adjusted R-squared, where adding worthless\n    variable makes it go down.\n-   `data.frame` rather than `tibble` because there are several columns\n    in `outmat`.\n\n## All possible regressions, adjusted R-squared\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\\scriptsize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwith(s, data.frame(adjr2, outmat)) %>% \n  rownames_to_column(\"model\") %>% \n  arrange(desc(adjr2))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"model\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"adjr2\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"pct.a.surf\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"pct.a.base\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"fines\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"voids\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"log.viscosity.\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"run\"],\"name\":[8],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"3  ( 1 )\",\"2\":\"0.9531812\",\"3\":\"*\",\"4\":\"\",\"5\":\"\",\"6\":\"*\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"5  ( 1 )\",\"2\":\"0.9530038\",\"3\":\"*\",\"4\":\"\",\"5\":\"*\",\"6\":\"*\",\"7\":\"*\",\"8\":\"*\"},{\"1\":\"4  ( 1 )\",\"2\":\"0.9529226\",\"3\":\"*\",\"4\":\"\",\"5\":\"\",\"6\":\"*\",\"7\":\"*\",\"8\":\"*\"},{\"1\":\"4  ( 2 )\",\"2\":\"0.9526007\",\"3\":\"*\",\"4\":\"\",\"5\":\"*\",\"6\":\"*\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"6  ( 1 )\",\"2\":\"0.9512052\",\"3\":\"*\",\"4\":\"*\",\"5\":\"*\",\"6\":\"*\",\"7\":\"*\",\"8\":\"*\"},{\"1\":\"5  ( 2 )\",\"2\":\"0.9511918\",\"3\":\"*\",\"4\":\"*\",\"5\":\"*\",\"6\":\"*\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"3  ( 2 )\",\"2\":\"0.9482845\",\"3\":\"*\",\"4\":\"\",\"5\":\"*\",\"6\":\"\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"2  ( 1 )\",\"2\":\"0.9473550\",\"3\":\"*\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"2  ( 2 )\",\"2\":\"0.9442365\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"*\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"1  ( 1 )\",\"2\":\"0.9433685\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"1  ( 2 )\",\"2\":\"0.8576662\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"*\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n## Revisiting the best model\n\n-   Best model was our `rut.6`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(rut.6)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"std.error\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"(Intercept)\",\"2\":\"-1.0207945\",\"3\":\"1.36430001\",\"4\":\"-0.7482185\",\"5\":\"4.607966e-01\"},{\"1\":\"pct.a.surf\",\"2\":\"0.5554686\",\"3\":\"0.22044153\",\"4\":\"2.5198000\",\"5\":\"1.796333e-02\"},{\"1\":\"voids\",\"2\":\"0.2447934\",\"3\":\"0.11559805\",\"4\":\"2.1176259\",\"5\":\"4.356036e-02\"},{\"1\":\"log(viscosity)\",\"2\":\"-0.6464911\",\"3\":\"0.02878643\",\"4\":\"-22.4581853\",\"5\":\"5.288267e-19\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n## Revisiting (2)\n\n-   Regression slopes say that rut depth increases as log-viscosity\n    decreases, `pct.a.surf` increases and `voids` increases. This more\n    or less checks out with out scatterplots against `log.viscosity`.\n-   We should check residual plots again, though previous scatterplots\n    say it's unlikely that there will be a problem:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggplot(rut.6, aes(y = .resid, x = .fitted)) + \ngeom_point()\n```\n:::\n\n\n\n\n## Residuals against fitted values\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng\n```\n\n::: {.cell-output-display}\n![](asphalt_files/figure-revealjs/asphalt-39-1.png){width=960}\n:::\n:::\n\n\n\n\n## Normal quantile plot of residuals\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(rut.6, aes(sample = .resid)) + stat_qq() + stat_qq_line()\n```\n\n::: {.cell-output-display}\n![](asphalt_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n\n\n## Plotting residuals against x's\n\n-   Do our trick again to put them all on one plot:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naugment(rut.6, asphalt) %>%\n  mutate(log_vis=log(viscosity)) %>% \n  pivot_longer(\n    c(pct.a.surf:voids, run, log_vis),\n    names_to=\"xname\", values_to=\"x\",\n  ) %>%\n  ggplot(aes(y = .resid, x = x)) + geom_point() +\n  facet_wrap(~xname, scales = \"free\") -> g2\n```\n:::\n\n\n\n\n## Residuals against the x's\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng2\n```\n\n::: {.cell-output-display}\n![](asphalt_files/figure-revealjs/asphalt-41-1.png){width=960}\n:::\n:::\n\n\n\n\n## Comments\n\n-   None of the plots show any sort of pattern. The points all look\n    random on each plot.\n-   On the plot of fitted values (and on the one of log.viscosity), the\n    points seem to form a \"left half\" and a \"right half\" with a gap in\n    the middle. This is not a concern.\n-   One of the pct.a.surf values is low outlier (4), shows up top left\n    of that plot.\n-   Only two possible values of run; the points in each group look\n    randomly scattered around 0, with equal spreads.\n-   Residuals seem to go above zero further than below, suggesting a\n    mild non-normality, but not enough to be a problem.\n\n## Variable-selection strategies\n\n-   Expert knowledge.\n-   Backward elimination.\n-   All possible regressions.\n-   Taking a variety of models to experts and asking their opinion.\n-   Use a looser cutoff to eliminate variables in backward elimination\n    (eg. only if P-value greater than 0.20).\n-   If goal is prediction, eliminating worthless variables less\n    important.\n-   If goal is understanding, want to eliminate worthless variables\n    where possible.\n-   Results of variable selection not always reproducible, so caution\n    advised.\n",
    "supporting": [
      "asphalt_files/figure-revealjs"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"asphalt_files/libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"asphalt_files/libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}