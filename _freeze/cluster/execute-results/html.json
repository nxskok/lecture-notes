{
  "hash": "a5e49bb0243b212c243a4704ca9bd9e8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Cluster analysis\"\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n\n## Cluster Analysis\n\n-   One side-effect of discriminant analysis: could draw picture of data\n    (if 1st 2s `LD`s told most of story) and see which individuals\n    \"close\" to each other.\n\n-   Discriminant analysis requires knowledge of groups.\n\n-   Without knowledge of groups, use *cluster analysis*: see which\n    individuals close together, which groups suggested by data.\n\n-   Idea: see how individuals group into \"clusters\" of nearby\n    individuals.\n\n-   Base on \"dissimilarities\" between individuals.\n\n-   Or base on standard deviations and correlations between variables\n    (assesses dissimilarity behind scenes).\n\n## Packages\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(MASS) # for lda later\nlibrary(tidyverse)\nlibrary(spatstat) # for crossdist later\nlibrary(ggrepel)\nlibrary(conflicted)\nconflict_prefer(\"select\", \"dplyr\")\nconflict_prefer(\"filter\", \"dplyr\")\n```\n:::\n\n\n\n\n## One to ten in 11 languages\n\n|     | English | Norwegian | Danish | Dutch | German |\n|-----|---------|-----------|--------|-------|--------|\n| 1   | one     | en        | en     | een   | eins   |\n| 2   | two     | to        | to     | twee  | zwei   |\n| 3   | three   | tre       | tre    | drie  | drei   |\n| 4   | four    | fire      | fire   | vier  | vier   |\n| 5   | five    | fem       | fem    | vijf  | funf   |\n| 6   | six     | seks      | seks   | zes   | sechs  |\n| 7   | seven   | sju       | syv    | zeven | sieben |\n| 8   | eight   | atte      | otte   | acht  | acht   |\n| 9   | nine    | ni        | ni     | negen | neun   |\n| 10  | ten     | ti        | ti     | tien  | zehn   |\n\n## One to ten {.smaller}\n\n|     | French | Spanish | Italian | Polish   | Hungarian | Finnish   |\n|-----|--------|---------|---------|----------|-----------|-----------|\n| 1   | un     | uno     | uno     | jeden    | egy       | yksi      |\n| 2   | deux   | dos     | due     | dwa      | ketto     | kaksi     |\n| 3   | trois  | tres    | tre     | trzy     | harom     | kolme     |\n| 4   | quatre | cuatro  | quattro | cztery   | negy      | nelja     |\n| 5   | cinq   | cinco   | cinque  | piec     | ot        | viisi     |\n| 6   | six    | seis    | sei     | szesc    | hat       | kuusi     |\n| 7   | sept   | siete   | sette   | siedem   | het       | seitseman |\n| 8   | huit   | ocho    | otto    | osiem    | nyolc     | kahdeksan |\n| 9   | neuf   | nueve   | nove    | dziewiec | kilenc    | yhdeksan  |\n| 10  | dix    | diez    | dieci   | dziesiec | tiz       | kymmenen  |\n\n## Dissimilarities and languages example\n\n-   Can define dissimilarities how you like (whatever makes sense in\n    application).\n\n-   Sometimes defining \"similarity\" makes more sense; can turn this into\n    dissimilarity by subtracting from some maximum.\n\n-   Example: numbers 1--10 in various European languages. Define\n    similarity between two languages by counting how often the same\n    number has a name starting with the same letter (and dissimilarity\n    by how often number has names starting with different letter).\n\n-   Crude (doesn't even look at most of the words), but see how\n    effective.\n\n## Two kinds of cluster analysis\n\n-   Looking at process of forming clusters (of similar languages):\n    **hierarchical cluster analysis** (`hclust`).\n\n-   Start with each individual in cluster by itself.\n\n-   Join \"closest\" clusters one by one until all individuals in one\n    cluster.\n\n-   How to define closeness of two *clusters*? Not obvious, investigate\n    in a moment.\n\n-   Know how many clusters: which division into that many clusters is\n    \"best\" for individuals? **K-means clustering** (`kmeans`).\n\n## Two made-up clusters\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](cluster_files/figure-revealjs/bCluster-2-1.png){width=960}\n:::\n:::\n\n\n\n\nHow to measure distance between set of red points and set of blue ones?\n\n## Single-linkage distance\n\nFind the red point and the blue point that are closest together:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](cluster_files/figure-revealjs/bCluster-3-1.png){width=960}\n:::\n:::\n\n\n\n\nSingle-linkage distance between 2 clusters is distance between their\nclosest points.\n\n## Complete linkage\n\nFind the red and blue points that are farthest apart:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](cluster_files/figure-revealjs/bCluster-4-1.png){width=960}\n:::\n:::\n\n\n\n\nComplete-linkage distance is distance between farthest points.\n\n## Ward's method\n\nWork out mean of each cluster and join point to its mean:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](cluster_files/figure-revealjs/bCluster-5-1.png){width=960}\n:::\n:::\n\n\n\n\nWork out (i) sum of squared distances of points from means.\n\n## Ward's method part 2\n\nNow imagine combining the two clusters and working out overall mean.\nJoin each point to this mean:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](cluster_files/figure-revealjs/bCluster-6-1.png){width=960}\n:::\n:::\n\n\n\n\nCalc sum of squared distances (ii) of points to combined mean.\n\n## Ward's method part 3\n\n-   Sum of squares (ii) will be bigger than (i) (points closer to own\n    cluster mean than combined mean).\n\n-   Ward's distance is (ii) minus (i).\n\n-   Think of as \"cost\" of combining clusters:\n\n-   if clusters close together, (ii) only a little larger than (i)\n\n-   if clusters far apart, (ii) a lot larger than (i) (as in example).\n\n## Hierarchical clustering revisited\n\n-   Single linkage, complete linkage, Ward are ways of measuring\n    closeness of clusters.\n\n-   Use them, starting with each observation in own cluster, to\n    repeatedly combine two closest clusters until all points in one\n    cluster.\n\n-   They will give different answers (clustering stories).\n\n-   Single linkage tends to make \"stringy\" clusters because clusters can\n    be very different apart from two closest points.\n\n-   Complete linkage insists on whole clusters being similar.\n\n-   Ward tends to form many small clusters first.\n\n## Dissimilarity data in R\n\nDissimilarities for language data were how many number names had\n*different* first letter:\n\n\n\n\n\n\n\n\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_url <- \"http://ritsokiguess.site/datafiles/languages.txt\"\n(number.d <- read_table(my_url))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"la\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"en\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"no\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"dk\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"nl\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"de\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"fr\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"es\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"it\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"pl\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"hu\"],\"name\":[11],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"fi\"],\"name\":[12],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"en\",\"2\":\"0\",\"3\":\"2\",\"4\":\"2\",\"5\":\"7\",\"6\":\"6\",\"7\":\"6\",\"8\":\"6\",\"9\":\"6\",\"10\":\"7\",\"11\":\"9\",\"12\":\"9\"},{\"1\":\"no\",\"2\":\"2\",\"3\":\"0\",\"4\":\"1\",\"5\":\"5\",\"6\":\"4\",\"7\":\"6\",\"8\":\"6\",\"9\":\"6\",\"10\":\"7\",\"11\":\"8\",\"12\":\"9\"},{\"1\":\"dk\",\"2\":\"2\",\"3\":\"1\",\"4\":\"0\",\"5\":\"6\",\"6\":\"5\",\"7\":\"6\",\"8\":\"5\",\"9\":\"5\",\"10\":\"6\",\"11\":\"8\",\"12\":\"9\"},{\"1\":\"nl\",\"2\":\"7\",\"3\":\"5\",\"4\":\"6\",\"5\":\"0\",\"6\":\"5\",\"7\":\"9\",\"8\":\"9\",\"9\":\"9\",\"10\":\"10\",\"11\":\"8\",\"12\":\"9\"},{\"1\":\"de\",\"2\":\"6\",\"3\":\"4\",\"4\":\"5\",\"5\":\"5\",\"6\":\"0\",\"7\":\"7\",\"8\":\"7\",\"9\":\"7\",\"10\":\"8\",\"11\":\"9\",\"12\":\"9\"},{\"1\":\"fr\",\"2\":\"6\",\"3\":\"6\",\"4\":\"6\",\"5\":\"9\",\"6\":\"7\",\"7\":\"0\",\"8\":\"2\",\"9\":\"1\",\"10\":\"5\",\"11\":\"10\",\"12\":\"9\"},{\"1\":\"es\",\"2\":\"6\",\"3\":\"6\",\"4\":\"5\",\"5\":\"9\",\"6\":\"7\",\"7\":\"2\",\"8\":\"0\",\"9\":\"1\",\"10\":\"3\",\"11\":\"10\",\"12\":\"9\"},{\"1\":\"it\",\"2\":\"6\",\"3\":\"6\",\"4\":\"5\",\"5\":\"9\",\"6\":\"7\",\"7\":\"1\",\"8\":\"1\",\"9\":\"0\",\"10\":\"4\",\"11\":\"10\",\"12\":\"9\"},{\"1\":\"pl\",\"2\":\"7\",\"3\":\"7\",\"4\":\"6\",\"5\":\"10\",\"6\":\"8\",\"7\":\"5\",\"8\":\"3\",\"9\":\"4\",\"10\":\"0\",\"11\":\"10\",\"12\":\"9\"},{\"1\":\"hu\",\"2\":\"9\",\"3\":\"8\",\"4\":\"8\",\"5\":\"8\",\"6\":\"9\",\"7\":\"10\",\"8\":\"10\",\"9\":\"10\",\"10\":\"10\",\"11\":\"0\",\"12\":\"8\"},{\"1\":\"fi\",\"2\":\"9\",\"3\":\"9\",\"4\":\"9\",\"5\":\"9\",\"6\":\"9\",\"7\":\"9\",\"8\":\"9\",\"9\":\"8\",\"10\":\"9\",\"11\":\"8\",\"12\":\"0\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Making a distance object\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnumber.d %>%\n  select(-la) %>%\n  as.dist() -> d\nd\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   en no dk nl de fr es it pl hu\nno  2                           \ndk  2  1                        \nnl  7  5  6                     \nde  6  4  5  5                  \nfr  6  6  6  9  7               \nes  6  6  5  9  7  2            \nit  6  6  5  9  7  1  1         \npl  7  7  6 10  8  5  3  4      \nhu  9  8  8  8  9 10 10 10 10   \nfi  9  9  9  9  9  9  9  8  9  8\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(d)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"dist\"\n```\n\n\n:::\n:::\n\n\n\n\n## Cluster analysis and dendrogram\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd.hc <- hclust(d, method = \"single\")\nplot(d.hc)\n```\n\n::: {.cell-output-display}\n![](cluster_files/figure-revealjs/bCluster-10-1.png){width=960}\n:::\n:::\n\n\n\n\n## Comments\n\n-   Tree shows how languages combined into clusters.\n\n-   First (bottom), Spanish, French, Italian joined into one cluster,\n    Norwegian and Danish into another.\n\n-   Later, English joined to Norse languages, Polish to Romance group.\n\n-   Then German, Dutch make a Germanic group.\n\n-   Finally, Hungarian and Finnish joined to each other and everything\n    else.\n\n## Clustering process\n\n\\small\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenframe(d.hc$labels)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"name\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"value\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"en\"},{\"1\":\"2\",\"2\":\"no\"},{\"1\":\"3\",\"2\":\"dk\"},{\"1\":\"4\",\"2\":\"nl\"},{\"1\":\"5\",\"2\":\"de\"},{\"1\":\"6\",\"2\":\"fr\"},{\"1\":\"7\",\"2\":\"es\"},{\"1\":\"8\",\"2\":\"it\"},{\"1\":\"9\",\"2\":\"pl\"},{\"1\":\"10\",\"2\":\"hu\"},{\"1\":\"11\",\"2\":\"fi\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd.hc$merge\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      [,1] [,2]\n [1,]   -2   -3\n [2,]   -6   -8\n [3,]   -7    2\n [4,]   -1    1\n [5,]   -9    3\n [6,]   -5    4\n [7,]   -4    6\n [8,]    5    7\n [9,]  -10    8\n[10,]  -11    9\n```\n\n\n:::\n:::\n\n\n\n\n## Comments\n\n-   Lines of `merge` show what was combined\n\n    -   First, languages 2 and 3 (`no` and `dk`)\n\n    -   Then languages 6 and 8 (`fr` and `it`)\n\n    -   Then #7 combined with cluster formed at step 2 (`es` joined to\n        `fr` and `it`).\n\n    -   Then `en` joined to `no` and `dk` \\ldots\n\n    -   Finally `fi` joined to all others.\n\n## Complete linkage\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd.hc <- hclust(d, method = \"complete\")\nplot(d.hc)\n```\n\n::: {.cell-output-display}\n![](cluster_files/figure-revealjs/bCluster-12-1.png){width=960}\n:::\n:::\n\n\n\n\n## Ward\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd.hc <- hclust(d, method = \"ward.D\")\nplot(d.hc)\n```\n\n::: {.cell-output-display}\n![](cluster_files/figure-revealjs/wardo-1.png){width=960}\n:::\n:::\n\n\n\n\n## Chopping the tree\n\n-   Three clusters (from Ward) looks good:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncutree(d.hc, 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nen no dk nl de fr es it pl hu fi \n 1  1  1  1  1  2  2  2  2  3  3 \n```\n\n\n:::\n:::\n\n\n\n\n## Turning the \"named vector\" into a data frame\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncutree(d.hc, 3) %>% enframe(name=\"country\", value=\"cluster\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"country\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"cluster\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"en\",\"2\":\"1\"},{\"1\":\"no\",\"2\":\"1\"},{\"1\":\"dk\",\"2\":\"1\"},{\"1\":\"nl\",\"2\":\"1\"},{\"1\":\"de\",\"2\":\"1\"},{\"1\":\"fr\",\"2\":\"2\"},{\"1\":\"es\",\"2\":\"2\"},{\"1\":\"it\",\"2\":\"2\"},{\"1\":\"pl\",\"2\":\"2\"},{\"1\":\"hu\",\"2\":\"3\"},{\"1\":\"fi\",\"2\":\"3\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\scriptsize\n\n## Drawing those clusters on the tree\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(d.hc)\nrect.hclust(d.hc, 3)\n```\n\n::: {.cell-output-display}\n![](cluster_files/figure-revealjs/asfsagd-1.png){width=960}\n:::\n:::\n\n\n\n\n## Comparing single-linkage and Ward\n\n-   In Ward, Dutch and German get joined earlier (before joining to\n    Germanic cluster).\n\n-   Also Hungarian and Finnish get combined earlier.\n\n## Making those dissimilarities\n\nOriginal data:\n\n\\tiny\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_url <- \"http://ritsokiguess.site/datafiles/one-ten.txt\"\nlang <- read_delim(my_url, \" \")\nlang\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"en\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"no\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"dk\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"nl\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"de\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"fr\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"es\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"it\"],\"name\":[8],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"pl\"],\"name\":[9],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"hu\"],\"name\":[10],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"fi\"],\"name\":[11],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"one\",\"2\":\"en\",\"3\":\"en\",\"4\":\"een\",\"5\":\"eins\",\"6\":\"un\",\"7\":\"uno\",\"8\":\"uno\",\"9\":\"jeden\",\"10\":\"egy\",\"11\":\"yksi\"},{\"1\":\"two\",\"2\":\"to\",\"3\":\"to\",\"4\":\"twee\",\"5\":\"zwei\",\"6\":\"deux\",\"7\":\"dos\",\"8\":\"due\",\"9\":\"dwa\",\"10\":\"ketto\",\"11\":\"kaksi\"},{\"1\":\"three\",\"2\":\"tre\",\"3\":\"tre\",\"4\":\"drie\",\"5\":\"drei\",\"6\":\"trois\",\"7\":\"tres\",\"8\":\"tre\",\"9\":\"trzy\",\"10\":\"harom\",\"11\":\"kolme\"},{\"1\":\"four\",\"2\":\"fire\",\"3\":\"fire\",\"4\":\"vier\",\"5\":\"vier\",\"6\":\"quatre\",\"7\":\"cuatro\",\"8\":\"quattro\",\"9\":\"cztery\",\"10\":\"negy\",\"11\":\"nelja\"},{\"1\":\"five\",\"2\":\"fem\",\"3\":\"fem\",\"4\":\"vijf\",\"5\":\"funf\",\"6\":\"cinq\",\"7\":\"cinco\",\"8\":\"cinque\",\"9\":\"piec\",\"10\":\"ot\",\"11\":\"viisi\"},{\"1\":\"six\",\"2\":\"seks\",\"3\":\"seks\",\"4\":\"zes\",\"5\":\"sechs\",\"6\":\"six\",\"7\":\"seis\",\"8\":\"sei\",\"9\":\"szesc\",\"10\":\"hat\",\"11\":\"kuusi\"},{\"1\":\"seven\",\"2\":\"sju\",\"3\":\"syv\",\"4\":\"zeven\",\"5\":\"sieben\",\"6\":\"sept\",\"7\":\"siete\",\"8\":\"sette\",\"9\":\"siedem\",\"10\":\"het\",\"11\":\"seitseman\"},{\"1\":\"eight\",\"2\":\"atte\",\"3\":\"otte\",\"4\":\"acht\",\"5\":\"acht\",\"6\":\"huit\",\"7\":\"ocho\",\"8\":\"otto\",\"9\":\"osiem\",\"10\":\"nyolc\",\"11\":\"kahdeksan\"},{\"1\":\"nine\",\"2\":\"ni\",\"3\":\"ni\",\"4\":\"negen\",\"5\":\"neun\",\"6\":\"neuf\",\"7\":\"nueve\",\"8\":\"nove\",\"9\":\"dziewiec\",\"10\":\"kilenc\",\"11\":\"yhdeksan\"},{\"1\":\"ten\",\"2\":\"ti\",\"3\":\"ti\",\"4\":\"tien\",\"5\":\"zehn\",\"6\":\"dix\",\"7\":\"diez\",\"8\":\"dieci\",\"9\":\"dziesiec\",\"10\":\"tiz\",\"11\":\"kymmenen\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\nIt would be a lot easier to extract the first letter if the number names\nwere all in one column.\n\n## Tidy, and extract first letter\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlang %>% mutate(number=row_number()) %>%\n    pivot_longer(-number, names_to=\"language\", values_to=\"name\") %>%\n    mutate(first=str_sub(name, 1, 1)) -> lang.long\nlang.long \n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"number\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"language\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"name\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"first\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"en\",\"3\":\"one\",\"4\":\"o\"},{\"1\":\"1\",\"2\":\"no\",\"3\":\"en\",\"4\":\"e\"},{\"1\":\"1\",\"2\":\"dk\",\"3\":\"en\",\"4\":\"e\"},{\"1\":\"1\",\"2\":\"nl\",\"3\":\"een\",\"4\":\"e\"},{\"1\":\"1\",\"2\":\"de\",\"3\":\"eins\",\"4\":\"e\"},{\"1\":\"1\",\"2\":\"fr\",\"3\":\"un\",\"4\":\"u\"},{\"1\":\"1\",\"2\":\"es\",\"3\":\"uno\",\"4\":\"u\"},{\"1\":\"1\",\"2\":\"it\",\"3\":\"uno\",\"4\":\"u\"},{\"1\":\"1\",\"2\":\"pl\",\"3\":\"jeden\",\"4\":\"j\"},{\"1\":\"1\",\"2\":\"hu\",\"3\":\"egy\",\"4\":\"e\"},{\"1\":\"1\",\"2\":\"fi\",\"3\":\"yksi\",\"4\":\"y\"},{\"1\":\"2\",\"2\":\"en\",\"3\":\"two\",\"4\":\"t\"},{\"1\":\"2\",\"2\":\"no\",\"3\":\"to\",\"4\":\"t\"},{\"1\":\"2\",\"2\":\"dk\",\"3\":\"to\",\"4\":\"t\"},{\"1\":\"2\",\"2\":\"nl\",\"3\":\"twee\",\"4\":\"t\"},{\"1\":\"2\",\"2\":\"de\",\"3\":\"zwei\",\"4\":\"z\"},{\"1\":\"2\",\"2\":\"fr\",\"3\":\"deux\",\"4\":\"d\"},{\"1\":\"2\",\"2\":\"es\",\"3\":\"dos\",\"4\":\"d\"},{\"1\":\"2\",\"2\":\"it\",\"3\":\"due\",\"4\":\"d\"},{\"1\":\"2\",\"2\":\"pl\",\"3\":\"dwa\",\"4\":\"d\"},{\"1\":\"2\",\"2\":\"hu\",\"3\":\"ketto\",\"4\":\"k\"},{\"1\":\"2\",\"2\":\"fi\",\"3\":\"kaksi\",\"4\":\"k\"},{\"1\":\"3\",\"2\":\"en\",\"3\":\"three\",\"4\":\"t\"},{\"1\":\"3\",\"2\":\"no\",\"3\":\"tre\",\"4\":\"t\"},{\"1\":\"3\",\"2\":\"dk\",\"3\":\"tre\",\"4\":\"t\"},{\"1\":\"3\",\"2\":\"nl\",\"3\":\"drie\",\"4\":\"d\"},{\"1\":\"3\",\"2\":\"de\",\"3\":\"drei\",\"4\":\"d\"},{\"1\":\"3\",\"2\":\"fr\",\"3\":\"trois\",\"4\":\"t\"},{\"1\":\"3\",\"2\":\"es\",\"3\":\"tres\",\"4\":\"t\"},{\"1\":\"3\",\"2\":\"it\",\"3\":\"tre\",\"4\":\"t\"},{\"1\":\"3\",\"2\":\"pl\",\"3\":\"trzy\",\"4\":\"t\"},{\"1\":\"3\",\"2\":\"hu\",\"3\":\"harom\",\"4\":\"h\"},{\"1\":\"3\",\"2\":\"fi\",\"3\":\"kolme\",\"4\":\"k\"},{\"1\":\"4\",\"2\":\"en\",\"3\":\"four\",\"4\":\"f\"},{\"1\":\"4\",\"2\":\"no\",\"3\":\"fire\",\"4\":\"f\"},{\"1\":\"4\",\"2\":\"dk\",\"3\":\"fire\",\"4\":\"f\"},{\"1\":\"4\",\"2\":\"nl\",\"3\":\"vier\",\"4\":\"v\"},{\"1\":\"4\",\"2\":\"de\",\"3\":\"vier\",\"4\":\"v\"},{\"1\":\"4\",\"2\":\"fr\",\"3\":\"quatre\",\"4\":\"q\"},{\"1\":\"4\",\"2\":\"es\",\"3\":\"cuatro\",\"4\":\"c\"},{\"1\":\"4\",\"2\":\"it\",\"3\":\"quattro\",\"4\":\"q\"},{\"1\":\"4\",\"2\":\"pl\",\"3\":\"cztery\",\"4\":\"c\"},{\"1\":\"4\",\"2\":\"hu\",\"3\":\"negy\",\"4\":\"n\"},{\"1\":\"4\",\"2\":\"fi\",\"3\":\"nelja\",\"4\":\"n\"},{\"1\":\"5\",\"2\":\"en\",\"3\":\"five\",\"4\":\"f\"},{\"1\":\"5\",\"2\":\"no\",\"3\":\"fem\",\"4\":\"f\"},{\"1\":\"5\",\"2\":\"dk\",\"3\":\"fem\",\"4\":\"f\"},{\"1\":\"5\",\"2\":\"nl\",\"3\":\"vijf\",\"4\":\"v\"},{\"1\":\"5\",\"2\":\"de\",\"3\":\"funf\",\"4\":\"f\"},{\"1\":\"5\",\"2\":\"fr\",\"3\":\"cinq\",\"4\":\"c\"},{\"1\":\"5\",\"2\":\"es\",\"3\":\"cinco\",\"4\":\"c\"},{\"1\":\"5\",\"2\":\"it\",\"3\":\"cinque\",\"4\":\"c\"},{\"1\":\"5\",\"2\":\"pl\",\"3\":\"piec\",\"4\":\"p\"},{\"1\":\"5\",\"2\":\"hu\",\"3\":\"ot\",\"4\":\"o\"},{\"1\":\"5\",\"2\":\"fi\",\"3\":\"viisi\",\"4\":\"v\"},{\"1\":\"6\",\"2\":\"en\",\"3\":\"six\",\"4\":\"s\"},{\"1\":\"6\",\"2\":\"no\",\"3\":\"seks\",\"4\":\"s\"},{\"1\":\"6\",\"2\":\"dk\",\"3\":\"seks\",\"4\":\"s\"},{\"1\":\"6\",\"2\":\"nl\",\"3\":\"zes\",\"4\":\"z\"},{\"1\":\"6\",\"2\":\"de\",\"3\":\"sechs\",\"4\":\"s\"},{\"1\":\"6\",\"2\":\"fr\",\"3\":\"six\",\"4\":\"s\"},{\"1\":\"6\",\"2\":\"es\",\"3\":\"seis\",\"4\":\"s\"},{\"1\":\"6\",\"2\":\"it\",\"3\":\"sei\",\"4\":\"s\"},{\"1\":\"6\",\"2\":\"pl\",\"3\":\"szesc\",\"4\":\"s\"},{\"1\":\"6\",\"2\":\"hu\",\"3\":\"hat\",\"4\":\"h\"},{\"1\":\"6\",\"2\":\"fi\",\"3\":\"kuusi\",\"4\":\"k\"},{\"1\":\"7\",\"2\":\"en\",\"3\":\"seven\",\"4\":\"s\"},{\"1\":\"7\",\"2\":\"no\",\"3\":\"sju\",\"4\":\"s\"},{\"1\":\"7\",\"2\":\"dk\",\"3\":\"syv\",\"4\":\"s\"},{\"1\":\"7\",\"2\":\"nl\",\"3\":\"zeven\",\"4\":\"z\"},{\"1\":\"7\",\"2\":\"de\",\"3\":\"sieben\",\"4\":\"s\"},{\"1\":\"7\",\"2\":\"fr\",\"3\":\"sept\",\"4\":\"s\"},{\"1\":\"7\",\"2\":\"es\",\"3\":\"siete\",\"4\":\"s\"},{\"1\":\"7\",\"2\":\"it\",\"3\":\"sette\",\"4\":\"s\"},{\"1\":\"7\",\"2\":\"pl\",\"3\":\"siedem\",\"4\":\"s\"},{\"1\":\"7\",\"2\":\"hu\",\"3\":\"het\",\"4\":\"h\"},{\"1\":\"7\",\"2\":\"fi\",\"3\":\"seitseman\",\"4\":\"s\"},{\"1\":\"8\",\"2\":\"en\",\"3\":\"eight\",\"4\":\"e\"},{\"1\":\"8\",\"2\":\"no\",\"3\":\"atte\",\"4\":\"a\"},{\"1\":\"8\",\"2\":\"dk\",\"3\":\"otte\",\"4\":\"o\"},{\"1\":\"8\",\"2\":\"nl\",\"3\":\"acht\",\"4\":\"a\"},{\"1\":\"8\",\"2\":\"de\",\"3\":\"acht\",\"4\":\"a\"},{\"1\":\"8\",\"2\":\"fr\",\"3\":\"huit\",\"4\":\"h\"},{\"1\":\"8\",\"2\":\"es\",\"3\":\"ocho\",\"4\":\"o\"},{\"1\":\"8\",\"2\":\"it\",\"3\":\"otto\",\"4\":\"o\"},{\"1\":\"8\",\"2\":\"pl\",\"3\":\"osiem\",\"4\":\"o\"},{\"1\":\"8\",\"2\":\"hu\",\"3\":\"nyolc\",\"4\":\"n\"},{\"1\":\"8\",\"2\":\"fi\",\"3\":\"kahdeksan\",\"4\":\"k\"},{\"1\":\"9\",\"2\":\"en\",\"3\":\"nine\",\"4\":\"n\"},{\"1\":\"9\",\"2\":\"no\",\"3\":\"ni\",\"4\":\"n\"},{\"1\":\"9\",\"2\":\"dk\",\"3\":\"ni\",\"4\":\"n\"},{\"1\":\"9\",\"2\":\"nl\",\"3\":\"negen\",\"4\":\"n\"},{\"1\":\"9\",\"2\":\"de\",\"3\":\"neun\",\"4\":\"n\"},{\"1\":\"9\",\"2\":\"fr\",\"3\":\"neuf\",\"4\":\"n\"},{\"1\":\"9\",\"2\":\"es\",\"3\":\"nueve\",\"4\":\"n\"},{\"1\":\"9\",\"2\":\"it\",\"3\":\"nove\",\"4\":\"n\"},{\"1\":\"9\",\"2\":\"pl\",\"3\":\"dziewiec\",\"4\":\"d\"},{\"1\":\"9\",\"2\":\"hu\",\"3\":\"kilenc\",\"4\":\"k\"},{\"1\":\"9\",\"2\":\"fi\",\"3\":\"yhdeksan\",\"4\":\"y\"},{\"1\":\"10\",\"2\":\"en\",\"3\":\"ten\",\"4\":\"t\"},{\"1\":\"10\",\"2\":\"no\",\"3\":\"ti\",\"4\":\"t\"},{\"1\":\"10\",\"2\":\"dk\",\"3\":\"ti\",\"4\":\"t\"},{\"1\":\"10\",\"2\":\"nl\",\"3\":\"tien\",\"4\":\"t\"},{\"1\":\"10\",\"2\":\"de\",\"3\":\"zehn\",\"4\":\"z\"},{\"1\":\"10\",\"2\":\"fr\",\"3\":\"dix\",\"4\":\"d\"},{\"1\":\"10\",\"2\":\"es\",\"3\":\"diez\",\"4\":\"d\"},{\"1\":\"10\",\"2\":\"it\",\"3\":\"dieci\",\"4\":\"d\"},{\"1\":\"10\",\"2\":\"pl\",\"3\":\"dziesiec\",\"4\":\"d\"},{\"1\":\"10\",\"2\":\"hu\",\"3\":\"tiz\",\"4\":\"t\"},{\"1\":\"10\",\"2\":\"fi\",\"3\":\"kymmenen\",\"4\":\"k\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Calculating dissimilarity\n\n-   Suppose we wanted dissimilarity between English and Norwegian. It's\n    the number of first letters that are different.\n\n-   First get the lines for English:\n\n\\scriptsize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenglish <- lang.long %>% filter(language == \"en\")\nenglish\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"number\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"language\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"name\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"first\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"en\",\"3\":\"one\",\"4\":\"o\"},{\"1\":\"2\",\"2\":\"en\",\"3\":\"two\",\"4\":\"t\"},{\"1\":\"3\",\"2\":\"en\",\"3\":\"three\",\"4\":\"t\"},{\"1\":\"4\",\"2\":\"en\",\"3\":\"four\",\"4\":\"f\"},{\"1\":\"5\",\"2\":\"en\",\"3\":\"five\",\"4\":\"f\"},{\"1\":\"6\",\"2\":\"en\",\"3\":\"six\",\"4\":\"s\"},{\"1\":\"7\",\"2\":\"en\",\"3\":\"seven\",\"4\":\"s\"},{\"1\":\"8\",\"2\":\"en\",\"3\":\"eight\",\"4\":\"e\"},{\"1\":\"9\",\"2\":\"en\",\"3\":\"nine\",\"4\":\"n\"},{\"1\":\"10\",\"2\":\"en\",\"3\":\"ten\",\"4\":\"t\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n## And then the lines for Norwegian\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnorwegian <- lang.long %>% filter(language == \"no\")\nnorwegian\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"number\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"language\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"name\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"first\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"no\",\"3\":\"en\",\"4\":\"e\"},{\"1\":\"2\",\"2\":\"no\",\"3\":\"to\",\"4\":\"t\"},{\"1\":\"3\",\"2\":\"no\",\"3\":\"tre\",\"4\":\"t\"},{\"1\":\"4\",\"2\":\"no\",\"3\":\"fire\",\"4\":\"f\"},{\"1\":\"5\",\"2\":\"no\",\"3\":\"fem\",\"4\":\"f\"},{\"1\":\"6\",\"2\":\"no\",\"3\":\"seks\",\"4\":\"s\"},{\"1\":\"7\",\"2\":\"no\",\"3\":\"sju\",\"4\":\"s\"},{\"1\":\"8\",\"2\":\"no\",\"3\":\"atte\",\"4\":\"a\"},{\"1\":\"9\",\"2\":\"no\",\"3\":\"ni\",\"4\":\"n\"},{\"1\":\"10\",\"2\":\"no\",\"3\":\"ti\",\"4\":\"t\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\nAnd now we want to put them side by side, matched by number. This is\nwhat `left_join` does. (A \"join\" is a lookup of values in one table\nusing another.)\n\n## The join\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\\scriptsize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenglish %>% left_join(norwegian, join_by(number))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"number\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"language.x\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"name.x\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"first.x\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"language.y\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"name.y\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"first.y\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"en\",\"3\":\"one\",\"4\":\"o\",\"5\":\"no\",\"6\":\"en\",\"7\":\"e\"},{\"1\":\"2\",\"2\":\"en\",\"3\":\"two\",\"4\":\"t\",\"5\":\"no\",\"6\":\"to\",\"7\":\"t\"},{\"1\":\"3\",\"2\":\"en\",\"3\":\"three\",\"4\":\"t\",\"5\":\"no\",\"6\":\"tre\",\"7\":\"t\"},{\"1\":\"4\",\"2\":\"en\",\"3\":\"four\",\"4\":\"f\",\"5\":\"no\",\"6\":\"fire\",\"7\":\"f\"},{\"1\":\"5\",\"2\":\"en\",\"3\":\"five\",\"4\":\"f\",\"5\":\"no\",\"6\":\"fem\",\"7\":\"f\"},{\"1\":\"6\",\"2\":\"en\",\"3\":\"six\",\"4\":\"s\",\"5\":\"no\",\"6\":\"seks\",\"7\":\"s\"},{\"1\":\"7\",\"2\":\"en\",\"3\":\"seven\",\"4\":\"s\",\"5\":\"no\",\"6\":\"sju\",\"7\":\"s\"},{\"1\":\"8\",\"2\":\"en\",\"3\":\"eight\",\"4\":\"e\",\"5\":\"no\",\"6\":\"atte\",\"7\":\"a\"},{\"1\":\"9\",\"2\":\"en\",\"3\":\"nine\",\"4\":\"n\",\"5\":\"no\",\"6\":\"ni\",\"7\":\"n\"},{\"1\":\"10\",\"2\":\"en\",\"3\":\"ten\",\"4\":\"t\",\"5\":\"no\",\"6\":\"ti\",\"7\":\"t\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n`first.x` is 1st letter of English word, `first.y` 1st letter of\nNorwegian word.\n\n## Counting the different ones\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenglish %>% left_join(norwegian, join_by(number)) %>% \n  count(different=(first.x != first.y)) \n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"different\"],\"name\":[1],\"type\":[\"lgl\"],\"align\":[\"right\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"FALSE\",\"2\":\"8\"},{\"1\":\"TRUE\",\"2\":\"2\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\nor\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenglish %>% left_join(norwegian, join_by(number)) %>% \n  count(different=(first.x != first.y)) %>% \n  filter(different) %>% pull(n) -> ans\nans\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\nWords for 1 and 8 start with different letter; rest are same.\n\n## A language with itself\n\nThe answer should be zero:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenglish %>% left_join(english, join_by(number)) %>% \n  count(different=(first.x != first.y)) %>% \n  filter(different) %>% pull(n) -> ans\nans\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ninteger(0)\n```\n\n\n:::\n:::\n\n\n\n\n-   but this is \"an integer vector of length zero\".\n-   so we have to allow for this possibility when we write a function to\n    do it.\n\n## Function to do this for any two languages\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountdiff <- function(lang.1, lang.2, d) {\n  d %>% filter(language == lang.1) -> lang1d\n  d %>% filter(language == lang.2) -> lang2d\n  lang1d %>%\n    left_join(lang2d, join_by(number)) %>%\n    count(different = (first.x != first.y)) %>%\n    filter(different) %>% pull(n) -> ans\n  # if ans has length zero, set answer to (integer) zero.\n  ifelse(length(ans)==0, 0L, ans) \n}\n```\n:::\n\n\n\n\n## Testing\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountdiff(\"en\", \"no\", lang.long)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n\n```{.r .cell-code}\ncountdiff(\"en\", \"en\", lang.long)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n\nEnglish and Norwegian have two different; English and English have none\ndifferent.\n\nCheck.\n\n## For all pairs of languages?\n\n-   First need all the languages:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlanguages <- names(lang)\nlanguages\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"en\" \"no\" \"dk\" \"nl\" \"de\" \"fr\" \"es\" \"it\" \"pl\"\n[10] \"hu\" \"fi\"\n```\n\n\n:::\n:::\n\n\n\n\n-   and then all *pairs* of languages:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npairs <- crossing(lang = languages, lang2 = languages) \n```\n:::\n\n\n\n\n## The pairs\n\n\\scriptsize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npairs\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"lang\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"lang2\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"de\",\"2\":\"de\"},{\"1\":\"de\",\"2\":\"dk\"},{\"1\":\"de\",\"2\":\"en\"},{\"1\":\"de\",\"2\":\"es\"},{\"1\":\"de\",\"2\":\"fi\"},{\"1\":\"de\",\"2\":\"fr\"},{\"1\":\"de\",\"2\":\"hu\"},{\"1\":\"de\",\"2\":\"it\"},{\"1\":\"de\",\"2\":\"nl\"},{\"1\":\"de\",\"2\":\"no\"},{\"1\":\"de\",\"2\":\"pl\"},{\"1\":\"dk\",\"2\":\"de\"},{\"1\":\"dk\",\"2\":\"dk\"},{\"1\":\"dk\",\"2\":\"en\"},{\"1\":\"dk\",\"2\":\"es\"},{\"1\":\"dk\",\"2\":\"fi\"},{\"1\":\"dk\",\"2\":\"fr\"},{\"1\":\"dk\",\"2\":\"hu\"},{\"1\":\"dk\",\"2\":\"it\"},{\"1\":\"dk\",\"2\":\"nl\"},{\"1\":\"dk\",\"2\":\"no\"},{\"1\":\"dk\",\"2\":\"pl\"},{\"1\":\"en\",\"2\":\"de\"},{\"1\":\"en\",\"2\":\"dk\"},{\"1\":\"en\",\"2\":\"en\"},{\"1\":\"en\",\"2\":\"es\"},{\"1\":\"en\",\"2\":\"fi\"},{\"1\":\"en\",\"2\":\"fr\"},{\"1\":\"en\",\"2\":\"hu\"},{\"1\":\"en\",\"2\":\"it\"},{\"1\":\"en\",\"2\":\"nl\"},{\"1\":\"en\",\"2\":\"no\"},{\"1\":\"en\",\"2\":\"pl\"},{\"1\":\"es\",\"2\":\"de\"},{\"1\":\"es\",\"2\":\"dk\"},{\"1\":\"es\",\"2\":\"en\"},{\"1\":\"es\",\"2\":\"es\"},{\"1\":\"es\",\"2\":\"fi\"},{\"1\":\"es\",\"2\":\"fr\"},{\"1\":\"es\",\"2\":\"hu\"},{\"1\":\"es\",\"2\":\"it\"},{\"1\":\"es\",\"2\":\"nl\"},{\"1\":\"es\",\"2\":\"no\"},{\"1\":\"es\",\"2\":\"pl\"},{\"1\":\"fi\",\"2\":\"de\"},{\"1\":\"fi\",\"2\":\"dk\"},{\"1\":\"fi\",\"2\":\"en\"},{\"1\":\"fi\",\"2\":\"es\"},{\"1\":\"fi\",\"2\":\"fi\"},{\"1\":\"fi\",\"2\":\"fr\"},{\"1\":\"fi\",\"2\":\"hu\"},{\"1\":\"fi\",\"2\":\"it\"},{\"1\":\"fi\",\"2\":\"nl\"},{\"1\":\"fi\",\"2\":\"no\"},{\"1\":\"fi\",\"2\":\"pl\"},{\"1\":\"fr\",\"2\":\"de\"},{\"1\":\"fr\",\"2\":\"dk\"},{\"1\":\"fr\",\"2\":\"en\"},{\"1\":\"fr\",\"2\":\"es\"},{\"1\":\"fr\",\"2\":\"fi\"},{\"1\":\"fr\",\"2\":\"fr\"},{\"1\":\"fr\",\"2\":\"hu\"},{\"1\":\"fr\",\"2\":\"it\"},{\"1\":\"fr\",\"2\":\"nl\"},{\"1\":\"fr\",\"2\":\"no\"},{\"1\":\"fr\",\"2\":\"pl\"},{\"1\":\"hu\",\"2\":\"de\"},{\"1\":\"hu\",\"2\":\"dk\"},{\"1\":\"hu\",\"2\":\"en\"},{\"1\":\"hu\",\"2\":\"es\"},{\"1\":\"hu\",\"2\":\"fi\"},{\"1\":\"hu\",\"2\":\"fr\"},{\"1\":\"hu\",\"2\":\"hu\"},{\"1\":\"hu\",\"2\":\"it\"},{\"1\":\"hu\",\"2\":\"nl\"},{\"1\":\"hu\",\"2\":\"no\"},{\"1\":\"hu\",\"2\":\"pl\"},{\"1\":\"it\",\"2\":\"de\"},{\"1\":\"it\",\"2\":\"dk\"},{\"1\":\"it\",\"2\":\"en\"},{\"1\":\"it\",\"2\":\"es\"},{\"1\":\"it\",\"2\":\"fi\"},{\"1\":\"it\",\"2\":\"fr\"},{\"1\":\"it\",\"2\":\"hu\"},{\"1\":\"it\",\"2\":\"it\"},{\"1\":\"it\",\"2\":\"nl\"},{\"1\":\"it\",\"2\":\"no\"},{\"1\":\"it\",\"2\":\"pl\"},{\"1\":\"nl\",\"2\":\"de\"},{\"1\":\"nl\",\"2\":\"dk\"},{\"1\":\"nl\",\"2\":\"en\"},{\"1\":\"nl\",\"2\":\"es\"},{\"1\":\"nl\",\"2\":\"fi\"},{\"1\":\"nl\",\"2\":\"fr\"},{\"1\":\"nl\",\"2\":\"hu\"},{\"1\":\"nl\",\"2\":\"it\"},{\"1\":\"nl\",\"2\":\"nl\"},{\"1\":\"nl\",\"2\":\"no\"},{\"1\":\"nl\",\"2\":\"pl\"},{\"1\":\"no\",\"2\":\"de\"},{\"1\":\"no\",\"2\":\"dk\"},{\"1\":\"no\",\"2\":\"en\"},{\"1\":\"no\",\"2\":\"es\"},{\"1\":\"no\",\"2\":\"fi\"},{\"1\":\"no\",\"2\":\"fr\"},{\"1\":\"no\",\"2\":\"hu\"},{\"1\":\"no\",\"2\":\"it\"},{\"1\":\"no\",\"2\":\"nl\"},{\"1\":\"no\",\"2\":\"no\"},{\"1\":\"no\",\"2\":\"pl\"},{\"1\":\"pl\",\"2\":\"de\"},{\"1\":\"pl\",\"2\":\"dk\"},{\"1\":\"pl\",\"2\":\"en\"},{\"1\":\"pl\",\"2\":\"es\"},{\"1\":\"pl\",\"2\":\"fi\"},{\"1\":\"pl\",\"2\":\"fr\"},{\"1\":\"pl\",\"2\":\"hu\"},{\"1\":\"pl\",\"2\":\"it\"},{\"1\":\"pl\",\"2\":\"nl\"},{\"1\":\"pl\",\"2\":\"no\"},{\"1\":\"pl\",\"2\":\"pl\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Run `countdiff` for all those language pairs\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npairs %>% rowwise() %>% \n  mutate(diff = countdiff(lang, lang2, lang.long)) -> thediff\nthediff\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"lang\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"lang2\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"diff\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"de\",\"2\":\"de\",\"3\":\"0\"},{\"1\":\"de\",\"2\":\"dk\",\"3\":\"5\"},{\"1\":\"de\",\"2\":\"en\",\"3\":\"6\"},{\"1\":\"de\",\"2\":\"es\",\"3\":\"7\"},{\"1\":\"de\",\"2\":\"fi\",\"3\":\"9\"},{\"1\":\"de\",\"2\":\"fr\",\"3\":\"7\"},{\"1\":\"de\",\"2\":\"hu\",\"3\":\"9\"},{\"1\":\"de\",\"2\":\"it\",\"3\":\"7\"},{\"1\":\"de\",\"2\":\"nl\",\"3\":\"5\"},{\"1\":\"de\",\"2\":\"no\",\"3\":\"4\"},{\"1\":\"de\",\"2\":\"pl\",\"3\":\"8\"},{\"1\":\"dk\",\"2\":\"de\",\"3\":\"5\"},{\"1\":\"dk\",\"2\":\"dk\",\"3\":\"0\"},{\"1\":\"dk\",\"2\":\"en\",\"3\":\"2\"},{\"1\":\"dk\",\"2\":\"es\",\"3\":\"5\"},{\"1\":\"dk\",\"2\":\"fi\",\"3\":\"9\"},{\"1\":\"dk\",\"2\":\"fr\",\"3\":\"6\"},{\"1\":\"dk\",\"2\":\"hu\",\"3\":\"8\"},{\"1\":\"dk\",\"2\":\"it\",\"3\":\"5\"},{\"1\":\"dk\",\"2\":\"nl\",\"3\":\"6\"},{\"1\":\"dk\",\"2\":\"no\",\"3\":\"1\"},{\"1\":\"dk\",\"2\":\"pl\",\"3\":\"6\"},{\"1\":\"en\",\"2\":\"de\",\"3\":\"6\"},{\"1\":\"en\",\"2\":\"dk\",\"3\":\"2\"},{\"1\":\"en\",\"2\":\"en\",\"3\":\"0\"},{\"1\":\"en\",\"2\":\"es\",\"3\":\"6\"},{\"1\":\"en\",\"2\":\"fi\",\"3\":\"9\"},{\"1\":\"en\",\"2\":\"fr\",\"3\":\"6\"},{\"1\":\"en\",\"2\":\"hu\",\"3\":\"9\"},{\"1\":\"en\",\"2\":\"it\",\"3\":\"6\"},{\"1\":\"en\",\"2\":\"nl\",\"3\":\"7\"},{\"1\":\"en\",\"2\":\"no\",\"3\":\"2\"},{\"1\":\"en\",\"2\":\"pl\",\"3\":\"7\"},{\"1\":\"es\",\"2\":\"de\",\"3\":\"7\"},{\"1\":\"es\",\"2\":\"dk\",\"3\":\"5\"},{\"1\":\"es\",\"2\":\"en\",\"3\":\"6\"},{\"1\":\"es\",\"2\":\"es\",\"3\":\"0\"},{\"1\":\"es\",\"2\":\"fi\",\"3\":\"9\"},{\"1\":\"es\",\"2\":\"fr\",\"3\":\"2\"},{\"1\":\"es\",\"2\":\"hu\",\"3\":\"10\"},{\"1\":\"es\",\"2\":\"it\",\"3\":\"1\"},{\"1\":\"es\",\"2\":\"nl\",\"3\":\"9\"},{\"1\":\"es\",\"2\":\"no\",\"3\":\"6\"},{\"1\":\"es\",\"2\":\"pl\",\"3\":\"3\"},{\"1\":\"fi\",\"2\":\"de\",\"3\":\"9\"},{\"1\":\"fi\",\"2\":\"dk\",\"3\":\"9\"},{\"1\":\"fi\",\"2\":\"en\",\"3\":\"9\"},{\"1\":\"fi\",\"2\":\"es\",\"3\":\"9\"},{\"1\":\"fi\",\"2\":\"fi\",\"3\":\"0\"},{\"1\":\"fi\",\"2\":\"fr\",\"3\":\"9\"},{\"1\":\"fi\",\"2\":\"hu\",\"3\":\"8\"},{\"1\":\"fi\",\"2\":\"it\",\"3\":\"9\"},{\"1\":\"fi\",\"2\":\"nl\",\"3\":\"9\"},{\"1\":\"fi\",\"2\":\"no\",\"3\":\"9\"},{\"1\":\"fi\",\"2\":\"pl\",\"3\":\"9\"},{\"1\":\"fr\",\"2\":\"de\",\"3\":\"7\"},{\"1\":\"fr\",\"2\":\"dk\",\"3\":\"6\"},{\"1\":\"fr\",\"2\":\"en\",\"3\":\"6\"},{\"1\":\"fr\",\"2\":\"es\",\"3\":\"2\"},{\"1\":\"fr\",\"2\":\"fi\",\"3\":\"9\"},{\"1\":\"fr\",\"2\":\"fr\",\"3\":\"0\"},{\"1\":\"fr\",\"2\":\"hu\",\"3\":\"10\"},{\"1\":\"fr\",\"2\":\"it\",\"3\":\"1\"},{\"1\":\"fr\",\"2\":\"nl\",\"3\":\"9\"},{\"1\":\"fr\",\"2\":\"no\",\"3\":\"6\"},{\"1\":\"fr\",\"2\":\"pl\",\"3\":\"5\"},{\"1\":\"hu\",\"2\":\"de\",\"3\":\"9\"},{\"1\":\"hu\",\"2\":\"dk\",\"3\":\"8\"},{\"1\":\"hu\",\"2\":\"en\",\"3\":\"9\"},{\"1\":\"hu\",\"2\":\"es\",\"3\":\"10\"},{\"1\":\"hu\",\"2\":\"fi\",\"3\":\"8\"},{\"1\":\"hu\",\"2\":\"fr\",\"3\":\"10\"},{\"1\":\"hu\",\"2\":\"hu\",\"3\":\"0\"},{\"1\":\"hu\",\"2\":\"it\",\"3\":\"10\"},{\"1\":\"hu\",\"2\":\"nl\",\"3\":\"8\"},{\"1\":\"hu\",\"2\":\"no\",\"3\":\"8\"},{\"1\":\"hu\",\"2\":\"pl\",\"3\":\"10\"},{\"1\":\"it\",\"2\":\"de\",\"3\":\"7\"},{\"1\":\"it\",\"2\":\"dk\",\"3\":\"5\"},{\"1\":\"it\",\"2\":\"en\",\"3\":\"6\"},{\"1\":\"it\",\"2\":\"es\",\"3\":\"1\"},{\"1\":\"it\",\"2\":\"fi\",\"3\":\"9\"},{\"1\":\"it\",\"2\":\"fr\",\"3\":\"1\"},{\"1\":\"it\",\"2\":\"hu\",\"3\":\"10\"},{\"1\":\"it\",\"2\":\"it\",\"3\":\"0\"},{\"1\":\"it\",\"2\":\"nl\",\"3\":\"9\"},{\"1\":\"it\",\"2\":\"no\",\"3\":\"6\"},{\"1\":\"it\",\"2\":\"pl\",\"3\":\"4\"},{\"1\":\"nl\",\"2\":\"de\",\"3\":\"5\"},{\"1\":\"nl\",\"2\":\"dk\",\"3\":\"6\"},{\"1\":\"nl\",\"2\":\"en\",\"3\":\"7\"},{\"1\":\"nl\",\"2\":\"es\",\"3\":\"9\"},{\"1\":\"nl\",\"2\":\"fi\",\"3\":\"9\"},{\"1\":\"nl\",\"2\":\"fr\",\"3\":\"9\"},{\"1\":\"nl\",\"2\":\"hu\",\"3\":\"8\"},{\"1\":\"nl\",\"2\":\"it\",\"3\":\"9\"},{\"1\":\"nl\",\"2\":\"nl\",\"3\":\"0\"},{\"1\":\"nl\",\"2\":\"no\",\"3\":\"5\"},{\"1\":\"nl\",\"2\":\"pl\",\"3\":\"10\"},{\"1\":\"no\",\"2\":\"de\",\"3\":\"4\"},{\"1\":\"no\",\"2\":\"dk\",\"3\":\"1\"},{\"1\":\"no\",\"2\":\"en\",\"3\":\"2\"},{\"1\":\"no\",\"2\":\"es\",\"3\":\"6\"},{\"1\":\"no\",\"2\":\"fi\",\"3\":\"9\"},{\"1\":\"no\",\"2\":\"fr\",\"3\":\"6\"},{\"1\":\"no\",\"2\":\"hu\",\"3\":\"8\"},{\"1\":\"no\",\"2\":\"it\",\"3\":\"6\"},{\"1\":\"no\",\"2\":\"nl\",\"3\":\"5\"},{\"1\":\"no\",\"2\":\"no\",\"3\":\"0\"},{\"1\":\"no\",\"2\":\"pl\",\"3\":\"7\"},{\"1\":\"pl\",\"2\":\"de\",\"3\":\"8\"},{\"1\":\"pl\",\"2\":\"dk\",\"3\":\"6\"},{\"1\":\"pl\",\"2\":\"en\",\"3\":\"7\"},{\"1\":\"pl\",\"2\":\"es\",\"3\":\"3\"},{\"1\":\"pl\",\"2\":\"fi\",\"3\":\"9\"},{\"1\":\"pl\",\"2\":\"fr\",\"3\":\"5\"},{\"1\":\"pl\",\"2\":\"hu\",\"3\":\"10\"},{\"1\":\"pl\",\"2\":\"it\",\"3\":\"4\"},{\"1\":\"pl\",\"2\":\"nl\",\"3\":\"10\"},{\"1\":\"pl\",\"2\":\"no\",\"3\":\"7\"},{\"1\":\"pl\",\"2\":\"pl\",\"3\":\"0\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Make square table of these\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\\scriptsize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthediff %>% pivot_wider(names_from=lang2, values_from=diff)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"lang\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"de\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"dk\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"en\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"es\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"fi\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"fr\"],\"name\":[7],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"hu\"],\"name\":[8],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"it\"],\"name\":[9],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"nl\"],\"name\":[10],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"no\"],\"name\":[11],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"pl\"],\"name\":[12],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"de\",\"2\":\"0\",\"3\":\"5\",\"4\":\"6\",\"5\":\"7\",\"6\":\"9\",\"7\":\"7\",\"8\":\"9\",\"9\":\"7\",\"10\":\"5\",\"11\":\"4\",\"12\":\"8\"},{\"1\":\"dk\",\"2\":\"5\",\"3\":\"0\",\"4\":\"2\",\"5\":\"5\",\"6\":\"9\",\"7\":\"6\",\"8\":\"8\",\"9\":\"5\",\"10\":\"6\",\"11\":\"1\",\"12\":\"6\"},{\"1\":\"en\",\"2\":\"6\",\"3\":\"2\",\"4\":\"0\",\"5\":\"6\",\"6\":\"9\",\"7\":\"6\",\"8\":\"9\",\"9\":\"6\",\"10\":\"7\",\"11\":\"2\",\"12\":\"7\"},{\"1\":\"es\",\"2\":\"7\",\"3\":\"5\",\"4\":\"6\",\"5\":\"0\",\"6\":\"9\",\"7\":\"2\",\"8\":\"10\",\"9\":\"1\",\"10\":\"9\",\"11\":\"6\",\"12\":\"3\"},{\"1\":\"fi\",\"2\":\"9\",\"3\":\"9\",\"4\":\"9\",\"5\":\"9\",\"6\":\"0\",\"7\":\"9\",\"8\":\"8\",\"9\":\"9\",\"10\":\"9\",\"11\":\"9\",\"12\":\"9\"},{\"1\":\"fr\",\"2\":\"7\",\"3\":\"6\",\"4\":\"6\",\"5\":\"2\",\"6\":\"9\",\"7\":\"0\",\"8\":\"10\",\"9\":\"1\",\"10\":\"9\",\"11\":\"6\",\"12\":\"5\"},{\"1\":\"hu\",\"2\":\"9\",\"3\":\"8\",\"4\":\"9\",\"5\":\"10\",\"6\":\"8\",\"7\":\"10\",\"8\":\"0\",\"9\":\"10\",\"10\":\"8\",\"11\":\"8\",\"12\":\"10\"},{\"1\":\"it\",\"2\":\"7\",\"3\":\"5\",\"4\":\"6\",\"5\":\"1\",\"6\":\"9\",\"7\":\"1\",\"8\":\"10\",\"9\":\"0\",\"10\":\"9\",\"11\":\"6\",\"12\":\"4\"},{\"1\":\"nl\",\"2\":\"5\",\"3\":\"6\",\"4\":\"7\",\"5\":\"9\",\"6\":\"9\",\"7\":\"9\",\"8\":\"8\",\"9\":\"9\",\"10\":\"0\",\"11\":\"5\",\"12\":\"10\"},{\"1\":\"no\",\"2\":\"4\",\"3\":\"1\",\"4\":\"2\",\"5\":\"6\",\"6\":\"9\",\"7\":\"6\",\"8\":\"8\",\"9\":\"6\",\"10\":\"5\",\"11\":\"0\",\"12\":\"7\"},{\"1\":\"pl\",\"2\":\"8\",\"3\":\"6\",\"4\":\"7\",\"5\":\"3\",\"6\":\"9\",\"7\":\"5\",\"8\":\"10\",\"9\":\"4\",\"10\":\"10\",\"11\":\"7\",\"12\":\"0\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\nand that was where we began.\n\n## Another example\n\nBirth, death and infant mortality rates for 97 countries (variables not\ndissimilarities):\n\n```         \n24.7  5.7  30.8 Albania         12.5 11.9  14.4 Bulgaria\n13.4 11.7  11.3 Czechoslovakia  12   12.4   7.6 Former_E._Germany\n11.6 13.4  14.8 Hungary         14.3 10.2    16 Poland\n13.6 10.7  26.9 Romania           14    9  20.2 Yugoslavia\n17.7   10    23 USSR            15.2  9.5  13.1 Byelorussia_SSR\n13.4 11.6    13 Ukrainian_SSR   20.7  8.4  25.7 Argentina\n46.6   18   111 Bolivia         28.6  7.9    63 Brazil\n23.4  5.8  17.1 Chile           27.4  6.1    40 Columbia\n32.9  7.4    63 Ecuador         28.3  7.3    56 Guyana\n...\n```\n\n-   Want to find groups of similar countries (and how many groups, which\n    countries in each group).\n\n-   Tree would be unwieldy with 97 countries.\n\n-   More automatic way of finding given number of clusters?\n\n## Reading in\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"http://ritsokiguess.site/datafiles/birthrate.txt\"\nvital <- read_table(url)\nvital\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"birth\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"death\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"infant\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"country\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"24.7\",\"2\":\"5.7\",\"3\":\"30.8\",\"4\":\"Albania\"},{\"1\":\"13.4\",\"2\":\"11.7\",\"3\":\"11.3\",\"4\":\"Czechoslovakia\"},{\"1\":\"11.6\",\"2\":\"13.4\",\"3\":\"14.8\",\"4\":\"Hungary\"},{\"1\":\"13.6\",\"2\":\"10.7\",\"3\":\"26.9\",\"4\":\"Romania\"},{\"1\":\"17.7\",\"2\":\"10.0\",\"3\":\"23.0\",\"4\":\"USSR\"},{\"1\":\"13.4\",\"2\":\"11.6\",\"3\":\"13.0\",\"4\":\"Ukrainian_SSR\"},{\"1\":\"46.6\",\"2\":\"18.0\",\"3\":\"111.0\",\"4\":\"Bolivia\"},{\"1\":\"23.4\",\"2\":\"5.8\",\"3\":\"17.1\",\"4\":\"Chile\"},{\"1\":\"32.9\",\"2\":\"7.4\",\"3\":\"63.0\",\"4\":\"Ecuador\"},{\"1\":\"34.8\",\"2\":\"6.6\",\"3\":\"42.0\",\"4\":\"Paraguay\"},{\"1\":\"18.0\",\"2\":\"9.6\",\"3\":\"21.9\",\"4\":\"Uruguay\"},{\"1\":\"29.0\",\"2\":\"23.2\",\"3\":\"43.0\",\"4\":\"Mexico\"},{\"1\":\"13.2\",\"2\":\"10.1\",\"3\":\"5.8\",\"4\":\"Finland\"},{\"1\":\"13.6\",\"2\":\"9.4\",\"3\":\"7.4\",\"4\":\"France\"},{\"1\":\"10.1\",\"2\":\"9.2\",\"3\":\"11.0\",\"4\":\"Greece\"},{\"1\":\"9.7\",\"2\":\"9.1\",\"3\":\"8.8\",\"4\":\"Italy\"},{\"1\":\"14.3\",\"2\":\"10.7\",\"3\":\"7.8\",\"4\":\"Norway\"},{\"1\":\"10.7\",\"2\":\"8.2\",\"3\":\"8.1\",\"4\":\"Spain\"},{\"1\":\"12.5\",\"2\":\"9.5\",\"3\":\"7.1\",\"4\":\"Switzerland\"},{\"1\":\"14.9\",\"2\":\"7.4\",\"3\":\"8.0\",\"4\":\"Austria\"},{\"1\":\"14.5\",\"2\":\"7.3\",\"3\":\"7.2\",\"4\":\"Canada\"},{\"1\":\"40.4\",\"2\":\"18.7\",\"3\":\"181.6\",\"4\":\"Afghanistan\"},{\"1\":\"42.5\",\"2\":\"11.5\",\"3\":\"108.1\",\"4\":\"Iran\"},{\"1\":\"22.3\",\"2\":\"6.3\",\"3\":\"9.7\",\"4\":\"Israel\"},{\"1\":\"26.8\",\"2\":\"2.2\",\"3\":\"15.6\",\"4\":\"Kuwait\"},{\"1\":\"45.6\",\"2\":\"7.8\",\"3\":\"40.0\",\"4\":\"Oman\"},{\"1\":\"29.2\",\"2\":\"8.4\",\"3\":\"76.0\",\"4\":\"Turkey\"},{\"1\":\"42.2\",\"2\":\"15.5\",\"3\":\"119.0\",\"4\":\"Bangladesh\"},{\"1\":\"21.2\",\"2\":\"6.7\",\"3\":\"32.0\",\"4\":\"China\"},{\"1\":\"30.5\",\"2\":\"10.2\",\"3\":\"91.0\",\"4\":\"India\"},{\"1\":\"23.5\",\"2\":\"18.1\",\"3\":\"25.0\",\"4\":\"Korea\"},{\"1\":\"36.1\",\"2\":\"8.8\",\"3\":\"68.0\",\"4\":\"Mongolia\"},{\"1\":\"30.3\",\"2\":\"8.1\",\"3\":\"107.7\",\"4\":\"Pakistan\"},{\"1\":\"17.8\",\"2\":\"5.2\",\"3\":\"7.5\",\"4\":\"Singapore\"},{\"1\":\"22.3\",\"2\":\"7.7\",\"3\":\"28.0\",\"4\":\"Thailand\"},{\"1\":\"35.5\",\"2\":\"8.3\",\"3\":\"74.0\",\"4\":\"Algeria\"},{\"1\":\"48.5\",\"2\":\"11.6\",\"3\":\"67.0\",\"4\":\"Botswana\"},{\"1\":\"38.8\",\"2\":\"9.5\",\"3\":\"49.4\",\"4\":\"Egypt\"},{\"1\":\"39.4\",\"2\":\"16.8\",\"3\":\"103.0\",\"4\":\"Gabon\"},{\"1\":\"44.4\",\"2\":\"13.1\",\"3\":\"90.0\",\"4\":\"Ghana\"},{\"1\":\"44.0\",\"2\":\"9.4\",\"3\":\"82.0\",\"4\":\"Libya\"},{\"1\":\"35.5\",\"2\":\"9.8\",\"3\":\"82.0\",\"4\":\"Morocco\"},{\"1\":\"44.0\",\"2\":\"12.1\",\"3\":\"135.0\",\"4\":\"Namibia\"},{\"1\":\"48.2\",\"2\":\"23.4\",\"3\":\"154.0\",\"4\":\"Sierra_Leone\"},{\"1\":\"32.1\",\"2\":\"9.9\",\"3\":\"72.0\",\"4\":\"South_Africa\"},{\"1\":\"46.8\",\"2\":\"12.5\",\"3\":\"118.0\",\"4\":\"Swaziland\"},{\"1\":\"52.2\",\"2\":\"15.6\",\"3\":\"103.0\",\"4\":\"Uganda\"},{\"1\":\"45.6\",\"2\":\"14.2\",\"3\":\"83.0\",\"4\":\"Zaire\"},{\"1\":\"41.7\",\"2\":\"10.3\",\"3\":\"66.0\",\"4\":\"Zimbabwe\"},{\"1\":\"12.5\",\"2\":\"11.9\",\"3\":\"14.4\",\"4\":\"Bulgaria\"},{\"1\":\"12.0\",\"2\":\"12.4\",\"3\":\"7.6\",\"4\":\"Former_E._Germany\"},{\"1\":\"14.3\",\"2\":\"10.2\",\"3\":\"16.0\",\"4\":\"Poland\"},{\"1\":\"14.0\",\"2\":\"9.0\",\"3\":\"20.2\",\"4\":\"Yugoslavia\"},{\"1\":\"15.2\",\"2\":\"9.5\",\"3\":\"13.1\",\"4\":\"Byelorussia_SSR\"},{\"1\":\"20.7\",\"2\":\"8.4\",\"3\":\"25.7\",\"4\":\"Argentina\"},{\"1\":\"28.6\",\"2\":\"7.9\",\"3\":\"63.0\",\"4\":\"Brazil\"},{\"1\":\"27.4\",\"2\":\"6.1\",\"3\":\"40.0\",\"4\":\"Columbia\"},{\"1\":\"28.3\",\"2\":\"7.3\",\"3\":\"56.0\",\"4\":\"Guyana\"},{\"1\":\"32.9\",\"2\":\"8.3\",\"3\":\"109.9\",\"4\":\"Peru\"},{\"1\":\"27.5\",\"2\":\"4.4\",\"3\":\"23.3\",\"4\":\"Venezuela\"},{\"1\":\"12.0\",\"2\":\"10.6\",\"3\":\"7.9\",\"4\":\"Belgium\"},{\"1\":\"12.4\",\"2\":\"11.9\",\"3\":\"7.5\",\"4\":\"Denmark\"},{\"1\":\"11.4\",\"2\":\"11.2\",\"3\":\"7.4\",\"4\":\"Germany\"},{\"1\":\"15.1\",\"2\":\"9.1\",\"3\":\"7.5\",\"4\":\"Ireland\"},{\"1\":\"13.2\",\"2\":\"8.6\",\"3\":\"7.1\",\"4\":\"Netherlands\"},{\"1\":\"11.9\",\"2\":\"9.5\",\"3\":\"13.1\",\"4\":\"Portugal\"},{\"1\":\"14.5\",\"2\":\"11.1\",\"3\":\"5.6\",\"4\":\"Sweden\"},{\"1\":\"13.6\",\"2\":\"11.5\",\"3\":\"8.4\",\"4\":\"U.K.\"},{\"1\":\"9.9\",\"2\":\"6.7\",\"3\":\"4.5\",\"4\":\"Japan\"},{\"1\":\"16.7\",\"2\":\"8.1\",\"3\":\"9.1\",\"4\":\"U.S.A.\"},{\"1\":\"28.4\",\"2\":\"3.8\",\"3\":\"16.0\",\"4\":\"Bahrain\"},{\"1\":\"42.6\",\"2\":\"7.8\",\"3\":\"69.0\",\"4\":\"Iraq\"},{\"1\":\"38.9\",\"2\":\"6.4\",\"3\":\"44.0\",\"4\":\"Jordan\"},{\"1\":\"31.7\",\"2\":\"8.7\",\"3\":\"48.0\",\"4\":\"Lebanon\"},{\"1\":\"42.1\",\"2\":\"7.6\",\"3\":\"71.0\",\"4\":\"Saudi_Arabia\"},{\"1\":\"22.8\",\"2\":\"3.8\",\"3\":\"26.0\",\"4\":\"United_Arab_Emirates\"},{\"1\":\"41.4\",\"2\":\"16.6\",\"3\":\"130.0\",\"4\":\"Cambodia\"},{\"1\":\"11.7\",\"2\":\"4.9\",\"3\":\"6.1\",\"4\":\"Hong_Kong\"},{\"1\":\"28.6\",\"2\":\"9.4\",\"3\":\"75.0\",\"4\":\"Indonesia\"},{\"1\":\"31.6\",\"2\":\"5.6\",\"3\":\"24.0\",\"4\":\"Malaysia\"},{\"1\":\"39.6\",\"2\":\"14.8\",\"3\":\"128.0\",\"4\":\"Nepal\"},{\"1\":\"33.2\",\"2\":\"7.7\",\"3\":\"45.0\",\"4\":\"Philippines\"},{\"1\":\"21.3\",\"2\":\"6.2\",\"3\":\"19.4\",\"4\":\"Sri_Lanka\"},{\"1\":\"31.8\",\"2\":\"9.5\",\"3\":\"64.0\",\"4\":\"Vietnam\"},{\"1\":\"47.2\",\"2\":\"20.2\",\"3\":\"137.0\",\"4\":\"Angola\"},{\"1\":\"46.1\",\"2\":\"14.6\",\"3\":\"73.0\",\"4\":\"Congo\"},{\"1\":\"48.6\",\"2\":\"20.7\",\"3\":\"137.0\",\"4\":\"Ethiopia\"},{\"1\":\"47.4\",\"2\":\"21.4\",\"3\":\"143.0\",\"4\":\"Gambia\"},{\"1\":\"47.0\",\"2\":\"11.3\",\"3\":\"72.0\",\"4\":\"Kenya\"},{\"1\":\"48.3\",\"2\":\"25.0\",\"3\":\"130.0\",\"4\":\"Malawi\"},{\"1\":\"45.0\",\"2\":\"18.5\",\"3\":\"141.0\",\"4\":\"Mozambique\"},{\"1\":\"48.5\",\"2\":\"15.6\",\"3\":\"105.0\",\"4\":\"Nigeria\"},{\"1\":\"50.1\",\"2\":\"20.2\",\"3\":\"132.0\",\"4\":\"Somalia\"},{\"1\":\"44.6\",\"2\":\"15.8\",\"3\":\"108.0\",\"4\":\"Sudan\"},{\"1\":\"31.1\",\"2\":\"7.3\",\"3\":\"52.0\",\"4\":\"Tunisia\"},{\"1\":\"50.5\",\"2\":\"14.0\",\"3\":\"106.0\",\"4\":\"Tanzania\"},{\"1\":\"51.1\",\"2\":\"13.7\",\"3\":\"80.0\",\"4\":\"Zambia\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n## Standardizing\n\n-   Infant mortality rate numbers bigger than others, consequence of\n    measurement scale (arbitrary).\n\n-   Standardize (numerical) columns of data frame to have mean 0, SD 1,\n    done by `scale`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvital %>% \n  mutate(across(where(is.numeric), \\(x) scale(x))) -> vital.s\nvital.s\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"birth\"],\"name\":[1],\"type\":[\"dbl[,1]\"],\"align\":[\"right\"]},{\"label\":[\"death\"],\"name\":[2],\"type\":[\"dbl[,1]\"],\"align\":[\"right\"]},{\"label\":[\"infant\"],\"name\":[3],\"type\":[\"dbl[,1]\"],\"align\":[\"right\"]},{\"label\":[\"country\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"-0.334391292\",\"2\":\"-1.10512932\",\"3\":\"-0.52401993\",\"4\":\"Albania\"},{\"1\":\"-1.168543078\",\"2\":\"0.18588887\",\"3\":\"-0.94800133\",\"4\":\"Czechoslovakia\"},{\"1\":\"-1.301416813\",\"2\":\"0.55167736\",\"3\":\"-0.87190210\",\"4\":\"Hungary\"},{\"1\":\"-1.153779329\",\"2\":\"-0.02928083\",\"3\":\"-0.60881621\",\"4\":\"Romania\"},{\"1\":\"-0.851122486\",\"2\":\"-0.17989961\",\"3\":\"-0.69361249\",\"4\":\"USSR\"},{\"1\":\"-1.168543078\",\"2\":\"0.16437190\",\"3\":\"-0.91103885\",\"4\":\"Ukrainian_SSR\"},{\"1\":\"1.282239161\",\"2\":\"1.54145798\",\"3\":\"1.21973944\",\"4\":\"Bolivia\"},{\"1\":\"-0.430355656\",\"2\":\"-1.08361235\",\"3\":\"-0.82189404\",\"4\":\"Chile\"},{\"1\":\"0.270922394\",\"2\":\"-0.73934083\",\"3\":\"0.17609293\",\"4\":\"Ecuador\"},{\"1\":\"0.411178004\",\"2\":\"-0.91147659\",\"3\":\"-0.28050241\",\"4\":\"Paraguay\"},{\"1\":\"-0.828976864\",\"2\":\"-0.26596749\",\"3\":\"-0.71752939\",\"4\":\"Uruguay\"},{\"1\":\"-0.016970701\",\"2\":\"2.66034042\",\"3\":\"-0.25875978\",\"4\":\"Mexico\"},{\"1\":\"-1.183306826\",\"2\":\"-0.15838264\",\"3\":\"-1.06758582\",\"4\":\"Finland\"},{\"1\":\"-1.153779329\",\"2\":\"-0.30900143\",\"3\":\"-1.03279761\",\"4\":\"France\"},{\"1\":\"-1.412144926\",\"2\":\"-0.35203537\",\"3\":\"-0.95452412\",\"4\":\"Greece\"},{\"1\":\"-1.441672423\",\"2\":\"-0.37355234\",\"3\":\"-1.00235792\",\"4\":\"Italy\"},{\"1\":\"-1.102106210\",\"2\":\"-0.02928083\",\"3\":\"-1.02410055\",\"4\":\"Norway\"},{\"1\":\"-1.367853681\",\"2\":\"-0.56720507\",\"3\":\"-1.01757776\",\"4\":\"Spain\"},{\"1\":\"-1.234979945\",\"2\":\"-0.28748446\",\"3\":\"-1.03932040\",\"4\":\"Switzerland\"},{\"1\":\"-1.057814964\",\"2\":\"-0.73934083\",\"3\":\"-1.01975202\",\"4\":\"Austria\"},{\"1\":\"-1.087342461\",\"2\":\"-0.76085780\",\"3\":\"-1.03714613\",\"4\":\"Canada\"},{\"1\":\"0.824562960\",\"2\":\"1.69207677\",\"3\":\"2.75476951\",\"4\":\"Afghanistan\"},{\"1\":\"0.979582318\",\"2\":\"0.14285493\",\"3\":\"1.15668580\",\"4\":\"Iran\"},{\"1\":\"-0.511556273\",\"2\":\"-0.97602750\",\"3\":\"-0.98278954\",\"4\":\"Israel\"},{\"1\":\"-0.179371933\",\"2\":\"-1.85822327\",\"3\":\"-0.85450799\",\"4\":\"Kuwait\"},{\"1\":\"1.208420419\",\"2\":\"-0.65327295\",\"3\":\"-0.32398769\",\"4\":\"Oman\"},{\"1\":\"-0.002206952\",\"2\":\"-0.52417113\",\"3\":\"0.45874720\",\"4\":\"Turkey\"},{\"1\":\"0.957436695\",\"2\":\"1.00353373\",\"3\":\"1.39368053\",\"4\":\"Bangladesh\"},{\"1\":\"-0.592756889\",\"2\":\"-0.88995962\",\"3\":\"-0.49792877\",\"4\":\"China\"},{\"1\":\"0.093757413\",\"2\":\"-0.13686567\",\"3\":\"0.78488673\",\"4\":\"India\"},{\"1\":\"-0.422973782\",\"2\":\"1.56297495\",\"3\":\"-0.65012722\",\"4\":\"Korea\"},{\"1\":\"0.507142369\",\"2\":\"-0.43810325\",\"3\":\"0.28480611\",\"4\":\"Mongolia\"},{\"1\":\"0.078993664\",\"2\":\"-0.58872204\",\"3\":\"1.14798874\",\"4\":\"Pakistan\"},{\"1\":\"-0.843740612\",\"2\":\"-1.21271417\",\"3\":\"-1.03062334\",\"4\":\"Singapore\"},{\"1\":\"-0.511556273\",\"2\":\"-0.67478992\",\"3\":\"-0.58489931\",\"4\":\"Thailand\"},{\"1\":\"0.462851123\",\"2\":\"-0.54568810\",\"3\":\"0.41526192\",\"4\":\"Algeria\"},{\"1\":\"1.422494771\",\"2\":\"0.16437190\",\"3\":\"0.26306348\",\"4\":\"Botswana\"},{\"1\":\"0.706452972\",\"2\":\"-0.28748446\",\"3\":\"-0.11960691\",\"4\":\"Egypt\"},{\"1\":\"0.750744217\",\"2\":\"1.28325434\",\"3\":\"1.04579836\",\"4\":\"Gabon\"},{\"1\":\"1.119837928\",\"2\":\"0.48712645\",\"3\":\"0.76314409\",\"4\":\"Ghana\"},{\"1\":\"1.090310431\",\"2\":\"-0.30900143\",\"3\":\"0.58920301\",\"4\":\"Libya\"},{\"1\":\"0.462851123\",\"2\":\"-0.22293355\",\"3\":\"0.58920301\",\"4\":\"Morocco\"},{\"1\":\"1.090310431\",\"2\":\"0.27195675\",\"3\":\"1.74156269\",\"4\":\"Namibia\"},{\"1\":\"1.400349148\",\"2\":\"2.70337436\",\"3\":\"2.15467277\",\"4\":\"Sierra_Leone\"},{\"1\":\"0.211867400\",\"2\":\"-0.20141658\",\"3\":\"0.37177665\",\"4\":\"South_Africa\"},{\"1\":\"1.297002909\",\"2\":\"0.35802463\",\"3\":\"1.37193789\",\"4\":\"Swaziland\"},{\"1\":\"1.695624117\",\"2\":\"1.02505070\",\"3\":\"1.04579836\",\"4\":\"Uganda\"},{\"1\":\"1.208420419\",\"2\":\"0.72381312\",\"3\":\"0.61094564\",\"4\":\"Zaire\"},{\"1\":\"0.920527324\",\"2\":\"-0.11534870\",\"3\":\"0.24132084\",\"4\":\"Zimbabwe\"},{\"1\":\"-1.234979945\",\"2\":\"0.22892281\",\"3\":\"-0.88059916\",\"4\":\"Bulgaria\"},{\"1\":\"-1.271889316\",\"2\":\"0.33650766\",\"3\":\"-1.02844908\",\"4\":\"Former_E._Germany\"},{\"1\":\"-1.102106210\",\"2\":\"-0.13686567\",\"3\":\"-0.84581094\",\"4\":\"Poland\"},{\"1\":\"-1.124251832\",\"2\":\"-0.39506931\",\"3\":\"-0.75449187\",\"4\":\"Yugoslavia\"},{\"1\":\"-1.035669342\",\"2\":\"-0.28748446\",\"3\":\"-0.90886458\",\"4\":\"Byelorussia_SSR\"},{\"1\":\"-0.629666260\",\"2\":\"-0.52417113\",\"3\":\"-0.63490737\",\"4\":\"Argentina\"},{\"1\":\"-0.046498197\",\"2\":\"-0.63175598\",\"3\":\"0.17609293\",\"4\":\"Brazil\"},{\"1\":\"-0.135080688\",\"2\":\"-1.01906144\",\"3\":\"-0.32398769\",\"4\":\"Columbia\"},{\"1\":\"-0.068643820\",\"2\":\"-0.76085780\",\"3\":\"0.02389448\",\"4\":\"Guyana\"},{\"1\":\"0.270922394\",\"2\":\"-0.54568810\",\"3\":\"1.19582254\",\"4\":\"Peru\"},{\"1\":\"-0.127698814\",\"2\":\"-1.38484993\",\"3\":\"-0.68708970\",\"4\":\"Venezuela\"},{\"1\":\"-1.271889316\",\"2\":\"-0.05079780\",\"3\":\"-1.02192629\",\"4\":\"Belgium\"},{\"1\":\"-1.242361820\",\"2\":\"0.22892281\",\"3\":\"-1.03062334\",\"4\":\"Denmark\"},{\"1\":\"-1.316180562\",\"2\":\"0.07830402\",\"3\":\"-1.03279761\",\"4\":\"Germany\"},{\"1\":\"-1.043051216\",\"2\":\"-0.37355234\",\"3\":\"-1.03062334\",\"4\":\"Ireland\"},{\"1\":\"-1.183306826\",\"2\":\"-0.48113719\",\"3\":\"-1.03932040\",\"4\":\"Netherlands\"},{\"1\":\"-1.279271191\",\"2\":\"-0.28748446\",\"3\":\"-0.90886458\",\"4\":\"Portugal\"},{\"1\":\"-1.087342461\",\"2\":\"0.05678705\",\"3\":\"-1.07193435\",\"4\":\"Sweden\"},{\"1\":\"-1.153779329\",\"2\":\"0.14285493\",\"3\":\"-1.01105497\",\"4\":\"U.K.\"},{\"1\":\"-1.426908675\",\"2\":\"-0.88995962\",\"3\":\"-1.09585125\",\"4\":\"Japan\"},{\"1\":\"-0.924941229\",\"2\":\"-0.58872204\",\"3\":\"-0.99583512\",\"4\":\"U.S.A.\"},{\"1\":\"-0.061261946\",\"2\":\"-1.51395175\",\"3\":\"-0.84581094\",\"4\":\"Bahrain\"},{\"1\":\"0.986964192\",\"2\":\"-0.65327295\",\"3\":\"0.30654875\",\"4\":\"Iraq\"},{\"1\":\"0.713834846\",\"2\":\"-0.95451053\",\"3\":\"-0.23701714\",\"4\":\"Jordan\"},{\"1\":\"0.182339903\",\"2\":\"-0.45962022\",\"3\":\"-0.15004660\",\"4\":\"Lebanon\"},{\"1\":\"0.950054821\",\"2\":\"-0.69630689\",\"3\":\"0.35003402\",\"4\":\"Saudi_Arabia\"},{\"1\":\"-0.474646902\",\"2\":\"-1.51395175\",\"3\":\"-0.62838458\",\"4\":\"United_Arab_Emirates\"},{\"1\":\"0.898381702\",\"2\":\"1.24022040\",\"3\":\"1.63284952\",\"4\":\"Cambodia\"},{\"1\":\"-1.294034939\",\"2\":\"-1.27726508\",\"3\":\"-1.06106303\",\"4\":\"Hong_Kong\"},{\"1\":\"-0.046498197\",\"2\":\"-0.30900143\",\"3\":\"0.43700456\",\"4\":\"Indonesia\"},{\"1\":\"0.174958029\",\"2\":\"-1.12664629\",\"3\":\"-0.67186985\",\"4\":\"Malaysia\"},{\"1\":\"0.765507966\",\"2\":\"0.85291494\",\"3\":\"1.58936425\",\"4\":\"Nepal\"},{\"1\":\"0.293068016\",\"2\":\"-0.67478992\",\"3\":\"-0.21527451\",\"4\":\"Philippines\"},{\"1\":\"-0.585375015\",\"2\":\"-0.99754447\",\"3\":\"-0.77188598\",\"4\":\"Sri_Lanka\"},{\"1\":\"0.189721777\",\"2\":\"-0.28748446\",\"3\":\"0.19783557\",\"4\":\"Vietnam\"},{\"1\":\"1.326530406\",\"2\":\"2.01483132\",\"3\":\"1.78504797\",\"4\":\"Angola\"},{\"1\":\"1.245329790\",\"2\":\"0.80988100\",\"3\":\"0.39351929\",\"4\":\"Congo\"},{\"1\":\"1.429876645\",\"2\":\"2.12241617\",\"3\":\"1.78504797\",\"4\":\"Ethiopia\"},{\"1\":\"1.341294154\",\"2\":\"2.27303496\",\"3\":\"1.91550378\",\"4\":\"Gambia\"},{\"1\":\"1.311766658\",\"2\":\"0.09982099\",\"3\":\"0.37177665\",\"4\":\"Kenya\"},{\"1\":\"1.407731022\",\"2\":\"3.04764588\",\"3\":\"1.63284952\",\"4\":\"Malawi\"},{\"1\":\"1.164129173\",\"2\":\"1.64904283\",\"3\":\"1.87201851\",\"4\":\"Mozambique\"},{\"1\":\"1.422494771\",\"2\":\"1.02505070\",\"3\":\"1.08928363\",\"4\":\"Nigeria\"},{\"1\":\"1.540604758\",\"2\":\"2.01483132\",\"3\":\"1.67633479\",\"4\":\"Somalia\"},{\"1\":\"1.134601676\",\"2\":\"1.06808464\",\"3\":\"1.15451153\",\"4\":\"Sudan\"},{\"1\":\"0.138048658\",\"2\":\"-0.76085780\",\"3\":\"-0.06307606\",\"4\":\"Tunisia\"},{\"1\":\"1.570132255\",\"2\":\"0.68077918\",\"3\":\"1.11102626\",\"4\":\"Tanzania\"},{\"1\":\"1.614423500\",\"2\":\"0.61622827\",\"3\":\"0.54571774\",\"4\":\"Zambia\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n## Three clusters\n\nPretend we know 3 clusters is good. Take off the column of countries,\nand run `kmeans` on the resulting data frame, asking for 3 clusters:\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvital.s %>% select(-country) %>% \n  kmeans(3) -> vital.km3\nvital.km3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nK-means clustering with 3 clusters of sizes 40, 25, 32\n\nCluster means:\n       birth      death      infant\n1 -1.0376994 -0.3289046 -0.90669032\n2  1.1780071  1.3323130  1.32732200\n3  0.3768062 -0.6297388  0.09639258\n\nClustering vector:\n [1] 3 1 1 1 1 1 2 1 3 3 1 2 1 1 1 1 1 1 1 1 1 2 2 1 3 3 3 2\n[29] 1 3 1 3 3 1 1 3 3 3 2 2 3 3 2 2 3 2 2 2 3 1 1 1 1 1 1 3\n[57] 3 3 3 3 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 1 2 1 3 3 2 3 1 3\n[85] 2 2 2 2 3 2 2 2 2 2 3 2 2\n\nWithin cluster sum of squares by cluster:\n[1] 17.21617 28.32560 21.53020\n (between_SS / total_SS =  76.7 %)\n\nAvailable components:\n\n[1] \"cluster\"      \"centers\"      \"totss\"       \n[4] \"withinss\"     \"tot.withinss\" \"betweenss\"   \n[7] \"size\"         \"iter\"         \"ifault\"      \n```\n\n\n:::\n\n```{.r .cell-code}\nnames(vital.km3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"cluster\"      \"centers\"      \"totss\"       \n[4] \"withinss\"     \"tot.withinss\" \"betweenss\"   \n[7] \"size\"         \"iter\"         \"ifault\"      \n```\n\n\n:::\n:::\n\n\n\n\nA lot of output, so look at these individually.\n\n## What's in the output?\n\n-   Cluster sizes:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvital.km3$size\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 40 25 32\n```\n\n\n:::\n:::\n\n\n\n\n-   Cluster centres:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvital.km3$centers\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       birth      death      infant\n1 -1.0376994 -0.3289046 -0.90669032\n2  1.1780071  1.3323130  1.32732200\n3  0.3768062 -0.6297388  0.09639258\n```\n\n\n:::\n:::\n\n\n\n\n-   Cluster 1 has lower than average rates on everything; cluster 2 has\n    much higher than average.\n\n## Cluster sums of squares and membership\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvital.km3$withinss\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 17.21617 28.32560 21.53020\n```\n\n\n:::\n:::\n\n\n\n\nCluster 1 compact relative to others (countries in cluster 1 more\nsimilar).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvital.km3$cluster\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 3 1 1 1 1 1 2 1 3 3 1 2 1 1 1 1 1 1 1 1 1 2 2 1 3 3 3 2\n[29] 1 3 1 3 3 1 1 3 3 3 2 2 3 3 2 2 3 2 2 2 3 1 1 1 1 1 1 3\n[57] 3 3 3 3 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 1 2 1 3 3 2 3 1 3\n[85] 2 2 2 2 3 2 2 2 2 2 3 2 2\n```\n\n\n:::\n:::\n\n\n\n\nThe cluster membership for each of the 97 countries.\n\n## Store countries and clusters to which they belong\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvital.3 <- tibble(\n  country = vital.s$country,\n  cluster = vital.km3$cluster\n)\n```\n:::\n\n\n\n\nNext, which countries in which cluster?\n\nWrite function to extract them:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_countries <- function(i, d) {\n  d %>% filter(cluster == i) %>% pull(country)\n}\n```\n:::\n\n\n\n\n## Cluster membership: cluster 2\n\n\\scriptsize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_countries(2, vital.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Bolivia\"      \"Mexico\"       \"Afghanistan\" \n [4] \"Iran\"         \"Bangladesh\"   \"Gabon\"       \n [7] \"Ghana\"        \"Namibia\"      \"Sierra_Leone\"\n[10] \"Swaziland\"    \"Uganda\"       \"Zaire\"       \n[13] \"Cambodia\"     \"Nepal\"        \"Angola\"      \n[16] \"Congo\"        \"Ethiopia\"     \"Gambia\"      \n[19] \"Malawi\"       \"Mozambique\"   \"Nigeria\"     \n[22] \"Somalia\"      \"Sudan\"        \"Tanzania\"    \n[25] \"Zambia\"      \n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Cluster 3\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_countries(3, vital.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Albania\"      \"Ecuador\"      \"Paraguay\"    \n [4] \"Kuwait\"       \"Oman\"         \"Turkey\"      \n [7] \"India\"        \"Mongolia\"     \"Pakistan\"    \n[10] \"Algeria\"      \"Botswana\"     \"Egypt\"       \n[13] \"Libya\"        \"Morocco\"      \"South_Africa\"\n[16] \"Zimbabwe\"     \"Brazil\"       \"Columbia\"    \n[19] \"Guyana\"       \"Peru\"         \"Venezuela\"   \n[22] \"Bahrain\"      \"Iraq\"         \"Jordan\"      \n[25] \"Lebanon\"      \"Saudi_Arabia\" \"Indonesia\"   \n[28] \"Malaysia\"     \"Philippines\"  \"Vietnam\"     \n[31] \"Kenya\"        \"Tunisia\"     \n```\n\n\n:::\n:::\n\n\n\n\n## Cluster 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_countries(1, vital.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Czechoslovakia\"       \"Hungary\"             \n [3] \"Romania\"              \"USSR\"                \n [5] \"Ukrainian_SSR\"        \"Chile\"               \n [7] \"Uruguay\"              \"Finland\"             \n [9] \"France\"               \"Greece\"              \n[11] \"Italy\"                \"Norway\"              \n[13] \"Spain\"                \"Switzerland\"         \n[15] \"Austria\"              \"Canada\"              \n[17] \"Israel\"               \"China\"               \n[19] \"Korea\"                \"Singapore\"           \n[21] \"Thailand\"             \"Bulgaria\"            \n[23] \"Former_E._Germany\"    \"Poland\"              \n[25] \"Yugoslavia\"           \"Byelorussia_SSR\"     \n[27] \"Argentina\"            \"Belgium\"             \n[29] \"Denmark\"              \"Germany\"             \n[31] \"Ireland\"              \"Netherlands\"         \n[33] \"Portugal\"             \"Sweden\"              \n[35] \"U.K.\"                 \"Japan\"               \n[37] \"U.S.A.\"               \"United_Arab_Emirates\"\n[39] \"Hong_Kong\"            \"Sri_Lanka\"           \n```\n\n\n:::\n:::\n\n\n\n\n## Problem!\n\n-   `kmeans` uses randomization. So result of one run might be different\n    from another run.\n\n-   Example: just run again on 3 clusters, `table` of results:\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\\small\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvital.s %>% \n  select(-country) %>% kmeans(3) -> vital.km3a\ntable(\n  first = vital.km3$cluster,\n  second = vital.km3a$cluster\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     second\nfirst  1  2  3\n    1 40  0  0\n    2  0 24  1\n    3  4  0 28\n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\n-   Clusters are similar but *not same*.\n\n## Solution to this\n\n-   `nstart` option on `kmeans` runs that many times, takes best. Should\n    be same every time:\n\n\\small\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvital.s %>%\n  select(-country) %>%\n  kmeans(3, nstart = 20) -> vital.km3b\n```\n:::\n\n\n\n\n\\normalsize\n\n## How many clusters?\n\n-   Three was just a guess.\n\n-   Idea: try a whole bunch of #clusters (say 2--20), obtain measure of\n    goodness of fit for each, make plot.\n\n-   Appropriate measure is `tot.withinss`.\n\n-   Run `kmeans` for each #clusters, get `tot.withinss` each time.\n\n## Function to get `tot.withinss`\n\n\\ldots for an input number of clusters, taking only numeric columns of\ninput data frame:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nss <- function(i, d) {\n  d %>%\n    select(where(is.numeric)) %>%\n    kmeans(i, nstart = 20) -> km\n  km$tot.withinss\n}\n```\n:::\n\n\n\n\nNote: writing function to be as general as possible, so that we can\nre-use it later.\n\n## Constructing within-cluster SS\n\nMake a data frame with desired numbers of clusters, and fill it with the\ntotal within-group sums of squares. `ss` expects a single number of\nclusters, not a vector of several, so run `rowwise`:\n\n\\normalsize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(clusters = 2:20) %>%\n  rowwise() %>% \n  mutate(wss = ss(clusters, vital.s)) -> ssd\nssd\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"clusters\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"wss\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"2\",\"2\":\"117.375682\"},{\"1\":\"3\",\"2\":\"66.883275\"},{\"1\":\"4\",\"2\":\"51.403362\"},{\"1\":\"5\",\"2\":\"37.513143\"},{\"1\":\"6\",\"2\":\"28.659864\"},{\"1\":\"7\",\"2\":\"24.714303\"},{\"1\":\"8\",\"2\":\"22.214262\"},{\"1\":\"9\",\"2\":\"19.760385\"},{\"1\":\"10\",\"2\":\"17.472883\"},{\"1\":\"11\",\"2\":\"16.090470\"},{\"1\":\"12\",\"2\":\"14.667002\"},{\"1\":\"13\",\"2\":\"13.286864\"},{\"1\":\"14\",\"2\":\"12.106829\"},{\"1\":\"15\",\"2\":\"11.237863\"},{\"1\":\"16\",\"2\":\"10.549220\"},{\"1\":\"17\",\"2\":\"9.707915\"},{\"1\":\"18\",\"2\":\"8.979734\"},{\"1\":\"19\",\"2\":\"8.437435\"},{\"1\":\"20\",\"2\":\"7.974564\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Scree plot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ssd, aes(x = clusters, y = wss)) + geom_point() +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](cluster_files/figure-revealjs/favalli-1.png){width=960}\n:::\n:::\n\n\n\n\n## Interpreting scree plot\n\n-   Lower `wss` better.\n\n-   But lower for larger #clusters, harder to explain.\n\n-   Compromise: low-ish `wss` and low-ish #clusters.\n\n-   Look for \"elbow\" in plot.\n\n-   Idea: this is where `wss` decreases fast then slow.\n\n-   On our plot, small elbow at 6 clusters. Try this many clusters.\n\n## Six clusters, using `nstart`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(457299)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvital.s %>%\n  select(-country) %>%\n  kmeans(6, nstart = 20) -> vital.km6\nvital.km6$size\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 24 18 15  2  8 30\n```\n\n\n:::\n\n```{.r .cell-code}\nvital.km6$centers\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       birth      death     infant\n1  0.4160993 -0.5169988  0.2648754\n2  1.2092406  0.7441347  1.0278003\n3 -0.4357690 -1.1438599 -0.7281108\n4 -0.2199722  2.1116577 -0.4544435\n5  1.3043848  2.1896567  1.9470306\n6 -1.1737104 -0.1856375 -0.9534370\n```\n\n\n:::\n:::\n\n\n\n\n## Make a data frame of countries and clusters\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvital.6 <- tibble(\n  country = vital.s$country,\n  cluster = vital.km6$cluster\n)\nvital.6 %>% sample_n(10)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"country\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"cluster\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Ghana\",\"2\":\"2\"},{\"1\":\"Ukrainian_SSR\",\"2\":\"6\"},{\"1\":\"Ethiopia\",\"2\":\"5\"},{\"1\":\"Somalia\",\"2\":\"5\"},{\"1\":\"Oman\",\"2\":\"1\"},{\"1\":\"Botswana\",\"2\":\"2\"},{\"1\":\"Paraguay\",\"2\":\"1\"},{\"1\":\"Czechoslovakia\",\"2\":\"6\"},{\"1\":\"Peru\",\"2\":\"1\"},{\"1\":\"Afghanistan\",\"2\":\"5\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n## Cluster 1\n\nBelow-average death rate, though other rates a little higher than\naverage:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_countries(1, vital.6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Ecuador\"      \"Paraguay\"     \"Oman\"        \n [4] \"Turkey\"       \"India\"        \"Mongolia\"    \n [7] \"Pakistan\"     \"Algeria\"      \"Egypt\"       \n[10] \"Libya\"        \"Morocco\"      \"South_Africa\"\n[13] \"Zimbabwe\"     \"Brazil\"       \"Guyana\"      \n[16] \"Peru\"         \"Iraq\"         \"Jordan\"      \n[19] \"Lebanon\"      \"Saudi_Arabia\" \"Indonesia\"   \n[22] \"Philippines\"  \"Vietnam\"      \"Tunisia\"     \n```\n\n\n:::\n:::\n\n\n\n\n## Cluster 2\n\nHigh on everything:\n\n\\normalsize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_countries(2, vital.6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Bolivia\"    \"Iran\"       \"Bangladesh\" \"Botswana\"  \n [5] \"Gabon\"      \"Ghana\"      \"Namibia\"    \"Swaziland\" \n [9] \"Uganda\"     \"Zaire\"      \"Cambodia\"   \"Nepal\"     \n[13] \"Congo\"      \"Kenya\"      \"Nigeria\"    \"Sudan\"     \n[17] \"Tanzania\"   \"Zambia\"    \n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Cluster 3\n\nLow on everything: \\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_countries(3, vital.6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Albania\"              \"Chile\"               \n [3] \"Israel\"               \"Kuwait\"              \n [5] \"China\"                \"Singapore\"           \n [7] \"Thailand\"             \"Argentina\"           \n [9] \"Columbia\"             \"Venezuela\"           \n[11] \"Bahrain\"              \"United_Arab_Emirates\"\n[13] \"Hong_Kong\"            \"Malaysia\"            \n[15] \"Sri_Lanka\"           \n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Cluster 4\n\nVery high death rate, just below average on all else:\n\n\\small\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_countries(4, vital.6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Mexico\" \"Korea\" \n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\n## Cluster 5\n\nVery high on everything:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_countries(5, vital.6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Afghanistan\"  \"Sierra_Leone\" \"Angola\"      \n[4] \"Ethiopia\"     \"Gambia\"       \"Malawi\"      \n[7] \"Mozambique\"   \"Somalia\"     \n```\n\n\n:::\n:::\n\n\n\n\n## Cluster 6\n\nA bit below average on everything:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_countries(6, vital.6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Czechoslovakia\"    \"Hungary\"          \n [3] \"Romania\"           \"USSR\"             \n [5] \"Ukrainian_SSR\"     \"Uruguay\"          \n [7] \"Finland\"           \"France\"           \n [9] \"Greece\"            \"Italy\"            \n[11] \"Norway\"            \"Spain\"            \n[13] \"Switzerland\"       \"Austria\"          \n[15] \"Canada\"            \"Bulgaria\"         \n[17] \"Former_E._Germany\" \"Poland\"           \n[19] \"Yugoslavia\"        \"Byelorussia_SSR\"  \n[21] \"Belgium\"           \"Denmark\"          \n[23] \"Germany\"           \"Ireland\"          \n[25] \"Netherlands\"       \"Portugal\"         \n[27] \"Sweden\"            \"U.K.\"             \n[29] \"Japan\"             \"U.S.A.\"           \n```\n\n\n:::\n:::\n\n\n\n\n## Comparing our 3 and 6-cluster solutions\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(three = vital.km3$cluster, six = vital.km6$cluster)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     six\nthree  1  2  3  4  5  6\n    1  0  0  9  1  0 30\n    2  0 16  0  1  8  0\n    3 24  2  6  0  0  0\n```\n\n\n:::\n:::\n\n\n\n\nCompared to 3-cluster solution:\n\n-   most of (old) cluster 1 gone to (new) cluster 6\n\n-   Old cluster 2 split into new clusters 2 and 5 (two types of \"developing\"\n    countries)\n\n-   Old cluster 3 split into new clusters 1 and 3 (two types of \"intermediate\"\n    countries, divided by death rate).\n\n## Getting a picture from `kmeans`\n\n-   Use discriminant analysis on clusters found, treating them as\n    \"known\" groups.\n\n## Discriminant analysis\n\n-   So what makes the groups different?\n\n-   Uses package `MASS` (loaded):\n\n\\footnotesize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvital.lda <- lda(vital.km6$cluster ~ birth + death + infant, \n                 data = vital.s)\nvital.lda$svd\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 21.687195  8.851811  1.773006\n```\n\n\n:::\n\n```{.r .cell-code}\nvital.lda$scaling\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             LD1        LD2        LD3\nbirth  2.6879695  1.1224202 -1.9483853\ndeath  0.6652712 -2.7213044 -0.6049358\ninfant 2.1111801  0.7650912  2.3542296\n```\n\n\n:::\n:::\n\n\n\n\n\\normalsize\n\n-   LD1 is some of everything (high=poor, low=rich).\n\n-   LD2 mainly death rate, high or low.\n\n## A data frame to make plot from\n\n-   Get predictions first:\n\n\\small\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvital.pred <- predict(vital.lda)\nd <- data.frame(\n  country = vital.s$country,\n  cluster = vital.km6$cluster, \n  vital.pred$x\n)\nd\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"country\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"cluster\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"LD1\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"LD2\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"LD3\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Albania\",\"2\":\"3\",\"3\":\"-2.74034473\",\"4\":\"2.23114272\",\"5\":\"0.086392118\",\"_rn_\":\"1\"},{\"1\":\"Czechoslovakia\",\"2\":\"6\",\"3\":\"-5.01874312\",\"4\":\"-2.54276395\",\"5\":\"-0.067491502\",\"_rn_\":\"2\"},{\"1\":\"Hungary\",\"2\":\"6\",\"3\":\"-4.97189595\",\"4\":\"-3.62910309\",\"5\":\"0.149274227\",\"_rn_\":\"3\"},{\"1\":\"Romania\",\"2\":\"6\",\"3\":\"-4.40612396\",\"4\":\"-1.68114304\",\"5\":\"0.832426535\",\"_rn_\":\"4\"},{\"1\":\"USSR\",\"2\":\"6\",\"3\":\"-3.87181416\",\"4\":\"-0.99643221\",\"5\":\"0.134219177\",\"_rn_\":\"5\"},{\"1\":\"Ukrainian_SSR\",\"2\":\"6\",\"3\":\"-4.95502329\",\"4\":\"-2.45593006\",\"5\":\"0.032543051\",\"_rn_\":\"6\"},{\"1\":\"Bolivia\",\"2\":\"2\",\"3\":\"7.04719692\",\"4\":\"-1.82235340\",\"5\":\"-0.559232315\",\"_rn_\":\"7\"},{\"1\":\"Chile\",\"2\":\"3\",\"3\":\"-3.61284528\",\"4\":\"1.83697531\",\"5\":\"-0.440912763\",\"_rn_\":\"8\"},{\"1\":\"Ecuador\",\"2\":\"1\",\"3\":\"0.60813286\",\"4\":\"2.45078735\",\"5\":\"0.333955737\",\"_rn_\":\"9\"},{\"1\":\"Paraguay\",\"2\":\"1\",\"3\":\"-0.09333631\",\"4\":\"2.72730980\",\"5\":\"-0.910115449\",\"_rn_\":\"10\"},{\"1\":\"Uruguay\",\"2\":\"6\",\"3\":\"-3.92003877\",\"4\":\"-0.75565723\",\"5\":\"0.086830641\",\"_rn_\":\"11\"},{\"1\":\"Mexico\",\"2\":\"4\",\"3\":\"1.17794263\",\"4\":\"-7.45661911\",\"5\":\"-2.185449656\",\"_rn_\":\"12\"},{\"1\":\"Finland\",\"2\":\"6\",\"3\":\"-5.53992595\",\"4\":\"-1.71396053\",\"5\":\"-0.111993227\",\"_rn_\":\"13\"},{\"1\":\"France\",\"2\":\"6\",\"3\":\"-5.48731510\",\"4\":\"-1.24432254\",\"5\":\"0.003489983\",\"_rn_\":\"14\"},{\"1\":\"Greece\",\"2\":\"6\",\"3\":\"-6.04517374\",\"4\":\"-1.35732249\",\"5\":\"0.717192252\",\"_rn_\":\"15\"},{\"1\":\"Italy\",\"2\":\"6\",\"3\":\"-6.23984314\",\"4\":\"-1.36850774\",\"5\":\"0.675127833\",\"_rn_\":\"16\"},{\"1\":\"Norway\",\"2\":\"6\",\"3\":\"-5.14396822\",\"4\":\"-1.94087447\",\"5\":\"-0.245927314\",\"_rn_\":\"17\"},{\"1\":\"Spain\",\"2\":\"6\",\"3\":\"-6.20238403\",\"4\":\"-0.77030865\",\"5\":\"0.612616941\",\"_rn_\":\"18\"},{\"1\":\"Switzerland\",\"2\":\"6\",\"3\":\"-5.70503604\",\"4\":\"-1.39900851\",\"5\":\"0.133327537\",\"_rn_\":\"19\"},{\"1\":\"Austria\",\"2\":\"6\",\"3\":\"-5.48811665\",\"4\":\"0.04445534\",\"5\":\"0.107554431\",\"_rn_\":\"20\"},{\"1\":\"Canada\",\"2\":\"6\",\"3\":\"-5.61852237\",\"4\":\"0.05655923\",\"5\":\"0.137152032\",\"_rn_\":\"21\"},{\"1\":\"Afghanistan\",\"2\":\"5\",\"3\":\"9.15790453\",\"4\":\"-1.57150002\",\"5\":\"3.855195867\",\"_rn_\":\"22\"},{\"1\":\"Iran\",\"2\":\"2\",\"3\":\"5.17009665\",\"4\":\"1.59572127\",\"5\":\"0.728082136\",\"_rn_\":\"23\"},{\"1\":\"Israel\",\"2\":\"3\",\"3\":\"-4.09921633\",\"4\":\"1.32996325\",\"5\":\"-0.726569567\",\"_rn_\":\"24\"},{\"1\":\"Kuwait\",\"2\":\"3\",\"3\":\"-3.52238895\",\"4\":\"4.20168393\",\"5\":\"-0.538116615\",\"_rn_\":\"25\"},{\"1\":\"Oman\",\"2\":\"1\",\"3\":\"2.12959716\",\"4\":\"2.88622987\",\"5\":\"-2.722021794\",\"_rn_\":\"26\"},{\"1\":\"Turkey\",\"2\":\"1\",\"3\":\"0.61384977\",\"4\":\"1.77493550\",\"5\":\"1.401386127\",\"_rn_\":\"27\"},{\"1\":\"Bangladesh\",\"2\":\"2\",\"3\":\"6.18349326\",\"4\":\"-0.58998184\",\"5\":\"0.808514931\",\"_rn_\":\"28\"},{\"1\":\"China\",\"2\":\"3\",\"3\":\"-3.23659422\",\"4\":\"1.37556784\",\"5\":\"0.521048584\",\"_rn_\":\"29\"},{\"1\":\"India\",\"2\":\"1\",\"3\":\"1.81800150\",\"4\":\"1.07819827\",\"5\":\"1.747922987\",\"_rn_\":\"30\"},{\"1\":\"Korea\",\"2\":\"4\",\"3\":\"-1.46967404\",\"4\":\"-5.22549147\",\"5\":\"-1.651932383\",\"_rn_\":\"31\"},{\"1\":\"Mongolia\",\"2\":\"1\",\"3\":\"1.67300272\",\"4\":\"1.97934176\",\"5\":\"-0.052585403\",\"_rn_\":\"32\"},{\"1\":\"Pakistan\",\"2\":\"1\",\"3\":\"2.24428372\",\"4\":\"2.56907200\",\"5\":\"2.904858080\",\"_rn_\":\"33\"},{\"1\":\"Singapore\",\"2\":\"3\",\"3\":\"-5.25056428\",\"4\":\"1.56461210\",\"5\":\"-0.048777986\",\"_rn_\":\"34\"},{\"1\":\"Thailand\",\"2\":\"3\",\"3\":\"-3.05879372\",\"4\":\"0.81462641\",\"5\":\"0.027926012\",\"_rn_\":\"35\"},{\"1\":\"Algeria\",\"2\":\"1\",\"3\":\"1.75779182\",\"4\":\"2.32221009\",\"5\":\"0.405915880\",\"_rn_\":\"36\"},{\"1\":\"Botswana\",\"2\":\"2\",\"3\":\"4.48834877\",\"4\":\"1.35059836\",\"5\":\"-2.251690523\",\"_rn_\":\"37\"},{\"1\":\"Egypt\",\"2\":\"1\",\"3\":\"1.45515716\",\"4\":\"1.48375960\",\"5\":\"-1.484115076\",\"_rn_\":\"38\"},{\"1\":\"Gabon\",\"2\":\"2\",\"3\":\"5.07955834\",\"4\":\"-1.84934413\",\"5\":\"0.223023990\",\"_rn_\":\"39\"},{\"1\":\"Ghana\",\"2\":\"2\",\"3\":\"4.94529597\",\"4\":\"0.51518412\",\"5\":\"-0.679939548\",\"_rn_\":\"40\"},{\"1\":\"Libya\",\"2\":\"1\",\"3\":\"3.96906505\",\"4\":\"2.51546738\",\"5\":\"-0.550299598\",\"_rn_\":\"41\"},{\"1\":\"Morocco\",\"2\":\"1\",\"3\":\"2.33973207\",\"4\":\"1.57697751\",\"5\":\"0.620167354\",\"_rn_\":\"42\"},{\"1\":\"Namibia\",\"2\":\"2\",\"3\":\"6.78839862\",\"4\":\"1.81616353\",\"5\":\"1.811177322\",\"_rn_\":\"43\"},{\"1\":\"Sierra_Leone\",\"2\":\"5\",\"3\":\"10.11147508\",\"4\":\"-4.13640327\",\"5\":\"0.708806858\",\"_rn_\":\"44\"},{\"1\":\"South_Africa\",\"2\":\"1\",\"3\":\"1.22038392\",\"4\":\"1.07036311\",\"5\":\"0.584292394\",\"_rn_\":\"45\"},{\"1\":\"Swaziland\",\"2\":\"2\",\"3\":\"6.62089564\",\"4\":\"1.53114576\",\"5\":\"0.486213522\",\"_rn_\":\"46\"},{\"1\":\"Uganda\",\"2\":\"2\",\"3\":\"7.44759122\",\"4\":\"-0.08614119\",\"5\":\"-1.461769491\",\"_rn_\":\"47\"},{\"1\":\"Zaire\",\"2\":\"2\",\"3\":\"5.01954548\",\"4\":\"-0.14593127\",\"5\":\"-1.354022712\",\"_rn_\":\"48\"},{\"1\":\"Zimbabwe\",\"2\":\"1\",\"3\":\"2.90708292\",\"4\":\"1.53174980\",\"5\":\"-1.155638673\",\"_rn_\":\"49\"},{\"1\":\"Bulgaria\",\"2\":\"6\",\"3\":\"-5.02639603\",\"4\":\"-2.68287368\",\"5\":\"0.194600531\",\"_rn_\":\"50\"},{\"1\":\"Former_E._Germany\",\"2\":\"6\",\"3\":\"-5.36617200\",\"4\":\"-3.13019129\",\"5\":\"-0.146640390\",\"_rn_\":\"51\"},{\"1\":\"Poland\",\"2\":\"6\",\"3\":\"-4.83913984\",\"4\":\"-1.51169554\",\"5\":\"0.238889303\",\"_rn_\":\"52\"},{\"1\":\"Yugoslavia\",\"2\":\"6\",\"3\":\"-4.87765104\",\"4\":\"-0.76403413\",\"5\":\"0.653220196\",\"_rn_\":\"53\"},{\"1\":\"Byelorussia_SSR\",\"2\":\"6\",\"3\":\"-4.89387951\",\"4\":\"-1.07548768\",\"5\":\"0.052116630\",\"_rn_\":\"54\"},{\"1\":\"Argentina\",\"2\":\"3\",\"3\":\"-3.38164344\",\"4\":\"0.23391708\",\"5\":\"0.049204615\",\"_rn_\":\"55\"},{\"1\":\"Brazil\",\"2\":\"1\",\"3\":\"-0.17351090\",\"4\":\"1.80173696\",\"5\":\"0.887331423\",\"_rn_\":\"56\"},{\"1\":\"Columbia\",\"2\":\"3\",\"3\":\"-1.72504134\",\"4\":\"2.37367896\",\"5\":\"0.116914571\",\"_rn_\":\"57\"},{\"1\":\"Guyana\",\"2\":\"1\",\"3\":\"-0.64024371\",\"4\":\"2.01175992\",\"5\":\"0.650267842\",\"_rn_\":\"58\"},{\"1\":\"Peru\",\"2\":\"1\",\"3\":\"2.88979728\",\"4\":\"2.70398544\",\"5\":\"2.617485939\",\"_rn_\":\"59\"},{\"1\":\"Venezuela\",\"2\":\"3\",\"3\":\"-2.71512137\",\"4\":\"3.09958020\",\"5\":\"-0.531015134\",\"_rn_\":\"60\"},{\"1\":\"Belgium\",\"2\":\"6\",\"3\":\"-5.61006438\",\"4\":\"-2.07122472\",\"5\":\"0.103010698\",\"_rn_\":\"61\"},{\"1\":\"Denmark\",\"2\":\"6\",\"3\":\"-5.36296636\",\"4\":\"-2.80594142\",\"5\":\"-0.144208119\",\"_rn_\":\"62\"},{\"1\":\"Germany\",\"2\":\"6\",\"3\":\"-5.66618148\",\"4\":\"-2.48058100\",\"5\":\"0.085615217\",\"_rn_\":\"63\"},{\"1\":\"Ireland\",\"2\":\"6\",\"3\":\"-5.22803491\",\"4\":\"-0.94271289\",\"5\":\"-0.168083173\",\"_rn_\":\"64\"},{\"1\":\"Netherlands\",\"2\":\"6\",\"3\":\"-5.69497185\",\"4\":\"-0.81402153\",\"5\":\"0.149795861\",\"_rn_\":\"65\"},{\"1\":\"Portugal\",\"2\":\"6\",\"3\":\"-5.54867384\",\"4\":\"-1.34891130\",\"5\":\"0.526746892\",\"_rn_\":\"66\"},{\"1\":\"Sweden\",\"2\":\"6\",\"3\":\"-5.14801099\",\"4\":\"-2.19511746\",\"5\":\"-0.439370072\",\"_rn_\":\"67\"},{\"1\":\"U.K.\",\"2\":\"6\",\"3\":\"-5.14080545\",\"4\":\"-2.45732616\",\"5\":\"-0.218666957\",\"_rn_\":\"68\"},{\"1\":\"Japan\",\"2\":\"6\",\"3\":\"-6.74109078\",\"4\":\"-0.01816615\",\"5\":\"0.738650841\",\"_rn_\":\"69\"},{\"1\":\"U.S.A.\",\"2\":\"6\",\"3\":\"-4.98026088\",\"4\":\"-0.19798546\",\"5\":\"-0.186143629\",\"_rn_\":\"70\"},{\"1\":\"Bahrain\",\"2\":\"3\",\"3\":\"-2.95751794\",\"4\":\"3.40403941\",\"5\":\"-0.956027685\",\"_rn_\":\"71\"},{\"1\":\"Iraq\",\"2\":\"1\",\"3\":\"2.86550554\",\"4\":\"3.12008079\",\"5\":\"-0.806112179\",\"_rn_\":\"72\"},{\"1\":\"Jordan\",\"2\":\"1\",\"3\":\"0.78337204\",\"4\":\"3.21739659\",\"5\":\"-1.371400507\",\"_rn_\":\"73\"},{\"1\":\"Lebanon\",\"2\":\"1\",\"3\":\"-0.13242340\",\"4\":\"1.34062918\",\"5\":\"-0.430471811\",\"_rn_\":\"74\"},{\"1\":\"Saudi_Arabia\",\"2\":\"1\",\"3\":\"2.82947028\",\"4\":\"3.22903162\",\"5\":\"-0.605791417\",\"_rn_\":\"75\"},{\"1\":\"United_Arab_Emirates\",\"2\":\"3\",\"3\":\"-3.60965788\",\"4\":\"3.10639879\",\"5\":\"0.361277059\",\"_rn_\":\"76\"},{\"1\":\"Cambodia\",\"2\":\"2\",\"3\":\"6.68714487\",\"4\":\"-1.11737674\",\"5\":\"1.343455301\",\"_rn_\":\"77\"},{\"1\":\"Hong_Kong\",\"2\":\"3\",\"3\":\"-6.56814921\",\"4\":\"1.21156621\",\"5\":\"0.795955999\",\"_rn_\":\"78\"},{\"1\":\"Indonesia\",\"2\":\"1\",\"3\":\"0.59203984\",\"4\":\"1.12304477\",\"5\":\"1.306331526\",\"_rn_\":\"79\"},{\"1\":\"Malaysia\",\"2\":\"3\",\"3\":\"-1.69768174\",\"4\":\"2.74828222\",\"5\":\"-1.241072895\",\"_rn_\":\"80\"},{\"1\":\"Nepal\",\"2\":\"2\",\"3\":\"5.98051592\",\"4\":\"-0.24581105\",\"5\":\"1.734265161\",\"_rn_\":\"81\"},{\"1\":\"Philippines\",\"2\":\"1\",\"3\":\"-0.11564367\",\"4\":\"2.00054960\",\"5\":\"-0.669610455\",\"_rn_\":\"82\"},{\"1\":\"Sri_Lanka\",\"2\":\"3\",\"3\":\"-3.86669807\",\"4\":\"1.46702228\",\"5\":\"-0.073210404\",\"_rn_\":\"83\"},{\"1\":\"Vietnam\",\"2\":\"1\",\"3\":\"0.73637772\",\"4\":\"1.14664253\",\"5\":\"0.270008884\",\"_rn_\":\"84\"},{\"1\":\"Angola\",\"2\":\"5\",\"3\":\"8.67464018\",\"4\":\"-2.62832040\",\"5\":\"0.398976877\",\"_rn_\":\"85\"},{\"1\":\"Congo\",\"2\":\"2\",\"3\":\"4.71698904\",\"4\":\"-0.50507133\",\"5\":\"-1.989873503\",\"_rn_\":\"86\"},{\"1\":\"Ethiopia\",\"2\":\"5\",\"3\":\"9.02400482\",\"4\":\"-2.80509362\",\"5\":\"0.132536656\",\"_rn_\":\"87\"},{\"1\":\"Gambia\",\"2\":\"5\",\"3\":\"9.16151584\",\"4\":\"-3.21458937\",\"5\":\"0.521137723\",\"_rn_\":\"88\"},{\"1\":\"Kenya\",\"2\":\"2\",\"3\":\"4.37728422\",\"4\":\"1.48515306\",\"5\":\"-1.740964552\",\"_rn_\":\"89\"},{\"1\":\"Malawi\",\"2\":\"5\",\"3\":\"9.25868839\",\"4\":\"-5.46422766\",\"5\":\"-0.742329819\",\"_rn_\":\"90\"},{\"1\":\"Mozambique\",\"2\":\"5\",\"3\":\"8.17837256\",\"4\":\"-1.74864060\",\"5\":\"1.141424236\",\"_rn_\":\"91\"},{\"1\":\"Nigeria\",\"2\":\"2\",\"3\":\"6.80523311\",\"4\":\"-0.35943688\",\"5\":\"-0.827233974\",\"_rn_\":\"92\"},{\"1\":\"Somalia\",\"2\":\"5\",\"3\":\"9.02055241\",\"4\":\"-2.47121452\",\"5\":\"-0.274058230\",\"_rn_\":\"93\"},{\"1\":\"Sudan\",\"2\":\"2\",\"3\":\"6.19772237\",\"4\":\"-0.74977705\",\"5\":\"-0.138778600\",\"_rn_\":\"94\"},{\"1\":\"Tunisia\",\"2\":\"1\",\"3\":\"-0.26827112\",\"4\":\"2.17721533\",\"5\":\"0.042802627\",\"_rn_\":\"95\"},{\"1\":\"Tanzania\",\"2\":\"2\",\"3\":\"7.01894686\",\"4\":\"0.75977710\",\"5\":\"-0.855439352\",\"_rn_\":\"96\"},{\"1\":\"Zambia\",\"2\":\"2\",\"3\":\"5.90158841\",\"4\":\"0.55264060\",\"5\":\"-2.233552693\",\"_rn_\":\"97\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\\normalsize\n\n## What's in there; making a plot\n\n-   `d` contains country names, cluster memberships and discriminant\n    scores.\n-   Plot `LD1` against `LD2`, colouring points by cluster and labelling\n    by country:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggplot(d, aes(\n  x = LD1, y = LD2, colour = factor(cluster),\n  label = country\n)) + geom_point() +\n  geom_text_repel(size = 2, max.overlaps = Inf) + guides(colour = \"none\")\n```\n:::\n\n\n\n\n## The plot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng\n```\n\n::: {.cell-output-display}\n![](cluster_files/figure-revealjs/bCluster-66-1.png){width=960}\n:::\n:::\n\n\n\n\nIt would be better to zoom in on parts of this plot.\n\n## Final example: a hockey league\n\n-   An Ontario hockey league has teams in 21 cities. How can we arrange\n    those teams into 4 geographical divisions?\n\n-   Distance data in spreadsheet.\n\n-   Take out spaces in team names.\n\n-   Save as \"text/csv\".\n\n-   Distances, so back to `hclust`.\n\n## A map\n\n![](map1.png)\n\n## Attempt 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_url <- \n  \"http://ritsokiguess.site/datafiles/ontario-road-distances.csv\"\nontario <- read_csv(my_url)\nontario.d <- ontario %>% select(-1) %>% as.dist()\nontario.hc <- hclust(ontario.d, method = \"ward.D\")\n```\n:::\n\n\n\n\n## Plot, with 4 clusters\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ontario.hc)\nrect.hclust(ontario.hc, 4)\n```\n\n::: {.cell-output-display}\n![](cluster_files/figure-revealjs/bCluster-68-1.png){width=960}\n:::\n:::\n\n\n\n\n## Comments\n\n-   Can't have divisions of 1 team!\n\n-   \"Southern\" divisions way too big!\n\n-   Try splitting into more. I found 7 to be good:\n\n## Seven clusters\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ontario.hc)\nrect.hclust(ontario.hc, 7)\n```\n\n::: {.cell-output-display}\n![](cluster_files/figure-revealjs/bCluster-69-1.png){width=960}\n:::\n:::\n\n\n\n\n## Divisions now\n\n-   I want to put Huntsville and North Bay together with northern teams.\n\n-   I'll put the Eastern teams together. Gives:\n\n-   North: Sault Ste Marie, Sudbury, Huntsville, North Bay\n\n-   East: Brockville, Cornwall, Ottawa, Peterborough, Belleville,\n    Kingston\n\n-   West: Windsor, London, Sarnia\n\n-   Central: Owen Sound, Barrie, Toronto, Niagara Falls, St Catharines,\n    Brantford, Hamilton, Kitchener\n\n-   Getting them same size beyond us!\n\n## Another map\n\n![](map2.png)\n",
    "supporting": [
      "cluster_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"cluster_files/libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"cluster_files/libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}