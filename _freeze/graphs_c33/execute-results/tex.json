{
  "hash": "06aa5e197e812d915372eda6cd51510e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Drawing graphs\"\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n\n## Our data\n\n-   To illustrate making graphs, we need some data.\n-   Data on 202 male and female athletes at the Australian Institute of\n    Sport.\n-   Variables:\n    -   categorical: Sex of athlete, sport they play\n    -   quantitative: height (cm), weight (kg), lean body mass, red and\n        white blood cell counts, haematocrit and haemoglobin (blood),\n        ferritin concentration, body mass index, percent body fat.\n-   Values separated by tabs (which impacts reading in).\n\n## Packages for this section\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n\n## Reading data into R\n\n-   Use `read_tsv` (\"tab-separated values\"), like `read_csv`.\n-   Data in `ais.txt`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_url <- \"http://ritsokiguess.site/datafiles/ais.txt\"\nathletes <- read_tsv(my_url)\n```\n:::\n\n\n\n\n## The data (some)\n\n\\small\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nathletes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 202 x 13\n   Sex    Sport     RCC   WCC    Hc    Hg  Ferr   BMI   SSF\n   <chr>  <chr>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1 female Netball  4.56  13.3  42.2  13.6    20  19.2  49  \n 2 female Netball  4.15   6    38    12.7    59  21.2 110. \n 3 female Netball  4.16   7.6  37.5  12.3    22  21.4  89  \n 4 female Netball  4.32   6.4  37.7  12.3    30  21.0  98.3\n 5 female Netball  4.06   5.8  38.7  12.8    78  21.8 122. \n 6 female Netball  4.12   6.1  36.6  11.8    21  21.4  90.4\n 7 female Netball  4.17   5    37.4  12.7   109  21.5 107. \n 8 female Netball  3.8    6.6  36.5  12.4   102  24.4 157. \n 9 female Netball  3.96   5.5  36.3  12.4    71  22.6 101. \n10 female Netball  4.44   9.7  41.4  14.1    64  22.8 126. \n# i 192 more rows\n# i 4 more variables: `%Bfat` <dbl>, LBM <dbl>, Ht <dbl>,\n#   Wt <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n\\normalsize\n\n## Types of graph {.smaller}\n\nDepends on number and type of variables:\n\n| Categorical | Quantitative | Graph                                                       |\n|-------------:|-------------:|:-------------------------------------------|\n|           1 |            0 | bar chart                                                   |\n|           0 |            1 | histogram                                                   |\n|           2 |            0 | grouped bar charts                                          |\n|           1 |            1 | side-by-side boxplots                                       |\n|           0 |            2 | scatterplot                                                 |\n|           2 |            1 | grouped boxplots                                            |\n|           1 |            2 | scatterplot with points identified by group (eg. by colour) |\n\nWith more (categorical) variables, might want *separate plots by\ngroups*. This is called `facetting` in R.\n\n## `ggplot`\n\n-   R has a standard graphing procedure `ggplot`, that we use for all\n    our graphs.\n-   Use in different ways to get precise graph we want.\n-   Let's start with bar chart of the sports played by the athletes.\n\n## Bar chart\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Sport)) + geom_bar()\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/graphs-R-4-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## Histogram of body mass index\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = BMI)) + geom_histogram(bins = 10)\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/graphs-R-5-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## Which sports are played by males and females?\n\nGrouped bar chart:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Sport, fill = Sex)) +\n  geom_bar(position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/graphs-R-6-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## BMI by gender\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Sex, y = BMI)) + geom_boxplot() \n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/graphs-R-7-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## Height vs. weight\n\nScatterplot:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Ht, y = Wt)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/graphs-R-8-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## With regression line\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Ht, y = Wt)) +\n  geom_point() + geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/graphs-R-9-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## BMI by sport and gender\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Sport, y = BMI, fill = Sex)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/graphs-R-10-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## Or...\n\nA variation that uses `colour` instead of `fill`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Sport, y = BMI, colour = Sex)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/unnamed-chunk-3-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## Height and weight by gender\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Ht, y = Wt, colour = Sex)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/unnamed-chunk-4-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## Height by weight by gender for each sport, with facets\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Ht, y = Wt, colour = Sex)) +\n  geom_point() + facet_wrap(~Sport)\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/graphs-R-12-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## Filling each facet\n\nDefault uses same scale for each facet. To use different scales for each\nfacet, this:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Ht, y = Wt, colour = Sex)) +\n  geom_point() + facet_wrap(~Sport, scales = \"free\")\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/graphs-R-13-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## Another view of height vs weight\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Ht, y = Wt)) +\n  geom_point() + facet_wrap(~ Sex)\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/unnamed-chunk-5-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n## Normal quantile plot\n\nFor assessing whether a column has a normal distribution or not:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(sample = BMI)) + stat_qq() + \n  stat_qq_line()\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/unnamed-chunk-6-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n## Comments\n\n- Data on $y$-axis\n- on $x$-axis, the $z$-scores you would expect if normal distribution correct\n- if the points follow the line, distribution is normal\n- the way in which the points *don't* follow line tell you about how the distribution is not normal\n- in this case, the highest values are too high (long upper tail).\n\n## Facetting\n\nMale and female athletes' BMI separately:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(sample = BMI)) + stat_qq() + \n  stat_qq_line() + facet_wrap(~ Sex)\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/unnamed-chunk-7-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## Comments\n\n- The distribution of BMI for females is closer to normal, with only the highest few values being too high\n- The distribution of BMI values for males might even be right-skewed: not only are the upper values too high, but some of the lowest ones are not low enough.\n\n## More normal quantile plots\n\n-   How straight does a normal quantile plot have to be?\n-   There is randomness in real data, so even a normal quantile plot\n    from normal data won't look perfectly straight.\n-   With a small sample, can look not very straight even from normal\n    data.\n-   Looking for systematic departure from a straight line; random\n    wiggles ought not to concern us.\n-   Look at some examples where we know the answer, so that we can see\n    what to expect.\n\n## Normal data, large sample\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tibble(x=rnorm(200))\nggplot(d, aes(x=x)) + geom_histogram(bins=10)\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/inference-4a-R-11-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## The normal quantile plot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(d,aes(sample=x))+stat_qq()+stat_qq_line()\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/inference-4a-R-12-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## Normal data, small sample\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n-   Not so convincingly normal, but not obviously skewed:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tibble(x=rnorm(20))\nggplot(d, aes(x=x)) + geom_histogram(bins=5)\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/normal-small-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## The normal quantile plot\n\nGood, apart from the highest and lowest points being slightly off. I'd\ncall this good:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(d, aes(sample=x)) + stat_qq() + stat_qq_line()\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/inference-4a-R-14-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## Chi-squared data, *df* = 10\n\nSomewhat skewed to right:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tibble(x=rchisq(100, 10))\nggplot(d,aes(x=x)) + geom_histogram(bins=10)\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/inference-4a-R-15-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## The normal quantile plot\n\nSomewhat opening-up curve:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(d,aes(sample=x))+stat_qq()+stat_qq_line()\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/inference-4a-R-16-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## Chi-squared data, df = 3\n\nDefinitely skewed to right:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tibble(x=rchisq(100, 3))\nggplot(d, aes(x=x)) + geom_histogram(bins=10)\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/chisq-small-df-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## The normal quantile plot\n\nClear upward-opening curve:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(d,aes(sample=x))+stat_qq()+stat_qq_line()\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/inference-4a-R-17-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## t-distributed data, df = 3\n\nLong tails (or a very sharp peak):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tibble(x=rt(300, 3))\nggplot(d, aes(x=x)) + geom_histogram(bins=15)\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/t-small-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## The normal quantile plot\n\nLow values too low and high values too high for normal.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(d,aes(sample=x))+stat_qq()+stat_qq_line()\n```\n\n::: {.cell-output-display}\n![](graphs_c33_files/figure-beamer/inference-4a-R-18-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## Summary\n\nOn a normal quantile plot:\n\n-   points following line (with some small wiggles): normal.\n-   kind of deviation from a straight line indicates kind of\n    nonnormality:\n    -   a few highest point(s) too high and/or lowest too low: outliers\n    -   else see how points at each end off the line:\n\n|                | High points |              |\n|----------------|-------------|--------------|\n| **Low points** | **Too low** | **Too high** |\n| **Too low**    | Skewed left | Long tails   |\n| **Too high**   | Short tails | Skewed right |\n\n",
    "supporting": [
      "graphs_c33_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}